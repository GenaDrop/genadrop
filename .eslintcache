[{"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/index.js":"1","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.context.js":"2","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/App.js":"3","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/loading/loading.jsx":"4","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.reducer.js":"5","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/artist/artist.js":"6","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/docs/docsEmbed.jsx":"7","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Partner/Partner.jsx":"8","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/camera/Camera.jsx":"9","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pitch/Pitch.jsx":"10","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Session/Session.jsx":"11","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/welcome/welcome.jsx":"12","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/fallback/fallback.jsx":"13","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pricing/Pricing.jsx":"14","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Explore.jsx":"15","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/collections/collections.jsx":"16","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/preview.jsx":"17","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/dashboard/dashboard.jsx":"18","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/singleNftCollection/singleNftCollection.jsx":"19","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/profile/profile.jsx":"20","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/listNFT/list.jsx":"21","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/collectionNFT/collectionNFT.jsx":"22","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/overlay/overlay.jsx":"23","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/footer/footer.jsx":"24","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Navbar/Navbar.jsx":"25","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/delete-prompt/prompt.jsx":"26","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Notification/Notification.jsx":"27","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/singleNFT/singleNFT.jsx":"28","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/clipboard/clipboard.jsx":"29","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Switch-Wallet-Notification/SwitchWalletNotification.jsx":"30","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Marketplace/Marketplace.jsx":"31","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Loader/Loader.jsx":"32","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/error-boundary/error-boundary.jsx":"33","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/home/home.jsx":"34","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/mint/mint.jsx":"35","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/create/create.jsx":"36","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pricing/Success-Plan/SuccessPlan.jsx":"37","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pricing/Failed-Plan/FailedPlan.jsx":"38","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/store-data/StoreData.jsx":"39","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/userDashboard/singleNFT/singleNFT.jsx":"40","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/userDashboard/listNFT/listed.jsx":"41","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Session-Modal/SessionModal.jsx":"42","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/minter/minter.jsx":"43","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Upgrade-Modal/UpgradeModal.jsx":"44","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/collection-single/collection-single.jsx":"45","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/fetch-data/fetchData.component.jsx":"46","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.types.js":"47","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.utils.js":"48","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/artist/Join/Join.js":"49","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/artist/HeroSection/HeroSection.js":"50","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/store-data/StoreData.script.js":"51","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.actions.js":"52","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pricing/Pricing.script.js":"53","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/store-data/StoreDataLocal.js":"54","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Explore-script.js":"55","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/google-auth/googleAuth.script.js":"56","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/menu/collection-menu-script.js":"57","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/fetch-data/fetchData-script.js":"58","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/collection-single/collection-single-script.js":"59","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/pitch-lock/pitchLock.jsx":"60","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Session/No-Result/NoResult.jsx":"61","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/firebase.js":"62","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/graphqlClient.js":"63","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/google-auth/googleAuth.jsx":"64","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Pricing-Modal/PricingModal.jsx":"65","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/create/Progress-Bar/ProgressBar.jsx":"66","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/graphql/querries/getCollections.js":"67","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/minter/minter-script.js":"68","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/profile-dropdown/profileDropdown.jsx":"69","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/create-guide/create-guide.jsx":"70","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Collection-Name-Modal/CollectionNameModal.jsx":"71","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Filter/Filter.jsx":"72","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Menu/Menu.jsx":"73","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Header/Header.jsx":"74","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/Capture/Capture.jsx":"75","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/supportedChains.js":"76","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Login-Modal/LoginModal.jsx":"77","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/ProfileImgOverlay/ProfileImgOverlay.js":"78","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/description/collection-description.jsx":"79","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/fetch-data/fetchUserGraphData.js":"80","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Subscription-Notification/SubscriptionNotification.jsx":"81","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/overview/collection-overview.jsx":"82","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/layerorders/layerorders.jsx":"83","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Price-dropdown/priceDropdown.jsx":"84","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Search-bar/searchBar.component.jsx":"85","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/wallet/wallet-script.js":"86","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/popup/popup.component.jsx":"87","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/collection-preview/collectionPreview.jsx":"88","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Genadrop-Tooltip/GenadropTooltip.jsx":"89","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/index.js":"90","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/Attribute/Attribute.jsx":"91","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/history/search.jsx":"92","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/arc_ipfs.js":"93","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/dropItem/dropItem.jsx":"94","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/chainConnect.js":"95","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/overview/collection-overview-script.js":"96","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/layerorders/layeroders-script.js":"97","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/graph/graph.jsx":"98","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/copy/copy.jsx":"99","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/description/collection-description-script.js":"100","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/webcam-enable/webcamEnable.jsx":"101","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/Capture/useTimer.js":"102","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/layerorders/Layer-Input/LayerInput.jsx":"103","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/menu/collection-menu.jsx":"104","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/layer/layer.jsx":"105","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/rulesCard/rulesCard.component.jsx":"106","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/preview/collection-preview.jsx":"107","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/details/collection-details.jsx":"108","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/popup/error-popup.component.jsx":"109","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/create-guide/create-guide-script.js":"110","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/attribute-overlay/attributeOverlay.jsx":"111","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/popup/success-popup.component.jsx":"112","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/arc_config.js":"113","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/history/userInput.jsx":"114","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/NftCard/NftCard.jsx":"115","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/history/table.jsx":"116","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Dropdown/Dropdown.jsx":"117","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Pricing-Modal/PaypalButton.jsx":"118","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/Capture/interval.js":"119","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/Capture/Camera/index.js":"120","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/preview/collection-preview-script.js":"121","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/early-access/early-access.jsx":"122","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Camera-Mint/CameraMint.jsx":"123","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Join-Discord/JoinDiscord.jsx":"124","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Docs/Docs.jsx":"125","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Genadrop-Created-NFTs/GenadropCreatedNFTs.jsx":"126","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/history/tableRow.jsx":"127","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Genadrop-Carousel-Card/GenadropCarouselCard.jsx":"128","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/transactionDetails/TransactionDetails.jsx":"129","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/art-card/art-card.jsx":"130","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/error-boundary/Error.jsx":"131","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/FAQ/FAQ.jsx":"132","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/footer/footer-script.js":"133","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Orgs/Orgs.jsx":"134","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Review/Review.jsx":"135","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Features/Features.jsx":"136","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Banner/Banner.jsx":"137","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/New-Listing/NewListing.jsx":"138","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Chains/Chains.jsx":"139","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Banner/Banner.jsx":"140","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/SingleNft/SingleNft.jsx":"141","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/profile/profile-script.js":"142","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Collections/Collections.jsx":"143","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/similarNFTs/similarNFTs.jsx":"144","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/wallet/wallet.jsx":"145","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Search/Search.jsx":"146","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/collection/nft.jsx":"147","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/not-found/notFound.jsx":"148","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Chain-dropdown/chainDropdown.jsx":"149","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/collectionsCard/collectionsCard.jsx":"150","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/page-control/pageControl.jsx":"151","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/art-card/artCard.jsx":"152","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/sidebar/sidebar.jsx":"153","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/selected-gif-art/selectedGifArt.jsx":"154","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/gif-modal/gifModal.jsx":"155","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Features/Feature-Script.js":"156","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/navbar/navbar.jsx":"157","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/FAQ/FAQCard.jsx":"158","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Search/Search-script.js":"159","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Genadrop-Carousel-Screen/GenadropCarouselScreen.jsx":"160","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Date-Filter/DateFilter.jsx":"161","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Review/Reviews-Script.js":"162","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Chains/Chains-Script.js":"163","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/wallet-popup/walletPopup.jsx":"164","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/preview-script.js":"165","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/index2.js":"166","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/text-editor.jsx":"167","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/gif-card/gifCard.jsx":"168"},{"size":596,"mtime":1663254006103,"results":"169","hashOfConfig":"170"},{"size":2803,"mtime":1663252785360,"results":"171","hashOfConfig":"170"},{"size":5465,"mtime":1663257569030,"results":"172","hashOfConfig":"170"},{"size":414,"mtime":1663252785474,"results":"173","hashOfConfig":"170"},{"size":11384,"mtime":1663257569601,"results":"174","hashOfConfig":"170"},{"size":451,"mtime":1663252785450,"results":"175","hashOfConfig":"170"},{"size":343,"mtime":1663252785467,"results":"176","hashOfConfig":"170"},{"size":500,"mtime":1663252785443,"results":"177","hashOfConfig":"170"},{"size":274,"mtime":1663252785459,"results":"178","hashOfConfig":"170"},{"size":1024,"mtime":1663252785444,"results":"179","hashOfConfig":"170"},{"size":7596,"mtime":1663252785449,"results":"180","hashOfConfig":"170"},{"size":670,"mtime":1663252785491,"results":"181","hashOfConfig":"170"},{"size":1317,"mtime":1663252785468,"results":"182","hashOfConfig":"170"},{"size":4249,"mtime":1663252785446,"results":"183","hashOfConfig":"170"},{"size":6838,"mtime":1663257569604,"results":"184","hashOfConfig":"170"},{"size":8240,"mtime":1663257569629,"results":"185","hashOfConfig":"170"},{"size":4287,"mtime":1663257569644,"results":"186","hashOfConfig":"170"},{"size":11913,"mtime":1663257569633,"results":"187","hashOfConfig":"170"},{"size":7993,"mtime":1663257569650,"results":"188","hashOfConfig":"170"},{"size":6655,"mtime":1663257569647,"results":"189","hashOfConfig":"170"},{"size":9296,"mtime":1663257569636,"results":"190","hashOfConfig":"170"},{"size":18121,"mtime":1663257569627,"results":"191","hashOfConfig":"170"},{"size":673,"mtime":1663252785075,"results":"192","hashOfConfig":"170"},{"size":2824,"mtime":1663252785058,"results":"193","hashOfConfig":"170"},{"size":3293,"mtime":1663252785033,"results":"194","hashOfConfig":"170"},{"size":1252,"mtime":1663252785052,"results":"195","hashOfConfig":"170"},{"size":2314,"mtime":1663252785041,"results":"196","hashOfConfig":"170"},{"size":16875,"mtime":1663257569648,"results":"197","hashOfConfig":"170"},{"size":2386,"mtime":1663252785049,"results":"198","hashOfConfig":"170"},{"size":1367,"mtime":1663252785044,"results":"199","hashOfConfig":"170"},{"size":946,"mtime":1663257569612,"results":"200","hashOfConfig":"170"},{"size":539,"mtime":1663252784989,"results":"201","hashOfConfig":"170"},{"size":565,"mtime":1663252785057,"results":"202","hashOfConfig":"170"},{"size":986,"mtime":1663257569634,"results":"203","hashOfConfig":"170"},{"size":2740,"mtime":1663354606905,"results":"204","hashOfConfig":"170"},{"size":5312,"mtime":1663257569632,"results":"205","hashOfConfig":"170"},{"size":5020,"mtime":1663257569624,"results":"206","hashOfConfig":"170"},{"size":1379,"mtime":1663257569621,"results":"207","hashOfConfig":"170"},{"size":4465,"mtime":1663252785494,"results":"208","hashOfConfig":"170"},{"size":13929,"mtime":1663257569652,"results":"209","hashOfConfig":"170"},{"size":3908,"mtime":1663257569651,"results":"210","hashOfConfig":"170"},{"size":3029,"mtime":1663257569567,"results":"211","hashOfConfig":"170"},{"size":17711,"mtime":1663354605213,"results":"212","hashOfConfig":"170"},{"size":2688,"mtime":1663257569568,"results":"213","hashOfConfig":"170"},{"size":8039,"mtime":1663257569556,"results":"214","hashOfConfig":"170"},{"size":7655,"mtime":1663257569655,"results":"215","hashOfConfig":"170"},{"size":3006,"mtime":1663252785361,"results":"216","hashOfConfig":"170"},{"size":3867,"mtime":1663252785362,"results":"217","hashOfConfig":"170"},{"size":626,"mtime":1663252785047,"results":"218","hashOfConfig":"170"},{"size":900,"mtime":1663252785046,"results":"219","hashOfConfig":"170"},{"size":14038,"mtime":1663252785495,"results":"220","hashOfConfig":"170"},{"size":8092,"mtime":1663252785360,"results":"221","hashOfConfig":"170"},{"size":3286,"mtime":1663257569623,"results":"222","hashOfConfig":"170"},{"size":6046,"mtime":1663252785495,"results":"223","hashOfConfig":"170"},{"size":1135,"mtime":1663257569603,"results":"224","hashOfConfig":"170"},{"size":1485,"mtime":1663257569584,"results":"225","hashOfConfig":"170"},{"size":3930,"mtime":1663252785067,"results":"226","hashOfConfig":"170"},{"size":2012,"mtime":1663257569654,"results":"227","hashOfConfig":"170"},{"size":5795,"mtime":1663252785014,"results":"228","hashOfConfig":"170"},{"size":1786,"mtime":1663252785078,"results":"229","hashOfConfig":"170"},{"size":1394,"mtime":1663252785448,"results":"230","hashOfConfig":"170"},{"size":9370,"mtime":1663257569657,"results":"231","hashOfConfig":"170"},{"size":3739,"mtime":1663257569657,"results":"232","hashOfConfig":"170"},{"size":1491,"mtime":1663252785060,"results":"233","hashOfConfig":"170"},{"size":4413,"mtime":1663257569565,"results":"234","hashOfConfig":"170"},{"size":1014,"mtime":1663252785464,"results":"235","hashOfConfig":"170"},{"size":5476,"mtime":1663257569602,"results":"236","hashOfConfig":"170"},{"size":2544,"mtime":1663354603950,"results":"237","hashOfConfig":"170"},{"size":1804,"mtime":1663252785080,"results":"238","hashOfConfig":"170"},{"size":6871,"mtime":1663252785051,"results":"239","hashOfConfig":"170"},{"size":2457,"mtime":1663252785022,"results":"240","hashOfConfig":"170"},{"size":7922,"mtime":1663257569606,"results":"241","hashOfConfig":"170"},{"size":1358,"mtime":1663257569611,"results":"242","hashOfConfig":"170"},{"size":5288,"mtime":1663257569607,"results":"243","hashOfConfig":"170"},{"size":14976,"mtime":1663257569589,"results":"244","hashOfConfig":"170"},{"size":4251,"mtime":1663257569662,"results":"245","hashOfConfig":"170"},{"size":1517,"mtime":1663257569563,"results":"246","hashOfConfig":"170"},{"size":1592,"mtime":1663252785009,"results":"247","hashOfConfig":"170"},{"size":4845,"mtime":1663257569582,"results":"248","hashOfConfig":"170"},{"size":3979,"mtime":1663257569655,"results":"249","hashOfConfig":"170"},{"size":2139,"mtime":1663257569574,"results":"250","hashOfConfig":"170"},{"size":4057,"mtime":1663257569590,"results":"251","hashOfConfig":"170"},{"size":6858,"mtime":1663257569586,"results":"252","hashOfConfig":"170"},{"size":3110,"mtime":1663257569548,"results":"253","hashOfConfig":"170"},{"size":1034,"mtime":1663257569549,"results":"254","hashOfConfig":"170"},{"size":8984,"mtime":1663257569599,"results":"255","hashOfConfig":"170"},{"size":589,"mtime":1663252785020,"results":"256","hashOfConfig":"170"},{"size":5497,"mtime":1663252785011,"results":"257","hashOfConfig":"170"},{"size":1380,"mtime":1663252784976,"results":"258","hashOfConfig":"170"},{"size":25143,"mtime":1663257569658,"results":"259","hashOfConfig":"170"},{"size":830,"mtime":1663252785007,"results":"260","hashOfConfig":"170"},{"size":1033,"mtime":1663252785037,"results":"261","hashOfConfig":"170"},{"size":55166,"mtime":1663438258505,"results":"262","hashOfConfig":"170"},{"size":1558,"mtime":1663252785035,"results":"263","hashOfConfig":"170"},{"size":2851,"mtime":1663257569656,"results":"264","hashOfConfig":"170"},{"size":282,"mtime":1663252785076,"results":"265","hashOfConfig":"170"},{"size":404,"mtime":1663257569586,"results":"266","hashOfConfig":"170"},{"size":1284,"mtime":1663257569570,"results":"267","hashOfConfig":"170"},{"size":951,"mtime":1663252785050,"results":"268","hashOfConfig":"170"},{"size":6219,"mtime":1663257569580,"results":"269","hashOfConfig":"170"},{"size":973,"mtime":1663252785073,"results":"270","hashOfConfig":"170"},{"size":720,"mtime":1663252785073,"results":"271","hashOfConfig":"170"},{"size":844,"mtime":1663252785063,"results":"272","hashOfConfig":"170"},{"size":3249,"mtime":1663252785068,"results":"273","hashOfConfig":"170"},{"size":2452,"mtime":1663252785062,"results":"274","hashOfConfig":"170"},{"size":2614,"mtime":1663252785082,"results":"275","hashOfConfig":"170"},{"size":1973,"mtime":1663252785080,"results":"276","hashOfConfig":"170"},{"size":1192,"mtime":1663252785055,"results":"277","hashOfConfig":"170"},{"size":1037,"mtime":1663252785020,"results":"278","hashOfConfig":"170"},{"size":656,"mtime":1663252785051,"results":"279","hashOfConfig":"170"},{"size":1611,"mtime":1663252785010,"results":"280","hashOfConfig":"170"},{"size":2669,"mtime":1663257569560,"results":"281","hashOfConfig":"170"},{"size":828,"mtime":1663252785497,"results":"282","hashOfConfig":"170"},{"size":241,"mtime":1663252785039,"results":"283","hashOfConfig":"170"},{"size":4533,"mtime":1663257569547,"results":"284","hashOfConfig":"170"},{"size":758,"mtime":1663257569572,"results":"285","hashOfConfig":"170"},{"size":858,"mtime":1663257569602,"results":"286","hashOfConfig":"170"},{"size":899,"mtime":1663252785024,"results":"287","hashOfConfig":"170"},{"size":275,"mtime":1663252785072,"results":"288","hashOfConfig":"170"},{"size":10338,"mtime":1663257569588,"results":"289","hashOfConfig":"170"},{"size":803,"mtime":1663252785079,"results":"290","hashOfConfig":"170"},{"size":793,"mtime":1663252784988,"results":"291","hashOfConfig":"170"},{"size":717,"mtime":1663257569520,"results":"292","hashOfConfig":"170"},{"size":696,"mtime":1663257569528,"results":"293","hashOfConfig":"170"},{"size":840,"mtime":1663252784980,"results":"294","hashOfConfig":"170"},{"size":1673,"mtime":1663257569527,"results":"295","hashOfConfig":"170"},{"size":3781,"mtime":1663252785038,"results":"296","hashOfConfig":"170"},{"size":2955,"mtime":1663257569517,"results":"297","hashOfConfig":"170"},{"size":5854,"mtime":1663252785085,"results":"298","hashOfConfig":"170"},{"size":5368,"mtime":1663257569574,"results":"299","hashOfConfig":"170"},{"size":1199,"mtime":1663252785056,"results":"300","hashOfConfig":"170"},{"size":3341,"mtime":1663252784980,"results":"301","hashOfConfig":"170"},{"size":2911,"mtime":1663257569583,"results":"302","hashOfConfig":"170"},{"size":1548,"mtime":1663257569529,"results":"303","hashOfConfig":"170"},{"size":4644,"mtime":1663257569530,"results":"304","hashOfConfig":"170"},{"size":2013,"mtime":1663257569526,"results":"305","hashOfConfig":"170"},{"size":2403,"mtime":1663257569520,"results":"306","hashOfConfig":"170"},{"size":3823,"mtime":1663257569545,"results":"307","hashOfConfig":"170"},{"size":2145,"mtime":1663257569537,"results":"308","hashOfConfig":"170"},{"size":2368,"mtime":1663257569531,"results":"309","hashOfConfig":"170"},{"size":2674,"mtime":1663257569550,"results":"310","hashOfConfig":"170"},{"size":2742,"mtime":1663257569646,"results":"311","hashOfConfig":"170"},{"size":2902,"mtime":1663257569538,"results":"312","hashOfConfig":"170"},{"size":3624,"mtime":1663257569594,"results":"313","hashOfConfig":"170"},{"size":5782,"mtime":1663257569599,"results":"314","hashOfConfig":"170"},{"size":3476,"mtime":1663257569573,"results":"315","hashOfConfig":"170"},{"size":1922,"mtime":1663252785035,"results":"316","hashOfConfig":"170"},{"size":402,"mtime":1663252785074,"results":"317","hashOfConfig":"170"},{"size":3084,"mtime":1663257569535,"results":"318","hashOfConfig":"170"},{"size":4175,"mtime":1663257569552,"results":"319","hashOfConfig":"170"},{"size":889,"mtime":1663252785479,"results":"320","hashOfConfig":"170"},{"size":2902,"mtime":1663252785476,"results":"321","hashOfConfig":"170"},{"size":6474,"mtime":1663252785483,"results":"322","hashOfConfig":"170"},{"size":960,"mtime":1663252785482,"results":"323","hashOfConfig":"170"},{"size":1670,"mtime":1663252785477,"results":"324","hashOfConfig":"170"},{"size":1347,"mtime":1663257569525,"results":"325","hashOfConfig":"170"},{"size":1414,"mtime":1663257569641,"results":"326","hashOfConfig":"170"},{"size":915,"mtime":1663257569524,"results":"327","hashOfConfig":"170"},{"size":749,"mtime":1663257569572,"results":"328","hashOfConfig":"170"},{"size":3658,"mtime":1663257569518,"results":"329","hashOfConfig":"170"},{"size":778,"mtime":1663257569543,"results":"330","hashOfConfig":"170"},{"size":1675,"mtime":1663252784988,"results":"331","hashOfConfig":"170"},{"size":1415,"mtime":1663257569537,"results":"332","hashOfConfig":"170"},{"size":4845,"mtime":1663257569598,"results":"333","hashOfConfig":"170"},{"size":9151,"mtime":1663257569644,"results":"334","hashOfConfig":"170"},{"size":5262,"mtime":1663257569660,"results":"335","hashOfConfig":"170"},{"size":1340,"mtime":1663252785483,"results":"336","hashOfConfig":"170"},{"size":2250,"mtime":1663252785477,"results":"337","hashOfConfig":"170"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"341"},"egi6uj",{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"341"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"341"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"341"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":3,"source":"365","usedDeprecatedRules":"341"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":6,"source":"372","usedDeprecatedRules":"341"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"341"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":4,"source":"378","usedDeprecatedRules":"341"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"341"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"384","usedDeprecatedRules":"341"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":4,"source":"387","usedDeprecatedRules":"341"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"341"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":2,"source":"393","usedDeprecatedRules":"341"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"396","usedDeprecatedRules":"341"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"341"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"341"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"409","usedDeprecatedRules":"341"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"341"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"341"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"341"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":1,"source":"429","usedDeprecatedRules":"341"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":6,"source":"432","usedDeprecatedRules":"341"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":9,"source":"435","usedDeprecatedRules":"341"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"438","usedDeprecatedRules":"341"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"441","usedDeprecatedRules":"341"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":2,"source":"444","usedDeprecatedRules":"341"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"447","usedDeprecatedRules":"341"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":2,"source":"450","usedDeprecatedRules":"341"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":8,"source":"453","usedDeprecatedRules":"341"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":4,"source":"456","usedDeprecatedRules":"341"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"341"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"462","usedDeprecatedRules":"341"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"467","usedDeprecatedRules":"341"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":67,"fixableErrorCount":0,"fixableWarningCount":15,"source":"474","usedDeprecatedRules":"341"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"341"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"482","usedDeprecatedRules":"341"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"341"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"341"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":10,"source":"491","usedDeprecatedRules":"341"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"341"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":2,"source":"501","usedDeprecatedRules":"341"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":2,"source":"504","usedDeprecatedRules":"341"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"509","usedDeprecatedRules":"341"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":4,"source":"512","usedDeprecatedRules":"341"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"515","usedDeprecatedRules":"341"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"520","usedDeprecatedRules":"341"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":2,"source":"523","usedDeprecatedRules":"341"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"526","usedDeprecatedRules":"341"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"529","usedDeprecatedRules":"341"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"341"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"341"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"341"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"341"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"550","usedDeprecatedRules":"341"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"341"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":"556","usedDeprecatedRules":"341"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"341"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"341"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":4,"source":"569","usedDeprecatedRules":"341"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"341"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"341"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"578","usedDeprecatedRules":"341"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":1,"source":"581","usedDeprecatedRules":"341"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"586","usedDeprecatedRules":"341"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":117,"fixableErrorCount":0,"fixableWarningCount":46,"source":null},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"341"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"341"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":5,"source":"601","usedDeprecatedRules":"341"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":3,"source":"606","usedDeprecatedRules":"341"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"341"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"341"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"617","usedDeprecatedRules":"341"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"341"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"341"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"341"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"341"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"341"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"341"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"341"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":2,"source":"641","usedDeprecatedRules":"341"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"341"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"341"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"656","usedDeprecatedRules":"341"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"341"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"341"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":11,"source":"677","usedDeprecatedRules":"341"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":2,"source":"680","usedDeprecatedRules":"341"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":8,"source":"683","usedDeprecatedRules":"341"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"341"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"689","usedDeprecatedRules":"341"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"341"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"341"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"341"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"341"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"708","usedDeprecatedRules":"341"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"711","usedDeprecatedRules":"341"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":5,"source":"714","usedDeprecatedRules":"341"},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"341"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":3,"source":"720","usedDeprecatedRules":"341"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"341"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":16,"source":"726","usedDeprecatedRules":"341"},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"729","usedDeprecatedRules":"341"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"341"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"341"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"740","usedDeprecatedRules":"341"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"341"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"341"},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":2,"source":"751","usedDeprecatedRules":"341"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754","usedDeprecatedRules":"341"},{"filePath":"755","messages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"341"},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760","usedDeprecatedRules":"341"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"763","usedDeprecatedRules":"341"},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"341"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"341"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":3,"source":"772","usedDeprecatedRules":"341"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"341"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"341"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"341"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":3,"source":"784","usedDeprecatedRules":"341"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":3,"source":"787","usedDeprecatedRules":"341"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790","usedDeprecatedRules":"341"},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793","usedDeprecatedRules":"341"},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796","usedDeprecatedRules":"341"},"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/index.js",["797","798","799","800","801","802","803"],"import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport GenContextProvider from \"./gen-state/gen.context\";\nimport Loading from \"./pages/loading/loading\";\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={<Loading />}>\n      <BrowserRouter>\n        <GenContextProvider>\n          <App />\n        </GenContextProvider>\n      </BrowserRouter>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["804","805","806","807","808"],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.context.js",["809"],"import React, { useReducer, createContext } from \"react\";\nimport { genReducer, INITIAL_STATE } from \"./gen.reducer\";\n\nexport const GenContext = createContext();\n\nconst GenContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(genReducer, INITIAL_STATE);\n\n  const {\n    layers,\n    preview,\n    mintAmount,\n    nftLayers,\n    combinations,\n    isLoading,\n    mintInfo,\n    currentDnaLayers,\n    collectionName,\n    outputFormat,\n    connector,\n    chainId,\n    proposedChain,\n    account,\n    rule,\n    isRule,\n    collections,\n    algoCollections,\n    auroraCollections,\n    polygonCollections,\n    celoCollections,\n    singleAuroraNfts,\n    singleAlgoNfts,\n    singleCeloNfts,\n    singlePolygonNfts,\n    graphCollections,\n    singleNfts,\n    notification,\n    switchWalletNotification,\n    clipboardMessage,\n    loaderMessage,\n    collectionDescription,\n    didMount,\n    mainnet,\n    prompt,\n    promptAsset,\n    promptLayer,\n    promptRules,\n    toggleWalletPopup,\n    activeCollection,\n    imageQuality,\n    zip,\n    connectFromMint,\n    currentUser,\n    imageAction,\n    layerAction,\n    sessionId,\n    sessions,\n    toggleSessionModal,\n    toggleCollectionNameModal,\n    currentPlan,\n    proposedPlan,\n    upgradePlan,\n    actionProgress,\n    minter,\n    toggleUpgradeModal,\n    searchContainer,\n    isUser,\n  } = state;\n\n  return (\n    <GenContext.Provider\n      value={{\n        layers,\n        preview,\n        mintAmount,\n        nftLayers,\n        combinations,\n        isLoading,\n        mintInfo,\n        currentDnaLayers,\n        collectionName,\n        outputFormat,\n        connector,\n        chainId,\n        proposedChain,\n        account,\n        graphCollections,\n        rule,\n        isRule,\n        singleCeloNfts,\n        collections,\n        notification,\n        switchWalletNotification,\n        clipboardMessage,\n        loaderMessage,\n        collectionDescription,\n        didMount,\n        mainnet,\n        singleNfts,\n        prompt,\n        promptAsset,\n        promptLayer,\n        promptRules,\n        algoCollections,\n        auroraCollections,\n        polygonCollections,\n        celoCollections,\n        singleAuroraNfts,\n        singleAlgoNfts,\n        singlePolygonNfts,\n        toggleWalletPopup,\n        activeCollection,\n        imageQuality,\n        zip,\n        connectFromMint,\n        currentUser,\n        imageAction,\n        layerAction,\n        sessionId,\n        sessions,\n        toggleSessionModal,\n        toggleCollectionNameModal,\n        currentPlan,\n        proposedPlan,\n        upgradePlan,\n        actionProgress,\n        minter,\n        toggleUpgradeModal,\n        searchContainer,\n        isUser,\n        dispatch,\n      }}\n    >\n      {children}\n    </GenContext.Provider>\n  );\n};\n\nexport default GenContextProvider;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/App.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/loading/loading.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.reducer.js",["810","811"],"import genActionTypes from \"./gen.types\";\nimport {\n  addLayer,\n  removeLayer,\n  addImage,\n  removeImage,\n  addPreview,\n  removePreview,\n  updateImage,\n  updatePreview,\n  deleteAsset,\n  renameAsset,\n  updateLayer,\n  addDescription,\n  deleteRule,\n} from \"./gen.utils\";\n\nexport const INITIAL_STATE = {\n  layers: [],\n  preview: [],\n  nftLayers: [],\n  combinations: 0,\n  mintAmount: 0,\n  outputFormat: \"ipfs\",\n  mintInfo: \"\",\n  collectionName: \"\",\n  collectionDescription: \"\",\n  isLoading: false,\n  currentDnaLayers: null,\n  chainId: \"\",\n  proposedChain: null,\n  account: \"\",\n  connector: null,\n  isRule: false,\n  rule: [],\n  collections: {},\n  singleNfts: [],\n  algoCollections: {},\n  singleAlgoNfts: {},\n  auroraCollections: [],\n  polygonCollections: [],\n  celoCollections: [],\n  singleAuroraNfts: [],\n  singleCeloNfts: [],\n  singlePolygonNfts: [],\n  activeCollection: [],\n  notification: {\n    message: \"\",\n    type: \"\", // warning|error|success|default\n  },\n  switchWalletNotification: false,\n  clipboardMessage: \"\",\n  loaderMessage: \"\",\n  didMount: false,\n  graphCollections: [],\n  mainnet: process.env.REACT_APP_ENV_STAGING === \"false\",\n  prompt: null,\n  promptAsset: null,\n  promptLayer: null,\n  promptRules: null,\n  toggleWalletPopup: false,\n  imageQuality: 0.5, // high:1|medium:0.5|low:0.2,\n  zip: {},\n  connectFromMint: {\n    isComingSoon: null,\n    chainId: null,\n  },\n  currentUser: null,\n  imageAction: {\n    type: \"\", // upload|rename|delete|deleteAll\n    value: {},\n  },\n  layerAction: {\n    type: \"\", // add|delete|order|rename,\n  },\n  sessionId: \"\",\n  sessions: [],\n  toggleSessionModal: false,\n  toggleCollectionNameModal: false,\n  currentPlan: \"free\", // free|noobs|geeks|ogs\n  upgradePlan: false,\n  actionProgress: {\n    totalCount: 0,\n    resetCount: true,\n  },\n  currentPlan: \"free\",\n  proposedPlan: \"\",\n  minter: \"\",\n  toggleUpgradeModal: \"\",\n  searchContainer: null,\n  isUser: null,\n};\n\nexport const genReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case genActionTypes.SET_LAYERS:\n      return {\n        ...state,\n        layers: action.payload,\n      };\n    case genActionTypes.ADD_LAYER:\n      return {\n        ...state,\n        layers: addLayer(state.layers, action.payload),\n      };\n    case genActionTypes.REMOVE_LAYER:\n      return {\n        ...state,\n        layers: removeLayer(state.layers, action.payload),\n      };\n    case genActionTypes.UPDATE_LAYER:\n      return {\n        ...state,\n        layers: updateLayer(state.layers, action.payload),\n      };\n    case genActionTypes.ADD_IMAGE:\n      return {\n        ...state,\n        layers: addImage(state.layers, action.payload),\n      };\n    case genActionTypes.REMOVE_IMAGE:\n      return {\n        ...state,\n        layers: removeImage(state.layers, action.payload),\n      };\n    case genActionTypes.UPDATE_IMAGE:\n      return {\n        ...state,\n        layers: updateImage(state.layers, action.payload),\n      };\n    case genActionTypes.CLEAR_LAYERS:\n      return {\n        ...state,\n        layers: [],\n      };\n    case genActionTypes.SET_PREVIEW:\n      return {\n        ...state,\n        preview: action.payload,\n      };\n    case genActionTypes.ADD_PREVIEW:\n      return {\n        ...state,\n        preview: addPreview(state.preview, action.payload),\n      };\n    case genActionTypes.CLEAR_PREVIEW:\n      return {\n        ...state,\n        preview: [],\n      };\n    case genActionTypes.ADD_RULE:\n      return {\n        ...state,\n        rule: action.payload,\n      };\n    case genActionTypes.CLEAR_RULE:\n      return {\n        ...state,\n        rule: [],\n      };\n    case genActionTypes.REMOVE_PREVIEW:\n      return {\n        ...state,\n        preview: removePreview(state.preview, action.payload),\n      };\n    case genActionTypes.UPDATE_PREVIEW:\n      return {\n        ...state,\n        preview: updatePreview(state.preview, action.payload),\n      };\n    case genActionTypes.SET_MINT_AMOUNT:\n      return {\n        ...state,\n        mintAmount: action.payload,\n      };\n    case genActionTypes.SET_NFT_LAYERS:\n      return {\n        ...state,\n        nftLayers: action.payload,\n      };\n    case genActionTypes.SET_COMBINATIONS:\n      return {\n        ...state,\n        // combinations: Math.ceil((100 / 100) * Number(action.payload)),\n        combinations: action.payload,\n      };\n    case genActionTypes.SET_OVERLAY:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    case genActionTypes.SET_MINT_INFO:\n      return {\n        ...state,\n        mintInfo: action.payload,\n      };\n    case genActionTypes.DELETE_ASSET:\n      return {\n        ...state,\n        nftLayers: deleteAsset(state.nftLayers, action.payload),\n      };\n    case genActionTypes.SET_CURRENT_DNA_LAYERS:\n      return {\n        ...state,\n        currentDnaLayers: action.payload,\n      };\n    case genActionTypes.RENAME_ASSET:\n      return {\n        ...state,\n        nftLayers: renameAsset(state.nftLayers, action.payload),\n      };\n    case genActionTypes.ADD_DESCRIPTION:\n      return {\n        ...state,\n        nftLayers: addDescription(state.nftLayers, action.payload),\n      };\n    case genActionTypes.SET_COLLECTION_NAME:\n      return {\n        ...state,\n        collectionName: action.payload,\n      };\n    case genActionTypes.SET_COLLECTION_DESCRIPTION:\n      return {\n        ...state,\n        collectionDescription: action.payload,\n      };\n    case genActionTypes.SET_OUTPUT_FORMAT:\n      return {\n        ...state,\n        outputFormat: action.payload,\n      };\n    case genActionTypes.SET_ACCOUNT:\n      return {\n        ...state,\n        account: action.payload,\n      };\n    case genActionTypes.SET_CHAIN_ID:\n      return {\n        ...state,\n        chainId: action.payload,\n      };\n\n    case genActionTypes.SET_PROPOSED_CHAIN:\n      return {\n        ...state,\n        proposedChain: action.payload,\n      };\n    case genActionTypes.SET_CONNECTOR:\n      return {\n        ...state,\n        connector: action.payload,\n      };\n    case genActionTypes.SET_CONFLICT_RULE:\n      return {\n        ...state,\n        isRule: action.payload,\n      };\n    case genActionTypes.DELETE_RULE:\n      return {\n        ...state,\n        rule: deleteRule(state.rule, action.payload),\n      };\n    case genActionTypes.SET_COLLECTIONS:\n      return {\n        ...state,\n        collections: action.payload,\n      };\n    case genActionTypes.SET_ALGO_COLLECTIONS:\n      return {\n        ...state,\n        algoCollections: action.payload,\n      };\n    case genActionTypes.SET_CELO_SINGLE_NFT:\n      return {\n        ...state,\n        singleCeloNfts: action.payload,\n      };\n    case genActionTypes.SET_AURORA_COLLECTIONS:\n      return {\n        ...state,\n        auroraCollections: action.payload,\n      };\n    case genActionTypes.SET_CELO_COLLECTIONS:\n      return {\n        ...state,\n        celoCollections: action.payload,\n      };\n    case genActionTypes.SET_POLYGON_COLLECTIONS:\n      return {\n        ...state,\n        polygonCollections: action.payload,\n      };\n    case genActionTypes.GRAPH_COLLECTIONS:\n      return {\n        ...state,\n        graphCollections: action.payload,\n      };\n    case genActionTypes.SET_SINGLE_NFTS:\n      return {\n        ...state,\n        singleNfts: action.payload,\n      };\n    case genActionTypes.SET_ALGO_SINGLE_NFTS:\n      return {\n        ...state,\n        singleAlgoNfts: action.payload,\n      };\n    case genActionTypes.SET_AURORA_SINGLE_NFTS:\n      return {\n        ...state,\n        singleAuroraNfts: action.payload,\n      };\n    case genActionTypes.SET_POLYGON_SINGLE_NFTS:\n      return {\n        ...state,\n        singlePolygonNfts: action.payload,\n      };\n    case genActionTypes.SET_NOTIFICATION:\n      return {\n        ...state,\n        notification: action.payload,\n      };\n    case genActionTypes.SET_SWITCH_WALLET_NOTIFICATION:\n      return {\n        ...state,\n        switchWalletNotification: action.payload,\n      };\n    case genActionTypes.SET_CLIPBOARD:\n      return {\n        ...state,\n        clipboardMessage: action.payload,\n      };\n    case genActionTypes.SET_LOADER:\n      return {\n        ...state,\n        loaderMessage: action.payload,\n      };\n    case genActionTypes.SET_DID_MOUNT:\n      return {\n        ...state,\n        didMount: action.payload,\n      };\n    case genActionTypes.SET_MAINNET:\n      return {\n        ...state,\n        mainnet: action.payload,\n      };\n    case genActionTypes.SET_PROMPT:\n      return {\n        ...state,\n        prompt: action.payload,\n      };\n    case genActionTypes.PROMPT_DELETE_ASSET:\n      return {\n        ...state,\n        promptAsset: action.payload,\n      };\n    case genActionTypes.PROMPT_DELETE_LAYER:\n      return {\n        ...state,\n        promptLayer: action.payload,\n      };\n    case genActionTypes.PROMPT_DELETE_RULES:\n      return {\n        ...state,\n        promptRules: action.payload,\n      };\n    case genActionTypes.TOGGLE_WALLET_POPUP:\n      return {\n        ...state,\n        toggleWalletPopup: action.payload,\n      };\n    case genActionTypes.SET_ACTIVE_COLLECTION:\n      return {\n        ...state,\n        activeCollection: action.payload,\n      };\n    case genActionTypes.SET_IMAGE_QUALITY:\n      return {\n        ...state,\n        imageQuality: action.payload,\n      };\n    case genActionTypes.SET_ZIP:\n      return {\n        ...state,\n        zip: action.payload,\n      };\n    case genActionTypes.CONNECT_FROM_MINT:\n      return {\n        ...state,\n        connectFromMint: action.payload,\n      };\n    case genActionTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n    case genActionTypes.SET_IMAGE_ACTION:\n      return {\n        ...state,\n        imageAction: action.payload,\n      };\n    case genActionTypes.SET_LAYER_ACTION:\n      return {\n        ...state,\n        layerAction: action.payload,\n      };\n    case genActionTypes.SET_CURRENT_SESSION:\n      return {\n        ...state,\n        sessionId: action.payload,\n      };\n    case genActionTypes.SET_SESSION:\n      return {\n        ...state,\n        sessions: action.payload,\n      };\n    case genActionTypes.TOGGLE_SESSION_MODAL:\n      return {\n        ...state,\n        toggleSessionModal: action.payload,\n      };\n    case genActionTypes.TOGGLE_COLLECTION_NAME_MODAL:\n      return {\n        ...state,\n        toggleCollectionNameModal: action.payload,\n      };\n    case genActionTypes.SET_CURRENT_PLAN:\n      return {\n        ...state,\n        currentPlan: action.payload,\n      };\n    case genActionTypes.SET_PROPOSED_PLAN:\n      return {\n        ...state,\n        proposedPlan: action.payload,\n      };\n    case genActionTypes.SET_UPGRADE_PLAN:\n      return {\n        ...state,\n        upgradePlan: action.payload,\n      };\n    case genActionTypes.SET_ACTION_PROGRESS:\n      return {\n        ...state,\n        actionProgress: action.payload,\n      };\n    case genActionTypes.SET_MINTER:\n      return {\n        ...state,\n        minter: action.payload,\n      };\n    case genActionTypes.TOGGLE_UPGRADE_MODAL:\n      return {\n        ...state,\n        toggleUpgradeModal: action.payload,\n      };\n    case genActionTypes.SET_SEARCH_cONTAINER:\n      return {\n        ...state,\n        searchContainer: { ...state.searchContainer, ...action.payload },\n      };\n    case genActionTypes.SET_IS_USER:\n      return {\n        ...state,\n        isUser: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/artist/artist.js",["812"],"import React from \"react\";\nimport HeroSection from \"../../components/artist/HeroSection/HeroSection\";\nimport Join from \"../../components/artist/Join/Join\";\nimport classes from \"./artist.module.css\";\n\nconst artist = () => {\n  let a;\n  return (\n    <div>\n      <div className={classes.container}>\n        <div className={classes.wrapper}>\n          <HeroSection />\n        </div>\n        <Join />\n      </div>\n    </div>\n  );\n};\n\nexport default artist;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/docs/docsEmbed.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Partner/Partner.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/camera/Camera.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pitch/Pitch.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Session/Session.jsx",["813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869"],"import classes from \"./Session.module.css\";\nimport { ReactComponent as ChevronIcon } from \"../../assets/icon-chevron-down.svg\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\nimport { ReactComponent as ArrowBackIcon } from \"../../assets/icon-arrow-left.svg\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  addRule,\n  setCollectionName,\n  setCurrentPlan,\n  setCurrentSession,\n  setLayerAction,\n  setLayers,\n  setNftLayers,\n  setOverlay,\n  setSession,\n  setUpgradePlan,\n} from \"../../gen-state/gen.actions\";\nimport { deleteAllLayers, fetchSession, fetchUserSession } from \"../../renderless/store-data/StoreData.script\";\nimport { useHistory } from \"react-router-dom\";\nimport { plans } from \"../Pricing/Pricing.script\";\nimport { getCurrentUser } from \"../../components/google-auth/googleAuth.script\";\nimport NotResult from \"./No-Result/NoResult\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { handleResetCreate } from \"../../utils\";\n\nconst Session = () => {\n  const history = useHistory();\n  const [dropdownId, setDropdown] = useState(-1);\n  const [noResult, toggleNoResult] = useState(null);\n\n  const { dispatch, currentUser, sessions, currentPlan } = useContext(GenContext);\n  const handleLoad = async (sessionId, plan) => {\n    console.log(\"fetch starts\");\n    handleResetCreate({ dispatch });\n    dispatch(setOverlay(true));\n    const res = await fetchUserSession({ currentUser, sessionId });\n    if (res) {\n      dispatch(setCurrentPlan(plan));\n      dispatch(setLayers(res.layers));\n      dispatch(setNftLayers(res.nftLayers));\n      dispatch(setCollectionName(res.collectionName));\n      dispatch(addRule(res.rules));\n      dispatch(setCurrentSession(sessionId));\n      dispatch(\n        setLayerAction({\n          type: \"loadPreNftLayers\",\n        })\n      );\n      dispatch(setOverlay(false));\n      console.log(\"fetch ends\");\n      history.push(\"/create\");\n    }\n  };\n\n  const handleDelete = async (sessionId) => {\n    console.log(\"delete starts\");\n    dispatch(setOverlay(true));\n    await deleteAllLayers({ currentUser, sessionId });\n    const sessions = await fetchSession({ currentUser });\n    dispatch(setSession(sessions));\n    if (!sessions.length) {\n      toggleNoResult(\"true\");\n      // dispatch(setCurrentPlan(\"free\"));\n      if (currentPlan !== \"free\") {\n        handleResetCreate({ dispatch });\n      }\n    }\n    dispatch(setOverlay(false));\n    console.log(\"delete ends\");\n  };\n\n  const handleCreate = () => {\n    dispatch(setUpgradePlan(false));\n    history.push(\"/create/session/pricing\");\n  };\n\n  // const handleUpgrade = () => {\n  //   dispatch(setUpgradePlan(true));\n  //   history.push(\"/create/session/pricing\");\n  // };\n\n  const handleDropdown = (id) => {\n    if (id === dropdownId) return setDropdown(-1);\n    setDropdown(id);\n  };\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        dispatch(setOverlay(true));\n        const sessions = await fetchSession({ currentUser });\n        dispatch(setOverlay(false));\n        if (sessions.length) {\n          toggleNoResult(\"false\");\n          dispatch(setSession(sessions));\n        } else {\n          toggleNoResult(\"true\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [currentUser]);\n\n  useEffect(() => {\n    if (currentUser) return;\n    getCurrentUser({ dispatch });\n  }, []);\n\n  // return null\n  return (\n    <div className={classes.container}>\n      <div onClick={() => history.goBack()} className={classes.backBtnContainer}>\n        <ArrowBackIcon className={classes.backIcon} />\n        <div>Back</div>\n      </div>\n      {noResult !== \"true\" ? (\n        <div className={classes.wrapper}>\n          <div className={classes.content}>\n            <h1>Session</h1>\n            <div className={classes.subHeading}>\n              <h3>Active Session</h3>\n              <button onClick={handleCreate}>create new</button>\n            </div>\n            {noResult === \"false\" ? (\n              <div className={classes.sessionContainer}>\n                {sessions &&\n                  sessions.map(({ session }, idx) => (\n                    <div key={idx} className={`${classes.sessionWrapper} ${dropdownId === idx && classes.active}`}>\n                      <div key={idx} className={classes.session}>\n                        <div className={classes.detail}>\n                          <div className={classes.plan}>\n                            <div className={classes.planName}>{session.currentPlan}</div>\n                            <div className={classes.planFlag}>paid</div>\n                          </div>\n                          <div className={classes.collectionName}>{session.collectionName}</div>\n                        </div>\n                        <div className={classes.action}>\n                          <div\n                            onClick={() => handleLoad(session.sessionId, session.currentPlan)}\n                            className={classes.loadBtn}\n                          >\n                            Load <span>session</span>\n                          </div>\n                          <div onClick={() => handleDelete(session.sessionId)} className={classes.deleteBtn}>\n                            Delete <span>session</span>\n                          </div>\n                          <div onClick={() => handleDropdown(idx)} className={classes.dropdownIconContainer}>\n                            <ChevronIcon\n                              className={`${classes.dropdownIcon} ${dropdownId === idx && classes.active}`}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className={`${classes.sessionDropdown} ${dropdownId === idx && classes.active}`}>\n                        <div className={classes.cost}>\n                          <div className={classes.title}>cost per session</div>\n                          <div className={classes.amount}>${plans[session.currentPlan].price}</div>\n                        </div>\n                        <div className={classes.services}>\n                          {plans[session.currentPlan].services.map(({ name, available }, idx) => (\n                            <div key={idx} className={classes.service}>\n                              {available ? (\n                                <MarkIcon className={classes.markIcon} />\n                              ) : (\n                                <CloseIcon className={classes.closeIcon} />\n                              )}\n                              <div className={classes.serviceName}>{name}</div>\n                            </div>\n                          ))}\n                        </div>\n                        {/* <div className={classes.upgradeBtnContainer}>\n                          <button onClick={handleUpgrade}>Upgrade plan</button>\n                        </div> */}\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            ) : (\n              <div className={classes.skeleton}>\n                <Skeleton count={1} height={120} />\n                <br />\n                <Skeleton count={1} height={120} />\n                <br />\n                <Skeleton count={1} height={120} />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : noResult === \"true\" ? (\n        <NotResult />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Session;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/welcome/welcome.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/fallback/fallback.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pricing/Pricing.jsx",["870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905"],"import classes from \"./Pricing.module.css\";\nimport { plans } from \"./Pricing.script\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\nimport { useEffect, useState } from \"react\";\nimport PricingModal from \"../../components/Modals/Pricing-Modal/PricingModal\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { setProposedPlan } from \"../../gen-state/gen.actions\";\nimport { handleResetCreate } from \"../../utils\";\n\nconst Pricing = () => {\n  const history = useHistory();\n  const [plan, setPlan] = useState(\"\");\n  const [price, setPrice] = useState(0);\n\n  const { dispatch, currentPlan, upgradePlan, collectionName } = useContext(GenContext);\n  const handlePlan = (plan, price) => {\n    if (price) {\n      dispatch(setProposedPlan(plan));\n      if (upgradePlan) {\n        if (currentPlan === \"hobby\" && plan === \"pro\") {\n          setPlan(\"hobbyToPro\");\n        } else if (currentPlan === \"hobby\" && plan === \"agency\") {\n          setPlan(\"hobbyToAgency\");\n        } else if (currentPlan === \"pro\" && plan === \"agency\") {\n          setPlan(\"proToAgency\");\n        } else {\n          setPlan(plan);\n        }\n        setPrice(price - Number(plans[currentPlan].price));\n      } else {\n        setPrice(price);\n        setPlan(plan);\n      }\n    } else {\n      handleResetCreate({ dispatch });\n      // dispatch(setCurrentPlan(plan));\n      history.push(\"/create\");\n    }\n  };\n\n  const mapCurrentPlanToLevel = (plan, level) => {\n    let levels = {\n      free: 0,\n      hobby: 1,\n      pro: 2,\n      agency: 3,\n    };\n\n    let currentLevel = levels[plan];\n    if (currentLevel >= levels[level]) return true;\n    return false;\n  };\n\n  const closeModal = () => {\n    setPlan(\"\");\n  };\n\n  useEffect(() => {\n    if (!collectionName) {\n      return history.push(\"/create\");\n    }\n    document.documentElement.scrollTop = 200;\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      {price !== 0 ? <PricingModal plan={plan} price={price} closeModal={closeModal} /> : \"\"}\n      <div className={classes.heading}>\n        <h1>Pricing $ plans</h1>\n        <p>Simple pricing.. No hidden fees. Advanced features for your NFT collections</p>\n      </div>\n\n      <div className={classes.cardMenu}>\n        {Object.values(plans).map((plan, idx) => (\n          <div key={idx} className={classes.wrapper}>\n            {plan.mostPopular && <div className={classes.mark}>Most Popular</div>}\n            <div className={classes.card}>\n              <div className={classes.type}>{plan.type}</div>\n              <div className={classes.description}>{plan.description}</div>\n              <div className={classes.coveredCost}>{plan.coveredCost}</div>\n              <div className={classes.price}>${plan.price}</div>\n              <div className={classes.services}>\n                {plan.services.map(({ name, available }, idx) => (\n                  <div key={idx} className={classes.service}>\n                    {available ? (\n                      <MarkIcon className={classes.markIcon} />\n                    ) : (\n                      <CloseIcon className={classes.closeIcon} />\n                    )}\n                    <div className={classes.serviceName}>{name}</div>\n                  </div>\n                ))}\n              </div>\n              {upgradePlan && currentPlan === plan.type ? (\n                <div onClick={() => history.push(\"/create\")} className={`${classes.subscribeBtn} ${classes.disabled}`}>\n                  Current Plan\n                </div>\n              ) : upgradePlan && mapCurrentPlanToLevel(currentPlan, plan.type) ? (\n                <div className={`${classes.subscribeBtn} ${classes.disabled}`}>disabled</div>\n              ) : (\n                <div\n                  onClick={() => handlePlan(plan.type, Number(plan.price))}\n                  className={`${classes.subscribeBtn} ${plan.mostPopular && classes.active}`}\n                >\n                  {plan.subscription}\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Pricing;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Explore.jsx",["906","907"],"import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./Explore.module.css\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport Filter from \"./Filter/Filter\";\nimport Header from \"./Header/Header\";\nimport { groupAttributesByTraitType, mapAttributeToFilter } from \"./Explore-script\";\nimport { getGraphCollection, getNftCollection } from \"../../utils\";\nimport Menu from \"./Menu/Menu\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport SearchBar from \"../../components/Marketplace/Search-bar/searchBar.component\";\nimport PriceDropdown from \"../../components/Marketplace/Price-dropdown/priceDropdown\";\n\nconst Explore = () => {\n  const collectionNameRef = useRef(true);\n  const [state, setState] = useState({\n    toggleFilter: true,\n    togglePriceFilter: false,\n    NFTCollection: null,\n    FilteredCollection: null,\n    loadedChain: null,\n    allGraphCollection: [],\n    collection: null,\n    attributes: null,\n    filterToDelete: null,\n    headerHeight: 0,\n    filter: {\n      searchValue: \"\",\n      price: \"high\",\n    },\n  });\n  const {\n    toggleFilter,\n    collection,\n    NFTCollection,\n    attributes,\n    filter,\n    filterToDelete,\n    FilteredCollection,\n    headerHeight,\n    loadedChain,\n  } = state;\n  const { dispatch, mainnet, algoCollections, auroraCollections, polygonCollections, celoCollections } =\n    useContext(GenContext);\n\n  const { collectionName } = useParams();\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const handleFilter = (_filter) => {\n    handleSetState({ filter: { ...filter, ..._filter } });\n  };\n\n  const getHeight = (res) => {\n    handleSetState({ headerHeight: res });\n  };\n\n  const getAllCollectionChains = () => {\n    return !auroraCollections && !polygonCollections && !celoCollections\n      ? null\n      : [...(auroraCollections || []), ...(polygonCollections || []), ...(celoCollections || [])];\n  };\n\n  useEffect(() => {\n    if (Object.keys(algoCollections).length) {\n      const collection = algoCollections[collectionName.trimEnd()];\n      if (collection && collectionNameRef.current) {\n        collectionNameRef.current = false;\n        handleSetState({ collection });\n        getNftCollection({ collection, mainnet, dispatch, handleSetState });\n      }\n    }\n  }, [algoCollections]);\n\n  useEffect(() => {\n    (async function getGraphResult() {\n      const allCollection = getAllCollectionChains();\n      const filteredCollection = allCollection?.filter((col) => col?.Id === collectionName);\n      if (filteredCollection?.length) {\n        const result = await getGraphCollection(filteredCollection[0]?.nfts, filteredCollection[0]);\n        handleSetState({\n          collection: {\n            ...filteredCollection[0],\n            owner: filteredCollection[0]?.owner,\n            price: result[0]?.collectionPrice,\n          },\n          NFTCollection: result,\n          loadedChain: result[0]?.chain,\n        });\n      }\n    })();\n  }, [auroraCollections, polygonCollections, celoCollections]);\n\n  useEffect(() => {\n    if (!NFTCollection) return;\n    handleSetState({\n      attributes: mapAttributeToFilter(NFTCollection),\n      FilteredCollection: NFTCollection,\n    });\n  }, [NFTCollection]);\n\n  useEffect(() => {\n    if (!NFTCollection) return;\n    const filtered = NFTCollection.filter((col) => col.name.toLowerCase().includes(filter.searchValue.toLowerCase()));\n    handleSetState({ FilteredCollection: filtered });\n  }, [filter.searchValue]);\n\n  useEffect(() => {\n    if (!NFTCollection) return;\n    let filtered = null;\n    if (filter.price === \"low\") {\n      filtered = NFTCollection.sort((a, b) => Number(a.price) - Number(b.price));\n    } else {\n      filtered = NFTCollection.sort((a, b) => Number(b.price) - Number(a.price));\n    }\n    handleSetState({ FilteredCollection: filtered });\n  }, [filter.price]);\n\n  useEffect(() => {\n    if (!NFTCollection) return;\n    const filtered = NFTCollection.filter(\n      (col) => Number(col.price) >= Number(filter.priceRange.min) && Number(col.price) <= Number(filter.priceRange.max)\n    );\n    handleSetState({ FilteredCollection: filtered });\n  }, [filter.priceRange]);\n\n  useEffect(() => {\n    if (!NFTCollection) return;\n    const groupedAttributes = groupAttributesByTraitType(filter.attributes);\n    const filtered = NFTCollection.filter((col) =>\n      Object.keys(groupedAttributes).every((attributeKey) =>\n        groupedAttributes[attributeKey].some((el) =>\n          JSON.stringify(col.ipfs_data.properties).includes(JSON.stringify(el))\n        )\n      )\n    );\n    handleSetState({ FilteredCollection: filtered });\n    document.documentElement.scrollTop = headerHeight;\n  }, [filter.attributes]);\n\n  return (\n    <div className={classes.container}>\n      <Header\n        getHeight={getHeight}\n        collection={{\n          ...collection,\n          numberOfNfts: NFTCollection && NFTCollection.length,\n          imageUrl: NFTCollection && NFTCollection[Math.floor(Math.random() * NFTCollection.length)]?.image_url,\n        }}\n        loadedChain={loadedChain}\n      />\n\n      <div className={classes.displayContainer}>\n        <Filter\n          handleFilter={handleFilter}\n          filterToDelete={filterToDelete}\n          attributes={attributes}\n          toggleFilter={toggleFilter}\n          handleExploreSetState={(prop) => handleSetState({ ...prop })}\n        />\n        <main className={classes.displayWrapper}>\n          <div className={classes.searchAndFilter}>\n            <SearchBar onSearch={(value) => handleSetState({ filter: { ...filter, searchValue: value } })} />\n            <PriceDropdown onPriceFilter={(value) => handleSetState({ filter: { ...filter, price: value } })} />\n          </div>\n\n          <div className={classes.filterDisplay}>\n            {filter?.attributes &&\n              filter.attributes.map((f, idx) => (\n                <div key={idx} className={classes.filteredItem}>\n                  <span>{`${f.trait_type}: ${f.value}`}</span>\n                  <CloseIcon onClick={() => handleSetState({ filterToDelete: f })} className={classes.closeIcon} />\n                </div>\n              ))}\n            {filter?.attributes && filter.attributes.length ? (\n              <div onClick={() => handleSetState({ filterToDelete: [] })} className={classes.clearFilter}>\n                clear all\n              </div>\n            ) : null}\n          </div>\n          <Menu\n            NFTCollection={FilteredCollection}\n            loadedChain={loadedChain}\n            chain={algoCollections[collectionName.trimEnd()]?.chain}\n            toggleFilter={toggleFilter}\n          />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Explore;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/collections/collections.jsx",["908","909","910","911","912","913","914","915","916","917","918","919","920","921"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport classes from \"./collections.module.css\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport CollectionsCard from \"../../components/Marketplace/collectionsCard/collectionsCard\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport NotFound from \"../../components/not-found/notFound\";\nimport PriceDropdown from \"../../components/Marketplace/Price-dropdown/priceDropdown\";\nimport ChainDropdown from \"../../components/Marketplace/Chain-dropdown/chainDropdown\";\nimport SearchBar from \"../../components/Marketplace/Search-bar/searchBar.component\";\n\nconst Collections = () => {\n  const { auroraCollections, algoCollections, polygonCollections, celoCollections, chainId } = useContext(GenContext);\n  const algoCollectionsArr = algoCollections ? Object.values(algoCollections) : [];\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const [state, setState] = useState({\n    filteredCollection: [],\n    celoCollection: null,\n    nearCollection: null,\n    allChains: null,\n    filter: {\n      searchValue: \"\",\n      price: \"low\",\n      chain: \"All Chains\",\n    },\n  });\n\n  const { celoCollection, nearCollection, filter, filteredCollection } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const getCollectionByChain = (network = filter.chain) => {\n    switch (network.toLowerCase().replace(/ /g, \"\")) {\n      case \"allchains\":\n        return !algoCollectionsArr && !polygonCollections && !celoCollections && !nearCollection && !auroraCollections\n          ? null\n          : [\n              ...(algoCollectionsArr || []),\n              ...(polygonCollections || []),\n              // ...(celoCollection || []),\n              ...(celoCollections || []),\n              ...(auroraCollections || []),\n              ...(nearCollection || []),\n            ];\n      case \"algorand\":\n        return algoCollectionsArr;\n      case \"polygon\":\n        return polygonCollections;\n      case \"celo\":\n        return celoCollections;\n      case \"near\":\n        return nearCollection;\n      case \"aurora\":\n        return auroraCollections;\n      default:\n        break;\n    }\n    return null;\n  };\n\n  // get search result for all blockchains\n  const searchHandler = (value) => {\n    value = value.trim().toLowerCase();\n    if (!value) return;\n    handleSetState({ filter: { ...filter, searchValue: value } });\n    const { search } = location;\n    const chainParam = new URLSearchParams(search).get(\"chain\");\n    const params = new URLSearchParams({\n      search: value,\n      ...(chainParam && { chain: chainParam }),\n    });\n    history.replace({ pathname: location.pathname, search: params.toString() });\n    const collection = getCollectionByChain();\n    if (!collection) return;\n    const filtered = collection.filter(\n      (col) => col.name.toLowerCase().includes(value) || col.description.toLowerCase().includes(value)\n    );\n    if (filtered.length) {\n      handleSetState({ filteredCollection: filtered });\n    } else {\n      handleSetState({ filteredCollection: null });\n    }\n  };\n\n  const chainChange = (value) => {\n    const { search } = location;\n    const name = new URLSearchParams(search).get(\"search\");\n    const params = new URLSearchParams({\n      chain: value.toLowerCase().replace(/ /g, \"\"),\n      ...(name && { search: name }),\n    });\n    history.replace({ pathname: location.pathname, search: params.toString() });\n    handleSetState({ filter: { ...filter, chain: value } });\n    const collection = getCollectionByChain(value.toLowerCase().replace(/ /g, \"\"));\n    if (collection) {\n      if (filter.searchValue) {\n        const filtered = collection.filter(\n          (col) =>\n            col.name.toLowerCase().includes(name ? name.toLowerCase() : \"\") ||\n            col.description.toLowerCase().includes(name ? name.toLowerCase() : \"\")\n        );\n        if (filtered.length) {\n          handleSetState({ filteredCollection: filtered });\n        } else {\n          handleSetState({ filteredCollection: null });\n        }\n      } else {\n        handleSetState({ filteredCollection: collection });\n      }\n    } else {\n      handleSetState({ filteredCollection: null });\n    }\n  };\n\n  // sort by price function for different blockchains\n  const sortPrice = (filterProp) => {\n    let sorted = [];\n    if (filterProp === \"high\") {\n      sorted = filteredCollection.sort((a, b) => Number(a.price) - Number(b.price));\n    } else if (filterProp === \"low\") {\n      sorted = filteredCollection.sort((a, b) => Number(b.price) - Number(a.price));\n      // } else if (filterProp === \"txVolume\") {\n      //   sorted = filteredCollection.sort((a, b) => Number(b.price) - Number(a.price));\n    } else if (filterProp === \"newest\") {\n      if (chainId === 4160) {\n        sorted = filteredCollection.sort((a, b) => a?.createdAt[\"seconds\"] - b?.createdAt[\"seconds\"]);\n      } else {\n        sorted = filteredCollection.sort((a, b) => a?.createdAt - b?.createdAt);\n      }\n    } else if (filterProp === \"oldest\") {\n      if (chainId === 4160) {\n        sorted = filteredCollection.sort((a, b) => a?.createdAt[\"seconds\"] - b?.createdAt[\"seconds\"]);\n      } else {\n        sorted = filteredCollection.sort((a, b) => a?.createdAt - b?.createdAt);\n      }\n    } else if (filterProp === \"descAlphabet\") {\n      sorted = filteredCollection.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n    } else if (filterProp === \"ascAlphabet\") {\n      sorted = filteredCollection.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())).reverse();\n    }\n    handleSetState({ filteredCollection: sorted });\n  };\n\n  // compile data for all blockchains\n  useEffect(() => {\n    const { search } = location;\n    const name = new URLSearchParams(search).get(\"search\");\n    const chainParameter = new URLSearchParams(search).get(\"chain\");\n    if (chainParameter) {\n      handleSetState({ filter: { ...filter, chain: chainParameter } });\n    }\n    const collection = getCollectionByChain(chainParameter ? chainParameter.toLowerCase() : \"All Chains\");\n    if (name) {\n      handleSetState({ filter: { ...filter, searchValue: name } });\n    }\n    const filtered = collection?.filter(\n      (col) =>\n        col.name.toLowerCase().includes(name ? name.toLowerCase() : \"\") ||\n        col.description.toLowerCase().includes(name ? name.toLowerCase() : \"\")\n    );\n    if (algoCollectionsArr || auroraCollections || celoCollection || polygonCollections) {\n      handleSetState({ filteredCollection: filtered });\n    } else {\n      handleSetState({ filteredCollection: null });\n    }\n    return null;\n  }, [algoCollections, polygonCollections, celoCollection, auroraCollections]);\n\n  useEffect(() => {\n    window.localStorage.activeCollection = {};\n    document.documentElement.scrollTop = 0;\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.innerContainer}>\n        <div className={classes.header}>\n          <h1>Collections</h1>\n          <div className={classes.searchAndFilter}>\n            <SearchBar onSearch={searchHandler} />\n            <ChainDropdown onChainFilter={chainChange} />\n            <PriceDropdown onPriceFilter={sortPrice} />\n          </div>\n        </div>\n        {filteredCollection?.length ? (\n          <div className={classes.wrapper}>\n            {filteredCollection.map((collection, idx) => (\n              <CollectionsCard key={idx} collection={collection} />\n            ))}\n          </div>\n        ) : !filteredCollection && filter.searchValue ? (\n          <NotFound />\n        ) : !filteredCollection ? (\n          <NotFound />\n        ) : (\n          <div className={classes.skeleton}>\n            {[...new Array(5)].map((id) => (\n              <div key={id}>\n                <Skeleton count={1} height={200} />\n                <br />\n                <Skeleton count={1} height={30} />\n                <br />\n                <Skeleton count={1} height={30} />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Collections;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/preview.jsx",["922","923"],"import React, { useContext, useEffect, useState } from \"react\";\nimport classes from \"./preview.module.css\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { deleteAsset, setMintAmount, setMintInfo, promptDeleteAsset } from \"../../gen-state/gen.actions\";\nimport Sidebar from \"./sidebar/sidebar\";\nimport ArtCard from \"./art-card/artCard\";\nimport Navbar from \"./navbar/navbar\";\nimport SelectedGifArt from \"./selected-gif-art/selectedGifArt\";\nimport PageControl from \"./page-control/pageControl\";\nimport GifModal from \"./gif-modal/gifModal\";\nimport SubscriptionNotification from \"../../components/Subscription-Notification/SubscriptionNotification\";\n\nconst Preview = () => {\n  const {\n    nftLayers,\n    currentDnaLayers,\n    dispatch,\n    combinations,\n    mintAmount,\n    mintInfo,\n    collectionName,\n    collectionDescription,\n    outputFormat,\n    rule,\n    layers,\n    promptAsset,\n    imageQuality,\n    currentPlan,\n  } = useContext(GenContext);\n\n  const [state, setState] = useState({\n    currentPage: 1,\n    paginate: {},\n    currentPageValue: 1,\n    enableAllDescription: true,\n    duration: \"\",\n    gifShow: null,\n    toggleGuide: false,\n    gifs: [],\n    gifImages: [],\n    editorAction: { index: \"\", id: \"\" },\n  });\n\n  const {\n    currentPage,\n    paginate,\n    currentPageValue,\n    enableAllDescription,\n    gifShow,\n    gifs,\n    gifImages,\n    duration,\n    toggleGuide,\n  } = state;\n\n  const canvas = document.createElement(\"canvas\");\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const previewProps = {\n    nftLayers,\n    currentDnaLayers,\n    dispatch,\n    combinations,\n    mintAmount,\n    mintInfo,\n    collectionName,\n    collectionDescription,\n    outputFormat,\n    rule,\n    layers,\n    promptAsset,\n    imageQuality,\n    enableAllDescription,\n    gifShow,\n    gifs,\n    gifImages,\n    duration,\n    toggleGuide,\n    canvas,\n    currentPage,\n    currentPageValue,\n    paginate,\n    currentPlan,\n    handleSetState,\n  };\n\n  const handlePrev = () => {\n    if (currentPage <= 1) return;\n    handleSetState({ currentPage: currentPage - 1 });\n    document.documentElement.scrollTop = 0;\n  };\n\n  const handleNext = () => {\n    if (currentPage >= Object.keys(paginate).length) return;\n    handleSetState({ currentPage: currentPage + 1 });\n    document.documentElement.scrollTop = 0;\n  };\n\n  const handleGoto = () => {\n    if (currentPageValue < 1 || currentPageValue > Object.keys(paginate).length) return;\n    handleSetState({ currentPage: Number(currentPageValue) });\n    document.documentElement.scrollTop = 0;\n  };\n\n  useEffect(() => {\n    dispatch(setMintInfo(\"\"));\n  }, [dispatch, mintAmount]);\n\n  useEffect(() => {\n    const countPerPage = 20;\n    const numberOfPages = Math.ceil(nftLayers.length / countPerPage);\n    let startIndex = 0;\n    let endIndex = startIndex + countPerPage;\n    const paginateObj = {};\n    for (let i = 1; i <= numberOfPages; i += 1) {\n      paginateObj[i] = nftLayers.slice(startIndex, endIndex);\n      startIndex = endIndex;\n      endIndex = startIndex + countPerPage;\n    }\n    handleSetState({ paginate: paginateObj });\n  }, [nftLayers]);\n\n  useEffect(() => {\n    if (promptAsset) {\n      console.log({ promptAsset });\n      dispatch(deleteAsset(promptAsset));\n      dispatch(setMintAmount(mintAmount - 1));\n      dispatch(promptDeleteAsset(null));\n    }\n  }, [promptAsset]);\n\n  return (\n    <div className={classes.wrapper}>\n      <SubscriptionNotification />\n      <Navbar navbarProps={previewProps} />\n      <div className={classes.container}>\n        <Sidebar sidebarProps={previewProps} />\n        <div className={classes.display}>\n          <div className={classes.preview}>\n            {Object.keys(paginate).length\n              ? paginate[currentPage].map((asset, index) => {\n                  return <ArtCard key={index} asset={{ index, ...asset }} previewProps={previewProps} />;\n                })\n              : null}\n          </div>\n          {gifShow && gifImages.length > 0 && <SelectedGifArt selectedProps={previewProps} />}\n        </div>\n      </div>\n      <PageControl controProps={{ handleNext, handlePrev, handleGoto, ...previewProps }} />\n      <GifModal modalProps={{ ...previewProps }} />\n    </div>\n  );\n};\n\nexport default Preview;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/dashboard/dashboard.jsx",["924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939"],"import React, { useContext, useEffect, useState } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport { Link, useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport Copy from \"../../components/copy/copy\";\nimport CollectionsCard from \"../../components/Marketplace/collectionsCard/collectionsCard\";\nimport NftCard from \"../../components/Marketplace/NftCard/NftCard\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { getUserNftCollections, getUserSingleNfts } from \"../../utils\";\nimport {\n  fetchUserBoughtNfts,\n  fetchUserCollections,\n  fetchUserCreatedNfts,\n  fetchUserNfts,\n  readUserProfile,\n} from \"../../utils/firebase\";\nimport classes from \"./dashboard.module.css\";\nimport avatar from \"../../assets/avatar.png\";\nimport { ethers } from \"ethers\";\nimport SearchBar from \"../../components/Marketplace/Search-bar/searchBar.component\";\nimport PriceDropdown from \"../../components/Marketplace/Price-dropdown/priceDropdown\";\nimport NotFound from \"../../components/not-found/notFound\";\nimport bg from \"../../assets/bg.png\"; // remove this when done!\nimport twitter from \"../../assets/icon-twitter-blue.svg\";\nimport discord from \"../../assets/icon-discord-blue.svg\";\nimport instagram from \"../../assets/icon-instagram-blue.svg\";\nimport youtube from \"../../assets/icon-youtube-green.svg\";\nimport { celoClient, polygonClient } from \"../../utils/graphqlClient\";\nimport { GET_USER_NFT } from \"../../graphql/querries/getCollections\";\nimport { setNotification } from \"../../gen-state/gen.actions\";\nimport {\n  getCeloCollectedNFTs,\n  getCeloUserCollections,\n  getPolygonCollectedNFTs,\n  getPolygonUserCollections,\n} from \"../../renderless/fetch-data/fetchUserGraphData\";\n\nconst Dashboard = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  const [state, setState] = useState({\n    togglePriceFilter: false,\n    filter: {\n      searchValue: \"\",\n      price: \"high\",\n    },\n    activeDetail: \"created\",\n    collectedNfts: null,\n    createdNfts: null,\n    myCollections: null,\n    filteredCollection: null,\n    userDetails: null,\n  });\n\n  const { filter, activeDetail, myCollections, createdNfts, collectedNfts, filteredCollection, userDetails } = state;\n\n  const {\n    account,\n    mainnet,\n    singleAuroraNfts,\n    singlePolygonNfts,\n    singleCeloNfts,\n    auroraCollections,\n    polygonCollections,\n    celoCollections,\n    dispatch,\n    chainId,\n  } = useContext(GenContext);\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const breakAddress = (address = \"\", width = 6) => {\n    return address && `${address.slice(0, width)}...${address.slice(-width)}`;\n  };\n\n  useEffect(() => {\n    if (!account) history.push(\"/\");\n    // Get User Created NFTs\n\n    (async function getUserNFTs() {\n      let algoNFTs = [];\n      if (chainId == 4160) {\n        const singleNfts = await fetchUserCreatedNfts(account);\n        algoNFTs = await getUserSingleNfts({ mainnet, singleNfts });\n      }\n      const aurroraNFTs = singleAuroraNfts?.filter((nft) => nft?.owner === account);\n      const celoNfts = singleCeloNfts?.filter((nft) => nft?.owner === account);\n      const polygonNFTs = singlePolygonNfts?.filter((nft) => nft?.owner === account);\n      handleSetState({\n        createdNfts: [...(algoNFTs || []), ...(aurroraNFTs || []), ...(polygonNFTs || []), ...(celoNfts || [])],\n      });\n    })();\n\n    (async function getUserCollectedNfts() {\n      // get collected nfts from the same fetch result\n      let address = \"\";\n      let algoCollectedNfts = [];\n      if (chainId != 4160) {\n        address = ethers.utils.hexlify(account);\n        const collectedNfts = await fetchUserBoughtNfts(account);\n        algoCollectedNfts = await getUserSingleNfts({ mainnet, singleNfts: collectedNfts });\n      }\n\n      const polygonCollectedNfts = await getPolygonCollectedNFTs(address);\n      const celoCollectedNfts = await getCeloCollectedNFTs(address);\n      handleSetState({\n        collectedNfts: [...(algoCollectedNfts || []), ...(celoCollectedNfts || []), ...(polygonCollectedNfts || [])],\n      });\n    })();\n\n    // Get User created Collections\n    (async function getCreatedCollections() {\n      let hexAddress;\n      if (chainId != 4160) {\n        hexAddress = ethers.utils.hexlify(account);\n      }\n      const collections = await fetchUserCollections(account);\n      const algoCollections = await getUserNftCollections({ collections, mainnet });\n      const aurrCollections = auroraCollections?.filter((collection) => collection.nfts[0]?.owner?.id === account);\n      const polyCollections = await getPolygonUserCollections(hexAddress);\n      const celoCollection = await getCeloUserCollections(hexAddress);\n      handleSetState({\n        myCollections: [\n          ...(algoCollections || []),\n          ...(aurrCollections || []),\n          ...(polyCollections || []),\n          ...(celoCollection || []),\n        ],\n      });\n    })();\n\n    (async function getUsername() {\n      const data = await readUserProfile(account);\n\n      handleSetState({ userDetails: data });\n    })();\n  }, [account]);\n\n  // eslint-disable-next-line consistent-return\n  const getCollectionToFilter = () => {\n    switch (activeDetail) {\n      case \"collected\":\n        return collectedNfts;\n      case \"created\":\n        return createdNfts;\n      case \"collections\":\n        return myCollections;\n      default:\n        break;\n    }\n  };\n\n  const searchHandler = (value) => {\n    if (!account) return;\n    if (!filteredCollection) return;\n    const params = new URLSearchParams({\n      search: value.toLowerCase(),\n    });\n    history.replace({ pathname: location.pathname, search: params.toString() });\n    const filtered = getCollectionToFilter().filter((col) => col.name.toLowerCase().includes(value.toLowerCase()));\n    handleSetState({ filteredCollection: filtered, filter: { ...filter, searchValue: value } });\n  };\n\n  useEffect(() => {\n    if (!account) return;\n    if (!filteredCollection) return;\n    let filtered = null;\n    if (filter.price === \"low\") {\n      filtered = getCollectionToFilter().sort((a, b) => Number(a.price) - Number(b.price));\n    } else {\n      filtered = getCollectionToFilter().sort((a, b) => Number(b.price) - Number(a.price));\n    }\n    handleSetState({ filteredCollection: filtered });\n  }, [filter.price]);\n\n  useEffect(() => {\n    if (!account) return;\n    const collection = getCollectionToFilter();\n    const { search } = location;\n    const name = new URLSearchParams(search).get(\"search\");\n    if (name) {\n      handleSetState({ filter: { ...filter, searchValue: name } });\n    }\n    let filteredNFTCollection = collection;\n    if (collection) {\n      filteredNFTCollection = collection.filter((col) =>\n        col.name.toLowerCase().includes(name ? name.toLowerCase() : \"\")\n      );\n    }\n    handleSetState({ filteredCollection: filteredNFTCollection });\n  }, [activeDetail, createdNfts, collectedNfts, myCollections]);\n\n  return (\n    <div className={classes.container}>\n      {/* change background to dynamic */}\n      <div className={classes.bannerContainer}>\n        <img src={bg} alt=\"\" className={classes.banner} />\n        <img className={classes.imageContainer} src={avatar} alt=\"\" />\n      </div>\n\n      <div className={classes.wrapper}>\n        <section className={classes.header}>\n          {userDetails?.username ? <div className={classes.username}> {userDetails.username}</div> : \"\"}\n\n          <div className={classes.address}>\n            <Copy message={account} placeholder={breakAddress(account)} />\n          </div>\n\n          <div className={classes.social}>\n            {userDetails?.twitter ? (\n              <a href={`https://twitter.com/${userDetails.twitter}`} target=\"_blank\" rel=\"noreferrer\">\n                {\" \"}\n                <img src={twitter} alt=\"\" className={classes.socialIcon} />{\" \"}\n              </a>\n            ) : (\n              \"\"\n            )}\n            {userDetails?.youtube ? (\n              <a href={`https://youtube.com/${userDetails.youtube}`} target=\"_blank\" rel=\"noreferrer\">\n                {\" \"}\n                <img src={youtube} alt=\"\" className={classes.socialIcon} />{\" \"}\n              </a>\n            ) : (\n              \"\"\n            )}\n            {userDetails?.instagram ? (\n              <a href={`https://www.instagram.com/${userDetails.instagram}`} target=\"_blank\" rel=\"noreferrer\">\n                {\" \"}\n                <img src={instagram} alt=\"\" className={classes.socialIcon} />{\" \"}\n              </a>\n            ) : (\n              \"\"\n            )}\n            {userDetails?.discord ? <img src={discord} alt=\"\" className={classes.socialIcon} /> : \"\"}\n          </div>\n\n          <Link to={`${url}/profile/settings`}>\n            <div className={classes.editProfile}>Edit Profile</div>\n          </Link>\n\n          <div className={classes.details}>\n            <div\n              onClick={() => handleSetState({ activeDetail: \"created\" })}\n              className={`${classes.detail} ${activeDetail === \"created\" && classes.active}`}\n            >\n              <p>Created NFT</p>\n              <span>{Array.isArray(createdNfts) ? createdNfts.length : 0}</span>\n            </div>\n            <div\n              onClick={() => handleSetState({ activeDetail: \"collected\" })}\n              className={`${classes.detail} ${activeDetail === \"collected\" && classes.active}`}\n            >\n              <p>Collected NFTs</p>\n              <span>{Array.isArray(collectedNfts) ? collectedNfts.length : 0}</span>\n            </div>\n            <div\n              onClick={() => handleSetState({ activeDetail: \"collections\" })}\n              className={`${classes.detail} ${activeDetail === \"collections\" && classes.active}`}\n            >\n              <p>My Collections</p>\n              <span>{Array.isArray(myCollections) ? myCollections.length : 0}</span>\n            </div>\n          </div>\n        </section>\n\n        <section className={classes.main}>\n          <div className={classes.searchAndFilter}>\n            <SearchBar onSearch={(value) => searchHandler(value)} />\n            <PriceDropdown onPriceFilter={(value) => handleSetState({ filter: { ...filter, price: value } })} />\n          </div>\n\n          {filteredCollection?.length > 0 ? (\n            activeDetail === \"collections\" ? (\n              <div className={classes.overview}>\n                {filteredCollection.map((collection, idx) => (\n                  <CollectionsCard key={idx} collection={collection} fromDashboard />\n                ))}\n              </div>\n            ) : activeDetail === \"created\" ? (\n              <div className={classes.overview}>\n                {filteredCollection.map((nft, idx) => (\n                  <NftCard key={idx} nft={nft} listed={false} fromDashboard />\n                ))}\n              </div>\n            ) : activeDetail === \"collected\" ? (\n              <div className={classes.overview}>\n                {filteredCollection.map((nft, idx) => (\n                  <NftCard key={idx} nft={nft} listed={!nft.sold} fromDashboard />\n                ))}\n              </div>\n            ) : (\n              \"\"\n            )\n          ) : filteredCollection?.length === 0 ? (\n            filter.searchValue ? (\n              <NotFound />\n            ) : (\n              <NotFound />\n            )\n          ) : (\n            <div className={classes.skeleton}>\n              {[...new Array(5)].map((id) => (\n                <div key={id}>\n                  <Skeleton count={1} height={200} />\n                  <br />\n                  <Skeleton count={1} height={30} />\n                  <br />\n                  <Skeleton count={1} height={30} />\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/singleNftCollection/singleNftCollection.jsx",["940","941","942","943","944","945","946","947","948","949","950","951","952","953"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport classes from \"./singleNftCollection.module.css\";\nimport NftCard from \"../../components/Marketplace/NftCard/NftCard\";\nimport NotFound from \"../../components/not-found/notFound\";\nimport SearchBar from \"../../components/Marketplace/Search-bar/searchBar.component\";\nimport ChainDropdown from \"../../components/Marketplace/Chain-dropdown/chainDropdown\";\nimport PriceDropdown from \"../../components/Marketplace/Price-dropdown/priceDropdown\";\nimport { GenContext } from \"../../gen-state/gen.context\";\n\nconst SingleNftCollection = () => {\n  const { singleAlgoNfts, singleAuroraNfts, singlePolygonNfts, singleCeloNfts, chainId } = useContext(GenContext);\n  const singleAlgoNftsArr = Object.values(singleAlgoNfts);\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const [state, setState] = useState({\n    togglePriceFilter: false,\n    toggleChainFilter: false,\n    filteredCollection: [],\n    celoCollection: null,\n    allChains: null,\n    filter: {\n      searchValue: \"\",\n      price: \"low\",\n      chain: \"All Chains\",\n    },\n  });\n\n  const { celoCollection, filter, filteredCollection } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const getCollectionByChain = (network = filter.chain) => {\n    switch (network.toLowerCase().replace(/ /g, \"\")) {\n      case \"allchains\":\n        return !singleAlgoNftsArr && !singlePolygonNfts && !singleCeloNfts && !singleAuroraNfts\n          ? null\n          : [\n              ...(singleAlgoNftsArr || []),\n              ...(singlePolygonNfts || []),\n              ...(singleCeloNfts || []),\n              ...(singleAuroraNfts || []),\n            ];\n      case \"algorand\":\n        return singleAlgoNftsArr;\n      case \"polygon\":\n        return singlePolygonNfts;\n      case \"celo\":\n        return singleCeloNfts;\n      case \"aurora\":\n        return singleAuroraNfts;\n      default:\n        break;\n    }\n    return null;\n  };\n\n  // get search result for all blockchains\n  const searchHandler = (value) => {\n    value = value.trim().toLowerCase();\n    if (!value) return;\n    handleSetState({ filter: { ...filter, searchValue: value } });\n    const { search } = location;\n    const chainParam = new URLSearchParams(search).get(\"chain\");\n    const params = new URLSearchParams({\n      search: value,\n      ...(chainParam && { chain: chainParam }),\n    });\n    history.replace({ pathname: location.pathname, search: params.toString() });\n    const collection = getCollectionByChain();\n    if (!collection) return;\n    const filtered = collection.filter(\n      (col) => col.name.toLowerCase().includes(value) || col.description.toLowerCase().includes(value)\n    );\n    if (filtered.length) {\n      handleSetState({ filteredCollection: filtered });\n    } else {\n      handleSetState({ filteredCollection: null });\n    }\n  };\n\n  const chainChange = (value) => {\n    const { search } = location;\n    const name = new URLSearchParams(search).get(\"search\");\n    const params = new URLSearchParams({\n      chain: value.toLowerCase().replace(/ /g, \"\"),\n      ...(name && { search: name }),\n    });\n    history.replace({ pathname: location.pathname, search: params.toString() });\n    handleSetState({ filter: { ...filter, chain: value } });\n    const collection = getCollectionByChain(value.toLowerCase().replace(/ /g, \"\"));\n    if (collection) {\n      if (filter.searchValue) {\n        const filtered = collection.filter(\n          (col) =>\n            col.name.toLowerCase().includes(name ? name.toLowerCase() : \"\") ||\n            col.description.toLowerCase().includes(name ? name.toLowerCase() : \"\")\n        );\n        if (filtered.length) {\n          handleSetState({ filteredCollection: filtered });\n        } else {\n          handleSetState({ filteredCollection: null });\n        }\n      } else {\n        handleSetState({ filteredCollection: collection });\n      }\n    } else {\n      handleSetState({ filteredCollection: null });\n    }\n  };\n\n  // sort by price function for different blockchains\n  const sortPrice = (filterProp) => {\n    let sorted = [];\n    if (filterProp === \"high\") {\n      sorted = filteredCollection.sort((a, b) => Number(a.price) - Number(b.price));\n    } else if (filterProp == \"low\") {\n      sorted = filteredCollection.sort((a, b) => Number(b.price) - Number(a.price));\n      // } else if (filterProp === \"txVolume\") {\n      //   sorted = filteredCollection.sort((a, b) => Number(b.price) - Number(a.price));\n    } else if (filterProp === \"newest\") {\n      if (chainId === 4160) {\n        sorted = filteredCollection.sort((a, b) => a?.createdAt[\"seconds\"] - b?.createdAt[\"seconds\"]);\n      } else {\n        sorted = filteredCollection.sort((a, b) => a?.createdAt - b?.createdAt);\n      }\n    } else if (filterProp === \"oldest\") {\n      if (chainId === 4160) {\n        sorted = filteredCollection.sort((a, b) => a?.createdAt[\"seconds\"] - b?.createdAt[\"seconds\"]);\n      } else {\n        sorted = filteredCollection.sort((a, b) => a?.createdAt - b?.createdAt);\n      }\n    } else if (filterProp === \"descAlphabet\") {\n      sorted = filteredCollection.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n    } else if (filterProp === \"ascAlphabet\") {\n      sorted = filteredCollection.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())).reverse();\n    }\n    handleSetState({ filteredCollection: sorted });\n  };\n\n  // compile data for all blockchains\n  useEffect(() => {\n    const { search } = location;\n    const name = new URLSearchParams(search).get(\"search\");\n    const chainParameter = new URLSearchParams(search).get(\"chain\");\n    if (chainParameter) {\n      handleSetState({ filter: { ...filter, chain: chainParameter } });\n    }\n    const collection = getCollectionByChain(chainParameter ? chainParameter.toLowerCase() : \"All Chains\");\n    if (name) {\n      handleSetState({ filter: { ...filter, searchValue: name } });\n    }\n    const filtered = collection?.filter(\n      (col) =>\n        col.name.toLowerCase().includes(name ? name.toLowerCase() : \"\") ||\n        col.description.toLowerCase().includes(name ? name.toLowerCase() : \"\")\n    );\n    if (singleAlgoNftsArr || singleAuroraNfts) {\n      handleSetState({ filteredCollection: filtered });\n    } else {\n      handleSetState({ filteredCollection: null });\n    }\n    return null;\n  }, [singleAlgoNfts, singlePolygonNfts, celoCollection, singleAuroraNfts]);\n\n  useEffect(() => {\n    window.localStorage.activeAlgoNft = null;\n    document.documentElement.scrollTop = 0;\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.innerContainer}>\n        <div className={classes.header}>\n          <h1>1 of 1s</h1>\n          <div className={classes.searchAndFilter}>\n            <SearchBar onSearch={searchHandler} />\n            <ChainDropdown onChainFilter={chainChange} />\n            <PriceDropdown onPriceFilter={sortPrice} />\n          </div>\n        </div>\n        {filteredCollection?.length ? (\n          <div className={classes.wrapper}>\n            {filteredCollection.map((nft) => (\n              <NftCard key={nft.Id} nft={nft} listed />\n            ))}\n          </div>\n        ) : !filteredCollection && filter.searchValue ? (\n          <NotFound />\n        ) : !filteredCollection ? (\n          <NotFound />\n        ) : (\n          <div className={classes.skeleton}>\n            {[...new Array(5)].map((id) => (\n              <div key={id}>\n                <Skeleton count={1} height={200} />\n                <br />\n                <Skeleton count={1} height={30} />\n                <br />\n                <Skeleton count={1} height={30} />{\" \"}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SingleNftCollection;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/profile/profile.jsx",["954","955"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./profile.module.css\";\nimport twitterIcon from \"../../assets/icon-twitter-accent.svg\";\nimport instagramIcon from \"../../assets/icon-instagram.svg\";\nimport discordIcon from \"../../assets/icon-discord-accent.svg\";\nimport { readUserProfile } from \"../../utils/firebase\";\nimport { handleCancel, handleInputChange, handleSave } from \"./profile-script\";\nimport avatar from \"../../assets/avatar.png\";\nimport bg from \"../../assets/bg.png\";\nimport copyIcon from \"../../assets/icon-copy.svg\";\nimport { getConnectedChain } from \"../../components/wallet/wallet-script\";\nimport uploadIcon from \"../../assets/uploadIcon.svg\";\n\nconst Profile = () => {\n  const history = useHistory();\n  const { account, dispatch, chainId } = useContext(GenContext);\n  const [copied, setCopy] = useState(false);\n  const copyRef = useRef(null);\n\n  const handleCopy = (props) => {\n    const { navigator, copy } = props;\n    navigator.clipboard.writeText(account);\n  };\n\n  const [state, setState] = useState({\n    subscribe: false,\n    username: \"\",\n    email: \"\",\n    twitter: \"\",\n    discord: \"\",\n    instagram: \"\",\n  });\n\n  const [validation, setValidation] = useState({\n    isEmail: true,\n    isTwitter: true,\n    isDiscord: true,\n    isInstagram: true,\n  });\n\n  const { subscribe, email, twitter, discord, username, instagram } = state;\n  const { isEmail, isDiscord, isTwitter, isInstagram } = validation;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const handleSetValidation = (payload) => {\n    setValidation((val) => ({ ...val, ...payload }));\n  };\n\n  const inputProps = { handleSetState, handleSetValidation };\n  const saveProps = { account, state, dispatch, handleSetValidation, history };\n  const cancelProps = { handleSetState, history };\n\n  useEffect(() => {\n    (async function updateProfile() {\n      if (!account) return;\n      const res = await readUserProfile(account);\n      handleSetState(res);\n    })();\n  }, [account]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.wrapper}>\n        <h1 className={classes.heading}>Profile Settings</h1>\n        <div className={classes.images}>\n          <div>\n            {/** IMPORT FUNCTION TO BE IMPLEMENTED WHEN HANDLED FROM FIREBASE */}\n\n            {/* <label htmlFor=\"inputTag\" className={classes.uploadIcon}>\n          <input type=\"file\" id=\"inputTag\" />\n          <img src={uploadIcon} alt=\"\" />\n        </label> */}\n          </div>\n          <div className={classes.profile}>\n            <img src={avatar} alt=\"\" />\n          </div>\n          <div className={classes.banner}>\n            <img src={bg} alt=\"\" />\n          </div>\n        </div>\n        <div className={classes.option}>\n          <h3>Wallet Address</h3>\n          <div\n            className={classes.text}\n            onMouseDown={() => setCopy(true)}\n            onMouseUp={() => setCopy(false)}\n            onClick={() => handleCopy({ navigator, copy: copyRef.xcurrent })}\n          >\n            <img className={classes.chain} src={getConnectedChain(chainId)} alt=\"\" />\n            <input className={account && classes.wallet} type=\"text\" value={account} disabled />\n            <img src={copyIcon} alt=\"\" className={`${classes.copyIcon} ${copied && classes.active}`} />\n          </div>\n\n          <p>To update your address just change your account in your wallet.</p>\n        </div>\n\n        <div className={classes.option}>\n          <h3>Username</h3>\n          <input\n            type=\"text\"\n            value={username}\n            name=\"username\"\n            onChange={(event) => handleInputChange({ event, ...inputProps })}\n          />\n        </div>\n\n        <div className={`${classes.option} ${!isEmail && classes.invalid}`}>\n          <h3>Email</h3>\n          <input\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            onChange={(event) => handleInputChange({ event, ...inputProps })}\n            placeholder=\"me@gmail.com\"\n          />\n        </div>\n\n        <div className={classes.option}>\n          <h3>Email Subscription</h3>\n          <div\n            onClick={() => handleSetState({ subscribe: !subscribe })}\n            className={`${classes.toggleButton} ${subscribe && classes.active}`}\n          >\n            <div className={classes.toggle} />\n          </div>\n          <p className={`${classes.warn} ${!subscribe && classes.active}`}>\n            (You won&apos;t recieve ANY emails from GenaDrop if do not subscribe - including important ones related to\n            your account security or purchases)\n          </p>\n        </div>\n\n        <section className={classes.social}>\n          <h2 className={classes.subheading}>Social Media</h2>\n\n          <div className={`${classes.option} ${!isTwitter && classes.invalid}`}>\n            <label>\n              <img src={twitterIcon} alt=\"\" />\n              <div>Twitter</div>\n            </label>\n            <input\n              type=\"text\"\n              value={`https://twitter.com/${twitter}`}\n              name=\"twitter\"\n              onChange={(event) => handleInputChange({ event, ...inputProps })}\n            />\n          </div>\n\n          <div className={`${classes.option} ${!isInstagram && classes.invalid}`}>\n            <label>\n              <img src={instagramIcon} alt=\"\" />\n              <div>Instagram</div>\n            </label>\n            <input\n              type=\"text\"\n              value={`https://www.instagram.com/${instagram}`}\n              name=\"instagram\"\n              onChange={(event) => handleInputChange({ event, ...inputProps })}\n            />\n          </div>\n\n          <div className={`${classes.option} ${!isDiscord && classes.invalid}`}>\n            <label>\n              <img src={discordIcon} alt=\"\" />\n              <div>Discord</div>\n            </label>\n            <input\n              type=\"text\"\n              value={discord}\n              name=\"discord\"\n              onChange={(event) => handleInputChange({ event, ...inputProps })}\n            />\n          </div>\n\n          <div className={classes.buttons}>\n            <button type=\"button\" onClick={() => handleSave(saveProps)} className={classes.submit}>\n              Save Changes\n            </button>\n            <button type=\"button\" onClick={() => handleCancel(cancelProps)} className={classes.cancel}>\n              Cancel\n            </button>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/listNFT/list.jsx",["956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974"],"import React, { useContext, useEffect, useState } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useRouteMatch, Link, useHistory } from \"react-router-dom\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { getUserBoughtNftCollection, getUserGraphNft } from \"../../utils\";\nimport classes from \"./list.module.css\";\nimport { fetchUserBoughtNfts, listNft, writeNft } from \"../../utils/firebase\";\nimport { GET_USER_NFT } from \"../../graphql/querries/getCollections\";\nimport { polygonClient } from \"../../utils/graphqlClient\";\nimport { ethers } from \"ethers\";\nimport algoIcon from \"../../assets/icon-algo.svg\";\nimport { listCeloNft, listPolygonNft } from \"../../utils/arc_ipfs\";\nimport {\n  celoUserData,\n  getCeloNFTToList,\n  getPolygonNFTToList,\n  polygonUserData,\n} from \"../../renderless/fetch-data/fetchUserGraphData\";\nimport { setNotification } from \"../../gen-state/gen.actions\";\nimport supportedChains from \"../../utils/supportedChains\";\nimport axios from \"axios\";\n\nconst List = () => {\n  const { account, mainnet, chainId, connector, dispatch } = useContext(GenContext);\n\n  const {\n    params: { nftId },\n  } = useRouteMatch();\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  const [state, setState] = useState({\n    nftDetails: null,\n    amount: 0,\n    isLoading: true,\n    chain: \"Algo\",\n    price: \"\",\n    image_url: \"\",\n  });\n  const { nftDetails, isLoading, price, chain, image_url, amount } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n  const handlePrice = (event) => {\n    handleSetState({ price: event.target.value });\n  };\n\n  const listNFT = async () => {\n    // eslint-disable-next-line no-alert\n    if (!price) return alert(\"price can't be empty\");\n    const listProps = {\n      dispatch,\n      account,\n      connector,\n      nftContract: nftDetails.collection_contract,\n      mainnet,\n      price,\n      id: nftDetails.tokenID,\n    };\n    if (chainId === 80001 || chainId === 137) {\n      const listNft = await listPolygonNft(listProps);\n      if (listNft.error) {\n        dispatch(\n          setNotification({\n            message: \"Transaction failed\",\n            type: \"warning\",\n          })\n        );\n      } else {\n        return history.push(`${nftId}/listed`);\n      }\n    } else if (chainId === 44787 || chainId === 42220) {\n      const listNft = await listCeloNft(listProps);\n      if (listNft.error) {\n        dispatch(\n          setNotification({\n            message: \"Transaction failed\",\n            type: \"warning\",\n          })\n        );\n      } else {\n        return history.push(`${nftId}/listed`);\n      }\n    } else {\n      console.log(\"RES: \", await listNft(nftDetails.Id, price, account));\n      history.push(`${match.url}/listed`);\n    }\n  };\n\n  useEffect(() => {\n    (async function getAmount() {\n      axios\n        .get(`https://api.coingecko.com/api/v3/simple/price?ids=${supportedChains[chainId].id}&vs_currencies=usd`)\n        .then((res) => {\n          const value = Object.values(res.data)[0].usd;\n          handleSetState({\n            // chainIcon: supportedChains[nftDetails.chain].icon,\n            amount: price * value,\n            // chainSymbol: supportedChains[nftDetails.chain].symbol,\n          });\n        });\n    })();\n  }, [price]);\n\n  useEffect(() => {\n    (async function getUserCollection() {\n      if (chainId === 80001 || chainId === 137) {\n        const [nft] = await polygonUserData(nftId);\n        if (nft === null) {\n          return (\n            dispatch(\n              setNotification({\n                message: \"Trying to list in a different chain, Please make sure you're connected to the right chain\",\n                type: \"warning\",\n              })\n            ),\n            history.goBack()\n          );\n        }\n        handleSetState({\n          nftDetails: nft,\n          isLoading: false,\n          image_url: nft?.ipfs_data?.image,\n        });\n      } else if (chainId === 44787 || chainId === 42220) {\n        const [nft] = await celoUserData(nftId);\n        if (nft === null) {\n          return (\n            dispatch(\n              setNotification({\n                message: \"Trying to list in a different chain, Please make sure you're connected to the right chain\",\n                type: \"warning\",\n              })\n            ),\n            history.goBack()\n          );\n        }\n        handleSetState({\n          nftDetails: nft,\n          image_url: nft?.ipfs_data?.image,\n          isLoading: false,\n        });\n      } else {\n        const userNftCollections = await fetchUserBoughtNfts(account);\n        const result = await getUserBoughtNftCollection(mainnet, userNftCollections);\n        const nft = result.filter((NFT) => String(NFT?.Id) === nftId)[0];\n        if (!nft) history.goBack();\n        else {\n          handleSetState({\n            nftDetails: nft,\n            isLoading: false,\n            image_url: nft.image_url,\n          });\n        }\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    console.log(nftDetails);\n  }, [nftDetails]);\n\n  if (isLoading) {\n    return (\n      <div className={classes.menu}>\n        <div className={classes.left}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n\n        <div className={classes.right}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n\n        <div className={classes.fullLegnth}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={200} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.listHeader}>\n        <h1>List Item for Sale</h1>\n      </div>\n      <div className={classes.section1}>\n        <div className={classes.v_subsection1}>\n          <img className={classes.nft} src={nftDetails?.image_url} alt=\"\" />\n        </div>\n        <div className={classes.v_subsection2}>\n          {/* PRICE HISTORY */}\n          <div className={classes.feature}>\n            <div className={classes.mainDetails}>\n              <div className={classes.collectionHeader}>\n                <div className={classes.nftId}>Price</div>\n              </div>\n            </div>\n            <section className={classes.mintOptions}>\n              <div className={classes.priceDescription}>\n                Check the\n                <a href=\"#\" target=\"_blank\">\n                  {\" \"}\n                  Collection Floor price\n                </a>{\" \"}\n                to give you an idea of the average price of the NFT at the moment\n              </div>\n              <div className={classes.chain}>\n                {/* <div className={classes.inputWrapper}>\n                  <select value={chain} onChange={(event) => handleSetState({ chain: event.target.value })}>\n                    <option value=\"Algo\">Algo</option>\n                    <option value=\"Celo\">Celo</option>\n                    <option value=\"Polygon\">Polygon</option>\n                  </select>\n                </div> */}\n                <img src={supportedChains[nftDetails?.chain].icon} alt=\"\" />\n                <div className={classes.inputWrapper}>\n                  <input value={price} onChange={handlePrice} placeholder=\"E.g. 10\" type=\"number\" min=\"1\" step=\"1\" />\n                </div>\n                <span className={classes.amount}>{amount.toFixed(2)}</span>\n              </div>\n            </section>\n          </div>\n          <div className={classes.feature}>\n            <div className={classes.mainDetails}>\n              <div className={classes.collectionHeader}>\n                <div className={classes.nftId}>Sell Method</div>\n              </div>\n            </div>\n\n            <div className={classes.btns}>\n              <button type=\"button\" className={classes.buy} onClick={listNFT}>\n                <div className={classes.btnText}>\n                  <img src=\"/assets/price-tage.svg\" alt=\"\" />\n                  SET PRICE\n                </div>\n                <span className={classes.btnSpan}>Sell the NFT at a fixed price</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {price ? (\n        <div className={classes.feature}>\n          <div className={classes.mainDetails}>\n            <div className={classes.collectionHeader}>\n              <div className={classes.nftId}>Fees</div>\n            </div>\n          </div>\n\n          <div className={classes.detailContent}>\n            <div className={classes.priceDescription}>\n              Listing is Free! At the time of sale, the following fees will be deducted\n            </div>\n            <div className={classes.row}>\n              Genadrop <span>10%</span>\n            </div>\n            <div className={classes.row}>\n              {nftDetails.name ? nftDetails.name : \"\"} <span>7%</span>\n            </div>\n            <div className={classes.row}>\n              Total <span>17%</span>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default List;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/collectionNFT/collectionNFT.jsx",["975","976","977","978","979","980","981","982","983","984","985","986","987","988"],"import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { CopyBlock, dracula } from \"react-code-blocks\";\nimport axios from \"axios\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport Skeleton from \"react-loading-skeleton\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport DropItem from \"../../components/Nft-details/dropItem/dropItem\";\nimport classes from \"./collectionNFT.module.css\";\nimport Search from \"../../components/Nft-details/history/search\";\nimport NFT from \"../../components/Nft-details/collection/nft\";\nimport Graph from \"../../components/Nft-details/graph/graph\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { buyGraphNft, buyNft, getCeloGraphNft, getGraphCollection, getGraphNft, getTransactions } from \"../../utils\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport { readNftTransaction } from \"../../utils/firebase\";\n// import bidIcon from '../../assets/bid.png';\nimport copiedIcon from \"../../assets/copied.svg\";\nimport copyIcon from \"../../assets/copy-solid.svg\";\nimport walletIcon from \"../../assets/wallet-icon.png\";\nimport twitterIcon from \"../../assets/twitter.svg\";\nimport facebookIcon from \"../../assets/facebook.svg\";\nimport instagramIcon from \"../../assets/instagram.svg\";\nimport descriptionIcon from \"../../assets/description-icon.png\";\nimport detailsIcon from \"../../assets/details.png\";\nimport supportedChains from \"../../utils/supportedChains\";\n\nconst CollectionNFT = () => {\n  const {\n    account,\n    activeCollection,\n    connector,\n    mainnet,\n    dispatch,\n    auroraCollections,\n    polygonCollections,\n    celoCollections,\n    chainId,\n  } = useContext(GenContext);\n  const {\n    params: { collectionName, nftId },\n  } = useRouteMatch();\n  const history = useHistory();\n  const wrapperRef = useRef(null);\n  const [state, setState] = useState({\n    dropdown: [\"1\", \"3\"],\n    nftDetails: null,\n    transactionHistory: null,\n    showSocial: false,\n    isLoading: true,\n    allGraphCollectons: [],\n    collection: [],\n    algoPrice: 0,\n    isCopied: false,\n    totalPrice: 0,\n  });\n\n  const { dropdown, totalPrice, nftDetails, transactionHistory, collection, isLoading, showSocial, isCopied } = state;\n\n  const buyProps = {\n    dispatch,\n    nftDetails,\n    account,\n    connector,\n    mainnet,\n    history,\n    chainId,\n  };\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          handleSetState({ showSocial: false });\n        }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n  useOutsideAlerter(wrapperRef);\n\n  useEffect(() => {\n    const cacheCollection = JSON.parse(window.localStorage.activeCollection);\n    let result = activeCollection.find((col) => col.Id === Number(nftId));\n    result = result || cacheCollection ? cacheCollection[nftId] : null;\n    if (result) {\n      const collection = activeCollection.length ? activeCollection : Object.values(cacheCollection);\n      (async function getResult() {\n        const tHistory = await readNftTransaction(result.Id);\n\n        tHistory.find((t) => {\n          if (t.type === \"Minting\") t.price = result.price;\n        });\n        handleSetState({\n          nftDetails: result,\n          transactionHistory: tHistory,\n          collection,\n          isLoading: false,\n        });\n      })();\n    }\n    document.documentElement.scrollTop = 0;\n  }, [nftId]);\n\n  const getAllCollectionChains = () => {\n    return !auroraCollections && !polygonCollections && !celoCollections\n      ? null\n      : [...(auroraCollections || []), ...(polygonCollections || []), ...(celoCollections || [])];\n  };\n\n  useEffect(() => {\n    (async function getGraphResult() {\n      const allCollections = getAllCollectionChains();\n      // filtering to get the unqiue collection\n      const filteredCollection = allCollections?.filter((col) => col?.Id === collectionName);\n      if (filteredCollection) {\n        // filtering to get the unique nft\n\n        const filteredId = filteredCollection[0]?.nfts?.filter((col) => col?.id === nftId);\n        if (filteredId) {\n          const result = await getCeloGraphNft(filteredId[0], collectionName);\n\n          const trHistory = await getTransactions(filteredId[0]?.transactions);\n          const collectionData = await getGraphCollection(filteredCollection[0].nfts, filteredCollection[0]);\n\n          trHistory.find((t) => {\n            if (t.type === \"Minting\") t.price = result[0].price;\n          });\n          handleSetState({\n            nftDetails: result[0],\n            collection: collectionData,\n            transactionHistory: trHistory,\n            isLoading: false,\n          });\n        }\n      }\n    })();\n  }, [auroraCollections, polygonCollections, celoCollections, nftId]);\n\n  useEffect(() => {\n    if (nftDetails?.chain) {\n      axios\n        .get(\n          `https://api.coingecko.com/api/v3/simple/price?ids=${\n            supportedChains[nftDetails?.chain]?.id\n          }&vs_currencies=usd`\n        )\n        .then((res) => {\n          const value = Object.values(res.data)[0].usd;\n          handleSetState({ totalPrice: value * nftDetails.price });\n        });\n    }\n  }, [nftDetails]);\n\n  if (isLoading) {\n    return (\n      <div className={classes.menu}>\n        <div className={classes.left}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n\n        <div className={classes.right}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n        <div className={classes.fullLegnth}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={200} />\n        </div>\n      </div>\n    );\n  }\n\n  const description = {\n    icon: detailsIcon,\n    title: \"Description\",\n    content: `${nftDetails.ipfs_data.description}`,\n  };\n\n  const graph = {\n    icon: detailsIcon,\n    title: \"Price History\",\n    content: <Graph details={transactionHistory} />,\n  };\n\n  const attributeContent = () => (\n    <div className={classes.attributesContainer}>\n      {nftDetails.ipfs_data.properties.map((attribute, idx) => (\n        <div key={idx} className={classes.attribute}>\n          <span className={classes.title}>{attribute.trait_type}</span>\n          <span className={classes.description}>{attribute.value}</span>\n        </div>\n      ))}\n    </div>\n  );\n\n  const attributesItem = {\n    icon: descriptionIcon,\n    title: \"Attributes\",\n    content: attributeContent(),\n  };\n\n  const icons = [\n    {\n      icon: facebookIcon,\n      link: \"https://www.facebook.com\",\n    },\n    {\n      icon: instagramIcon,\n      link: \"https://www.instagram.com\",\n    },\n    {\n      icon: twitterIcon,\n      link: \"https://www.twitter.com/mpa\",\n    },\n  ];\n  const onCopyText = () => {\n    handleSetState({ isCopied: true });\n    setTimeout(() => {\n      handleSetState({ isCopied: false });\n    }, 1000);\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.section1}>\n        <div className={classes.v_subsection1}>\n          <img className={classes.nft} src={nftDetails.image_url} alt=\"\" />\n\n          <div className={classes.feature}>\n            <DropItem key={1} item={attributesItem} id={1} dropdown={dropdown} handleSetState={handleSetState} />\n          </div>\n        </div>\n        <div className={classes.v_subsection2}>\n          <div className={classes.feature}>\n            <div className={classes.mainDetails}>\n              <div className={classes.collectionHeader}>\n                <div className={classes.collectionName} onClick={() => history.goBack()}>\n                  {nftDetails.collection_name}\n                </div>\n                <div className={classes.nftId}>{nftDetails.name}</div>\n              </div>\n\n              <div className={classes.icons}>\n                <svg\n                  onClick={() => {\n                    handleSetState({ showSocial: true });\n                  }}\n                  className={`${classes.icon}`}\n                  width=\"18\"\n                  height=\"20\"\n                  viewBox=\"0 0 18 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M15 14.0781C15.8125 14.0781 16.5 14.375 17.0625 14.9688C17.625 15.5312 17.9062 16.2031 17.9062 16.9844C17.9062 17.7969 17.6094 18.5 17.0156 19.0938C16.4531 19.6562 15.7812 19.9375 15 19.9375C14.2188 19.9375 13.5312 19.6562 12.9375 19.0938C12.375 18.5 12.0938 17.7969 12.0938 16.9844C12.0938 16.6719 12.1094 16.4531 12.1406 16.3281L5.0625 12.2031C4.46875 12.7344 3.78125 13 3 13C2.1875 13 1.48438 12.7031 0.890625 12.1094C0.296875 11.5156 0 10.8125 0 10C0 9.1875 0.296875 8.48438 0.890625 7.89062C1.48438 7.29688 2.1875 7 3 7C3.78125 7 4.46875 7.26562 5.0625 7.79688L12.0938 3.71875C12.0312 3.40625 12 3.17188 12 3.01562C12 2.20312 12.2969 1.5 12.8906 0.90625C13.4844 0.3125 14.1875 0.015625 15 0.015625C15.8125 0.015625 16.5156 0.3125 17.1094 0.90625C17.7031 1.5 18 2.20312 18 3.01562C18 3.82812 17.7031 4.53125 17.1094 5.125C16.5156 5.71875 15.8125 6.01562 15 6.01562C14.25 6.01562 13.5625 5.73438 12.9375 5.17188L5.90625 9.29688C5.96875 9.60938 6 9.84375 6 10C6 10.1562 5.96875 10.3906 5.90625 10.7031L13.0312 14.8281C13.5938 14.3281 14.25 14.0781 15 14.0781Z\"\n                    fill=\"#707A83\"\n                  />\n                </svg>\n\n                <svg\n                  className={`${classes.icon} ${classes.dots}`}\n                  width=\"6\"\n                  height=\"18\"\n                  viewBox=\"0 0 6 18\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M1.59375 13.5938C2 13.1875 2.46875 12.9844 3 12.9844C3.53125 12.9844 4 13.1875 4.40625 13.5938C4.8125 14 5.01562 14.4688 5.01562 15C5.01562 15.5312 4.8125 16 4.40625 16.4062C4 16.8125 3.53125 17.0156 3 17.0156C2.46875 17.0156 2 16.8125 1.59375 16.4062C1.1875 16 0.984375 15.5312 0.984375 15C0.984375 14.4688 1.1875 14 1.59375 13.5938ZM1.59375 7.59375C2 7.1875 2.46875 6.98438 3 6.98438C3.53125 6.98438 4 7.1875 4.40625 7.59375C4.8125 8 5.01562 8.46875 5.01562 9C5.01562 9.53125 4.8125 10 4.40625 10.4062C4 10.8125 3.53125 11.0156 3 11.0156C2.46875 11.0156 2 10.8125 1.59375 10.4062C1.1875 10 0.984375 9.53125 0.984375 9C0.984375 8.46875 1.1875 8 1.59375 7.59375ZM4.40625 4.40625C4 4.8125 3.53125 5.01562 3 5.01562C2.46875 5.01562 2 4.8125 1.59375 4.40625C1.1875 4 0.984375 3.53125 0.984375 3C0.984375 2.46875 1.1875 2 1.59375 1.59375C2 1.1875 2.46875 0.984375 3 0.984375C3.53125 0.984375 4 1.1875 4.40625 1.59375C4.8125 2 5.01562 2.46875 5.01562 3C5.01562 3.53125 4.8125 4 4.40625 4.40625Z\"\n                    fill=\"#707A83\"\n                  />\n                </svg>\n              </div>\n            </div>\n            {nftDetails.price == 0 || nftDetails.price === null ? (\n              <div></div>\n            ) : (\n              <div className={classes.priceSection}>\n                <span className={classes.title}>Current price</span>\n                <span className={classes.price}>\n                  <img src={supportedChains[nftDetails.chain].icon} alt=\"\" />\n                  <p className={classes.tokenValue}>\n                    {nftDetails.price} {supportedChains[nftDetails.chain].sybmol}\n                  </p>\n                  <span className={classes.usdValue}>(${totalPrice.toFixed(2)})</span>\n                </span>\n              </div>\n            )}\n\n            {nftDetails.price === 0 || nftDetails.price === null ? (\n              nftDetails.owner === account ? (\n                <div className={classes.btns}>\n                  <button\n                    onClick={() => history.push(`/marketplace/1of1/list/${chainId}/${nftDetails.Id}`)}\n                    className={classes.buy}\n                  >\n                    List\n                  </button>\n                </div>\n              ) : (\n                <div className={classes.btns}>\n                  <button className={classes.sold} disabled={nftDetails.sold}>\n                    Not Listed!\n                  </button>\n                </div>\n              )\n            ) : (\n              <div className={classes.btns}>\n                {nftDetails.sold ? (\n                  nftDetails?.isListed ? (\n                    <>\n                      <button className={classes.buy} onClick={() => buyGraphNft(buyProps)}>\n                        Buy\n                      </button>\n                    </>\n                  ) : (\n                    <>\n                      <button className={classes.sold} disabled={nftDetails.sold}>\n                        SOLD!\n                      </button>\n                    </>\n                  )\n                ) : (\n                  <>\n                    {Number(nftDetails.chain) !== 4160 ? (\n                      <button className={classes.buy} onClick={() => buyGraphNft(buyProps)}>\n                        <img src={walletIcon} alt=\"\" />\n                        Buy now\n                      </button>\n                    ) : (\n                      <button\n                        type=\"button\"\n                        className={classes.buy}\n                        disabled={nftDetails.sold}\n                        onClick={() => buyNft(buyProps)}\n                      >\n                        <img src={walletIcon} alt=\"\" />\n                        Buy now\n                      </button>\n                    )}\n                    {/* <button type=\"button\" className={classes.bid}>\n                   <img src={bidIcon} alt=\"\" />\n                   Place Bid\n                 </button> */}\n                  </>\n                )}\n              </div>\n            )}\n          </div>\n          {/* PRICE HISTORY */}\n          {/* <div className={classes.feature}>\n            <DropItem\n              key={2}\n              item={graph}\n              id={2}\n              dropdown={dropdown}\n              handleSetState={handleSetState}\n            />\n          </div> */}\n          {/* Description */}\n          <div className={classes.feature}>\n            <DropItem key={3} item={description} id={3} dropdown={dropdown} handleSetState={handleSetState} />\n          </div>\n        </div>\n      </div>\n\n      {/* TRANSACTION HISTORY */}\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>Transaction History</h3>\n        </div>\n        <div className={classes.history}>\n          <Search data={transactionHistory} chain={nftDetails?.chain ? nftDetails.chain : \"\"} />\n        </div>\n      </div>\n      {/* PRICE HISTORY */}\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>Price History</h3>\n        </div>\n        <div className={classes.tableContainer}>{graph.content}</div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>Meta Data</h3>\n        </div>\n        <div className={classes.code}>\n          <CopyBlock\n            language=\"json\"\n            text={JSON.stringify(nftDetails.ipfs_data.properties, null, 2)}\n            showLineNumbers={false}\n            theme={dracula}\n            wrapLines\n            codeBlock\n          />\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>More from this collection</h3>\n        </div>\n        <div className={classes.collectionItems}>\n          <NFT data={collection?.filter((e) => e.name !== nftDetails.name)} />\n        </div>\n        <div className={classes.allCollecitons}>\n          <button type=\"button\" onClick={() => history.goBack()} className={classes.btnCollections}>\n            View All Collections\n          </button>\n        </div>\n      </div>\n\n      {showSocial ? (\n        <div>\n          <div ref={wrapperRef} className={classes.share}>\n            <div className={classes.copy}>\n              <input type=\"text\" value={window.location.href} readOnly className={classes.textArea} />\n              <CopyToClipboard text={window.location.href} onCopy={onCopyText}>\n                <div className={classes.copy_area}>\n                  {!isCopied ? (\n                    <img className={classes.shareicon} src={copyIcon} alt=\"\" />\n                  ) : (\n                    <img className={classes.shareicon} src={copiedIcon} alt=\"\" />\n                  )}\n                </div>\n              </CopyToClipboard>\n            </div>\n            <div className={classes.shareContent}>\n              {icons.map((icon, idx) => (\n                <a key={idx} href={icon.link} target=\"_blank\" rel=\"noreferrer\">\n                  <img\n                    className={classes.shareIcon}\n                    onClick={() => handleSetState({ text: icon.link })}\n                    src={icon.icon}\n                    alt=\"\"\n                  />\n                </a>\n              ))}\n            </div>\n          </div>\n          <div className={classes.shareContent}>\n            {icons.map((icon, idx) => (\n              <a key={idx} href={icon.link} target=\"_blank\" rel=\"noreferrer\">\n                <img\n                  className={classes.shareIcon}\n                  onClick={() => handleSetState({ text: icon.link })}\n                  src={icon.icon}\n                  alt=\"\"\n                />\n              </a>\n            ))}\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default CollectionNFT;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/overlay/overlay.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/footer/footer.jsx",["989"],"import React from \"react\";\nimport classes from \"./footer.module.css\";\nimport logo from \"../../assets/genadrop-logo-light.svg\";\nimport { footerLinks, orgs, socialLinks } from \"./footer-script\";\n\nconst Footer = () => (\n  <div id=\"hide-footer\">\n    <div className={classes.container}>\n      <div className={classes.top}>\n        <div className={classes.wrapper}>\n          <div className={classes.topLeft}>\n            <a href=\"/\">\n              <img src={logo} alt=\"\" />\n            </a>\n            <div className={classes.socialIcons}>\n              {socialLinks.map((social, idx) => (\n                <a key={idx} className={classes.icon} href={social.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <img src={social.icon} alt={`Minority Programmers ${social.name}`} />\n                </a>\n              ))}\n            </div>\n          </div>\n          <div className={classes.topRight}>\n            {footerLinks.map((link) => (\n              <div key={link.id} className={classes.links}>\n                <div className={classes.title}>{link.title}</div>\n                {link.content.map((linkE) => (\n                  <a href={linkE.link} key={linkE.id}>\n                    {linkE.name}\n                  </a>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className={classes.bottom}>\n        <div className={classes.wrapper}>\n          <div>\n            <div>This Project is in Public Beta</div>\n            <div className={classes.termsAndPolicy}>\n              2022 Genadrop |\n              <a\n                href=\"https://docs.google.com/document/d/16tRGt3sCIauMNDCwq5A99zYUxwU8S5bpGhI0eaJzwAw/edit?usp=sharing\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Privacy Policy |\n              </a>\n              <a\n                href=\"https://docs.google.com/document/d/1Ofbw5j9l3MnOFSa2cALcnJJI6iQz86SdiNmQAp1f6AE/edit?usp=sharing\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Terms of Use |\n              </a>\n              <div className={classes.orgs}>\n                Powered by\n                {orgs.map((org) => (\n                  <a key={org.link} href={org.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img key={org.name} src={org.icon} alt=\"\" />\n                  </a>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <a\n            className={classes.build}\n            href=\"https://www.minorityprogrammers.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Built with ❤️ by the Minority Programmers Association\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Footer;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Navbar/Navbar.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/delete-prompt/prompt.jsx",["990","991","992","993","994","995","996","997","998","999"],"import { useContext } from \"react\";\nimport { setImageAction, setLayerAction, setPrompt } from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./prompt.module.css\";\n\nconst DeletePrompt = () => {\n  const { prompt, dispatch } = useContext(GenContext);\n\n  const handleAccept = () => {\n    console.log(\"delete all-trait starts\");\n    dispatch(prompt);\n    dispatch(setPrompt(null));\n    dispatch(\n      setImageAction({\n        type: \"deleteAll\",\n        value: prompt.payload.id,\n      })\n    );\n    dispatch(\n      setLayerAction({\n        type: \"delete\",\n      })\n    );\n    console.log(\"delete all-trait ends\");\n  };\n\n  const handleReject = () => {\n    dispatch(setPrompt(null));\n  };\n\n  return (\n    <div className={`${classes.container} ${prompt && classes.isActive}`}>\n      <div className={classes.wrapper}>\n        <p>Are you sure you want to delete?</p>\n        <div className={classes.action}>\n          <button onClick={handleReject} className={classes.reject}>\n            Cancel\n          </button>\n          <button onClick={handleAccept} className={classes.accept}>\n            Yes\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeletePrompt;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Notification/Notification.jsx",["1000","1001"],"import React, { useEffect, useRef, useContext, useState } from \"react\";\nimport { setNotification } from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./Notification.module.css\";\nimport warningIcon from \"../../assets/icon-warning.svg\";\nimport successIcon from \"../../assets/icon-success.svg\";\nimport errorIcon from \"../../assets/icon-error.svg\";\nimport blankIcon from \"../../assets/blank.png\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\n\nconst Notification = () => {\n  const feedbackRef = useRef(null);\n  const { notification, loaderMessage, dispatch } = useContext(GenContext);\n  const [state, setState] = useState({\n    toggleFeedback: false,\n    timerId: null,\n  });\n  const { toggleFeedback, timerId } = state;\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const notificationIcon = {\n    warning: warningIcon,\n    error: errorIcon,\n    success: successIcon,\n    default: blankIcon,\n  };\n\n  const handleStop = () => {\n    handleSetState({ toggleFeedback: false });\n    clearTimeout(timerId);\n  };\n\n  useEffect(() => {\n    if (!notification.message) return;\n    handleSetState({ toggleFeedback: true });\n    let timerId = setTimeout(() => {\n      handleSetState({ toggleFeedback: false });\n    }, 5000);\n    handleSetState({ timerId });\n  }, [notification]);\n\n  useEffect(() => {\n    feedbackRef.current.onanimationend = (e) => {\n      if (e.animationName.includes(\"slide-out\")) {\n        dispatch(\n          setNotification({\n            message: \"\",\n            type: \"success\",\n          })\n        );\n      }\n    };\n  }, []);\n\n  return (\n    <div\n      style={{ top: loaderMessage ? \"9em\" : \"5em\" }}\n      className={`${classes.container} ${toggleFeedback && classes.active}`}\n    >\n      <div ref={feedbackRef} className={`${classes.notification} ${classes[notification.type]}`}>\n        <img className={classes.icon} src={notificationIcon[notification.type]} alt=\"\" />\n        <div className={classes.message}>\n          {notification.message.charAt(0).toUpperCase() + notification.message.substring(1)}\n        </div>\n        <CloseIcon onClick={handleStop} className={classes.closeIcon} />\n      </div>\n    </div>\n  );\n};\n\nexport default Notification;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/singleNFT/singleNFT.jsx",["1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016"],"import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { CopyBlock, dracula } from \"react-code-blocks\";\nimport axios from \"axios\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { FacebookShareButton, TwitterShareButton, WhatsappShareButton } from \"react-share\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { buyGraphNft, buyNft } from \"../../utils\";\nimport classes from \"./singleNFT.module.css\";\nimport Graph from \"../../components/Nft-details/graph/graph\";\nimport DropItem from \"../../components/Nft-details/dropItem/dropItem\";\nimport copiedIcon from \"../../assets/copied.svg\";\nimport copyIcon from \"../../assets/copy-solid.svg\";\nimport walletIcon from \"../../assets/wallet-icon.png\";\nimport twitterIcon from \"../../assets/twitter.svg\";\nimport facebookIcon from \"../../assets/facebook.svg\";\nimport whatsappIcon from \"../../assets/whatsapp.svg\";\nimport descriptionIcon from \"../../assets/description-icon.png\";\nimport detailsIcon from \"../../assets/details.png\";\nimport Search from \"../../components/Nft-details/history/search\";\nimport { readNftTransaction } from \"../../utils/firebase\";\nimport algoLogo from \"../../assets/icon-algo.svg\";\nimport { setOverlay, setNotification } from \"../../gen-state/gen.actions\";\nimport supportedChains from \"../../utils/supportedChains\";\nimport SimilarNFTs from \"../../components/similarNFTs/similarNFTs\";\nimport { auroraUserData, celoUserData, polygonUserData } from \"../../renderless/fetch-data/fetchUserGraphData\";\n\nconst SingleNFT = () => {\n  const { account, connector, mainnet, dispatch, singleAlgoNfts, chainId } = useContext(GenContext);\n  const history = useHistory();\n  const {\n    params: { chainId: nftChainId, nftId },\n  } = useRouteMatch();\n  const wrapperRef = useRef(null);\n  const shareRef = useRef();\n  const [state, setState] = useState({\n    dropdown: [\"1\", \"3\"],\n    nftDetails: null,\n    algoPrice: 0,\n    isLoading: true,\n    transactionHistory: null,\n    showSocial: false,\n    chainIcon: algoLogo,\n    isCopied: false,\n    chainSymbol: \"\",\n  });\n  const {\n    dropdown,\n    chainSymbol,\n    nftDetails,\n    algoPrice,\n    isLoading,\n    chainIcon,\n    showSocial,\n    isCopied,\n    transactionHistory,\n  } = state;\n\n  const buyProps = {\n    dispatch,\n    account,\n    connector,\n    mainnet,\n    nftDetails,\n    history,\n    chainId,\n  };\n\n  const Explorers = [\n    { algo: [{ testnet: \"https://testnet.algoexplorer.io/\" }, { mainnet: \"https://algoexplorer.io/tx/\" }] },\n    { matic: [{ testnet: \"https://mumbai.polygonscan.com/tx/\" }, { mainnet: \"https://polygonscan.com/tx/\" }] },\n    {\n      near: [{ testnet: \"https://testnet.aurorascan.dev/tx/\" }, { mainnet: \"https://explorer.mainnet.aurora.dev/tx/\" }],\n    },\n    {\n      celo: [\n        { mainnet: \"https://alfajores-blockscout.celo-testnet.org/tx/\" },\n        { testnet: \"https://explorer.celo.org/tx/\" },\n      ],\n    },\n  ];\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          handleSetState({ showSocial: false });\n        }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useEffect(() => {\n    dispatch(setOverlay(true));\n    if (Number(nftChainId) !== 4160) return;\n    let nftDetails = null;\n    // const cacheNftDetails = JSON.parse(window.localStorage.activeAlgoNft);\n    // if (cacheNftDetails) {\n    //   nftDetails = cacheNftDetails;\n    // } else {\n    nftDetails = singleAlgoNfts[nftId];\n    // }\n    if (nftDetails) {\n      // window.localStorage.activeAlgoNft = JSON.stringify(nftDetails);\n      (async function getNftDetails() {\n        const tHistory = await readNftTransaction(nftId);\n        tHistory.find((t) => {\n          if (t.type === \"Minting\" && tHistory.length > 1) t.price = tHistory[1].price;\n          else t.price = nftDetails.price;\n        });\n        handleSetState({\n          nftDetails,\n          isLoading: false,\n          transactionHistory: tHistory.reverse(),\n        });\n        dispatch(setOverlay(false));\n        document.documentElement.scrollTop = 0;\n      })();\n    }\n  }, [singleAlgoNfts, nftId]);\n\n  useEffect(() => {\n    dispatch(setOverlay(true));\n    console.log(\"xxx\", nftChainId);\n    if (Number(nftChainId) === 4160) return;\n    (async function getNftDetails() {\n      try {\n        // Fetching for nft by Id comparing it to the chain it belongs to before displaying the Id\n        if (Number(nftChainId) === 44787 || Number(nftChainId) === 42220) {\n          const [celoData, trHistory] = await celoUserData(nftId);\n          handleSetState({\n            nftDetails: celoData,\n            isLoading: false,\n            transactionHistory: trHistory,\n          });\n        } else if (Number(nftChainId) === 1313161555) {\n          const [auroraData, trHistory] = await auroraUserData(nftId);\n          if (!auroraData) return;\n          handleSetState({\n            nftDetails: auroraData,\n            isLoading: false,\n            transactionHistory: trHistory,\n          });\n        } else if (Number(nftChainId) === 80001 || Number(nftChainId) === 137) {\n          const [polygonData, trHistory] = await polygonUserData(nftId);\n          if (!polygonData) return history.goBack();\n          handleSetState({\n            nftDetails: polygonData,\n            isLoading: false,\n            transactionHistory: trHistory,\n          });\n        }\n      } catch (error) {\n        console.log({ error });\n      }\n      dispatch(setOverlay(false));\n    })();\n    document.documentElement.scrollTop = 0;\n  }, [nftId]);\n\n  useEffect(() => {\n    const pair = supportedChains[nftDetails?.chain]?.coinGeckoLabel;\n    if (Number(nftChainId) !== 4160 && pair) {\n      axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${pair}&vs_currencies=usd`).then((res) => {\n        const value = Object.values(res.data)[0].usd;\n        handleSetState({\n          chainIcon: supportedChains[nftDetails.chain].icon,\n          algoPrice: value,\n          chainSymbol: supportedChains[nftDetails.chain].symbol,\n        });\n      });\n    }\n    if (Number(nftChainId) === 4160) {\n      axios.get(\"https://api.coinbase.com/v2/prices/ALGO-USD/spot\").then((res) => {\n        handleSetState({ algoPrice: res.data.data.amount });\n      });\n    }\n  }, [nftDetails]);\n  // share model\n  const handleClickOutside = (event) => {\n    if (!shareRef?.current?.contains(event.target)) {\n      handleSetState({ showSocial: false });\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  const onCopyText = () => {\n    handleSetState({ isCopied: true });\n    setTimeout(() => {\n      handleSetState({ isCopied: false });\n    }, 1000);\n  };\n\n  if (isLoading) {\n    return (\n      <div className={classes.menu}>\n        <div className={classes.left}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n\n        <div className={classes.right}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n\n        <div className={classes.fullLegnth}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={200} />\n        </div>\n      </div>\n    );\n  }\n\n  const description = {\n    icon: detailsIcon,\n    title: \"Description\",\n    content: `${nftDetails.description}`,\n  };\n\n  const graph = {\n    icon: detailsIcon,\n    title: \"Price History\",\n    content: <Graph details={transactionHistory} />,\n  };\n\n  const attributeContent = () => (\n    <div className={classes.attributesContainer}>\n      {nftDetails.properties.map((attribute, idx) => {\n        return attribute.trait_type && attribute.value ? (\n          <div key={idx} className={classes.attribute}>\n            <span className={classes.title}>{attribute.trait_type}</span>\n            <span className={classes.description}>{attribute.value}</span>\n          </div>\n        ) : nftDetails.properties.length === 1 ? (\n          <span key={idx}> No Attributes Available</span>\n        ) : (\n          <></>\n        );\n      })}\n    </div>\n  );\n\n  const attributesItem = {\n    icon: descriptionIcon,\n    title: \"Attributes\",\n    content: attributeContent(),\n  };\n\n  const similar = {\n    icon: \"\",\n    title: \"Similar NFTs\",\n    content: <SimilarNFTs data={nftDetails} />,\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.section1}>\n        <div className={classes.v_subsection1}>\n          <img className={classes.nft} src={nftDetails.image_url} alt=\"\" />\n\n          <div className={classes.feature}>\n            <DropItem key={1} item={attributesItem} id={1} dropdown={dropdown} handleSetState={handleSetState} />\n          </div>\n        </div>\n        <div className={classes.v_subsection2}>\n          <div className={classes.feature}>\n            <div className={classes.mainDetails}>\n              <div className={classes.collectionHeader}>\n                <div className={classes.nftId}>{nftDetails.name}</div>\n              </div>\n\n              <div className={classes.icons}>\n                <svg\n                  onClick={() => {\n                    handleSetState({ showSocial: true });\n                  }}\n                  className={`${classes.icon}`}\n                  width=\"18\"\n                  height=\"20\"\n                  viewBox=\"0 0 18 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M15 14.0781C15.8125 14.0781 16.5 14.375 17.0625 14.9688C17.625 15.5312 17.9062 16.2031 17.9062 16.9844C17.9062 17.7969 17.6094 18.5 17.0156 19.0938C16.4531 19.6562 15.7812 19.9375 15 19.9375C14.2188 19.9375 13.5312 19.6562 12.9375 19.0938C12.375 18.5 12.0938 17.7969 12.0938 16.9844C12.0938 16.6719 12.1094 16.4531 12.1406 16.3281L5.0625 12.2031C4.46875 12.7344 3.78125 13 3 13C2.1875 13 1.48438 12.7031 0.890625 12.1094C0.296875 11.5156 0 10.8125 0 10C0 9.1875 0.296875 8.48438 0.890625 7.89062C1.48438 7.29688 2.1875 7 3 7C3.78125 7 4.46875 7.26562 5.0625 7.79688L12.0938 3.71875C12.0312 3.40625 12 3.17188 12 3.01562C12 2.20312 12.2969 1.5 12.8906 0.90625C13.4844 0.3125 14.1875 0.015625 15 0.015625C15.8125 0.015625 16.5156 0.3125 17.1094 0.90625C17.7031 1.5 18 2.20312 18 3.01562C18 3.82812 17.7031 4.53125 17.1094 5.125C16.5156 5.71875 15.8125 6.01562 15 6.01562C14.25 6.01562 13.5625 5.73438 12.9375 5.17188L5.90625 9.29688C5.96875 9.60938 6 9.84375 6 10C6 10.1562 5.96875 10.3906 5.90625 10.7031L13.0312 14.8281C13.5938 14.3281 14.25 14.0781 15 14.0781Z\"\n                    fill=\"#707A83\"\n                  />\n                </svg>\n              </div>\n            </div>\n            <div className={classes.priceSection}>\n              <span className={classes.title}>Current price</span>\n              <span className={classes.price}>\n                <img src={chainIcon} alt=\"\" />\n                <p className={classes.tokenValue}>\n                  {nftDetails.price} {chainSymbol || \"\"}\n                </p>\n                {nftDetails?.price === 0 ||\n                  (nftDetails?.price === null ? (\n                    <></>\n                  ) : (\n                    <>\n                      <span className={classes.usdValue}>\n                        ($\n                        {(nftDetails.price * algoPrice).toFixed(2)})\n                      </span>\n                    </>\n                  ))}\n              </span>\n            </div>\n            {nftDetails?.price === 0 || nftDetails.price === null ? (\n              <div className={classes.btns}>\n                {account === nftDetails.owner ? (\n                  <button\n                    onClick={() => history.push(`/marketplace/1of1/list/${nftDetails.chain}/${nftDetails.Id}`)}\n                    className={classes.buy}\n                  >\n                    List\n                  </button>\n                ) : (\n                  <button className={classes.sold} disabled={nftDetails.sold}>\n                    Not Listed!\n                  </button>\n                )}\n              </div>\n            ) : (\n              <div className={classes.btns}>\n                {nftDetails.sold ? (\n                  <>\n                    <button className={classes.sold} disabled={nftDetails.sold}>\n                      SOLD!\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    {Number(nftDetails.chain) !== 4160 ? (\n                      <button className={classes.buy} disabled={nftDetails.sold} onClick={() => buyGraphNft(buyProps)}>\n                        Buy now\n                      </button>\n                    ) : (\n                      <button\n                        type=\"button\"\n                        className={classes.buy}\n                        disabled={nftDetails.sold}\n                        onClick={() => buyNft(buyProps)}\n                      >\n                        Buy now\n                      </button>\n                    )}\n                  </>\n                )}\n              </div>\n            )}\n          </div>\n          {/* PRICE HISTORY */}\n          {/* <div className={classes.feature}>\n            <DropItem\n              key={2}\n              item={graph}\n              id={2}\n              dropdown={dropdown}\n              handleSetState={handleSetState}\n            />\n          </div> */}\n          <div className={classes.feature}>\n            <DropItem key={3} item={description} id={3} dropdown={dropdown} handleSetState={handleSetState} />\n          </div>\n        </div>\n      </div>\n\n      {/* TRANSACTION HISTORY */}\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>Transaction History</h3>\n        </div>\n\n        <div className={classes.history}>\n          <Search data={transactionHistory} chain={nftDetails?.chain ? nftDetails.chain : \"\"} />\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>Price History</h3>\n        </div>\n        <div className={classes.tableContainer}>{graph.content}</div>\n      </div>\n\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>Meta Data</h3>\n        </div>\n        <div className={classes.code}>\n          <CopyBlock\n            language=\"json\"\n            text={JSON.stringify(nftDetails.properties, null, 2)}\n            showLineNumbers={false}\n            theme={dracula}\n            wrapLines\n            codeBlock\n          />\n        </div>\n      </div>\n\n      <div className={classes.feature}>\n        <DropItem key={4} item={similar} id={4} dropdown={dropdown} handleSetState={handleSetState} />\n      </div>\n      {showSocial ? (\n        <div ref={shareRef}>\n          <div ref={wrapperRef} className={classes.share}>\n            <div className={classes.copy}>\n              <input type=\"text\" value={window.location.href} readOnly className={classes.textArea} />\n              <CopyToClipboard text={window.location.href} onCopy={onCopyText}>\n                <div className={classes.copy_area}>\n                  {!isCopied ? (\n                    <img className={classes.shareicon} src={copyIcon} alt=\"\" />\n                  ) : (\n                    <img className={classes.shareicon} src={copiedIcon} alt=\"\" />\n                  )}\n                </div>\n              </CopyToClipboard>\n            </div>\n            <div className={classes.shareContent}>\n              <FacebookShareButton url={window.location.href}>\n                <img className={classes.shareIcon} src={facebookIcon} alt=\"facebook\" />\n              </FacebookShareButton>\n              <TwitterShareButton url={window.location.href}>\n                <img className={classes.shareIcon} src={twitterIcon} alt=\"twitter\" />\n              </TwitterShareButton>\n              <WhatsappShareButton url={window.location.href}>\n                <img className={classes.shareIcon} src={whatsappIcon} alt=\"twitter\" />\n              </WhatsappShareButton>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default SingleNFT;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/clipboard/clipboard.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Switch-Wallet-Notification/SwitchWalletNotification.jsx",["1017","1018","1019"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./SwitchWalletNotification.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { setSwitchWalletNotification } from \"../../gen-state/gen.actions\";\n\nconst SwitchWalletNotification = () => {\n  const { dispatch, switchWalletNotification, mainnet } = useContext(GenContext);\n\n  const handleClose = () => {\n    dispatch(setSwitchWalletNotification(false));\n  };\n\n  return (\n    <div className={`${classes.container} ${switchWalletNotification && classes.active}`}>\n      <div className={classes.switchWalletNotification}>\n        <div className={classes.message}>\n          You're viewing data from the {mainnet ? \"main\" : \"test\"} network, but you are about to switch to the{\" \"}\n          {mainnet ? \"test\" : \"main\"} network. To continue, please switch to\n          <a\n            href={mainnet ? \"https://genadrop-staging.vercel.app/\" : \"https://www.genadrop.com/\"}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {mainnet ? \"genadrop-staging.vercel.app\" : \"genadrop.com\"}\n          </a>\n        </div>\n        <CloseIcon className={classes.closeIcon} onClick={handleClose} />\n      </div>\n    </div>\n  );\n};\n\nexport default SwitchWalletNotification;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Marketplace/Marketplace.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Loader/Loader.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/error-boundary/error-boundary.jsx",["1020","1021"],"import React from \"react\";\nimport classes from \"./error.module.css\";\n\nimport SomethingWentWrong from \"./Error\";\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      hasErrored: false,\n    };\n  }\n\n  static getDerivedStateFromError() {\n    // process the error\n\n    return { hasErrored: true };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n  }\n\n  render() {\n    if (this.state.hasErrored) {\n      return <SomethingWentWrong />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/home/home.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/mint/mint.jsx",["1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047"],"import { useHistory, useRouteMatch } from \"react-router-dom\";\nimport classes from \"./mint.module.css\";\nimport collectionIcon from \"../../assets/icon-collection.svg\";\nimport _1of1Icon from \"../../assets/icon-1of1.svg\";\nimport shieldIcon from \"../../assets/icon-shield-check.svg\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\n\nconst Mint = () => {\n  const history = useHistory();\n  const { url } = useRouteMatch();\n  const { minter } = useContext(GenContext);\n\n  if (minter) {\n    history.push(`/mint/${minter.mintType}/minter`);\n    return null;\n  }\n\n  const handleMint = (target) => {\n    history.push(`${url}/${target}`);\n  };\n\n  return (\n    <div className={classes.container}>\n      <header className={classes.headingWrapper}>\n        <h1 className={classes.heading}>Mint Your NFTs</h1>\n        <p className={classes.description}>\n          With Genadrop simplified minting, you can mint your NFts as fast as your fingers can go. <br />\n          Simply choose your mint type, either a <span>Collection mint</span> or <span>1 of 1 mint</span>, and upload a\n          file to <br />\n          mint to any of our supported blockchains!\n        </p>\n        <div className={classes.disclaimer}>\n          <img src={shieldIcon} alt=\"\" />{\" \"}\n          <p>We do not own your private keys and cannot access your funds without your confirmation</p>\n        </div>\n      </header>\n\n      <main className={classes.mainWrapper}>\n        <div className={`${classes.card} ${classes.collection}`}>\n          <div className={classes.imageContainer}>\n            <img src={collectionIcon} alt=\"\" />\n          </div>\n          <h3 className={classes.title}> Mint a collection</h3>\n          <p className={classes.description}>\n            {\" \"}\n            Mint your collection downloaded from Genadrop Creat app. These are collections of NFTs with mix and match\n            traits in a Zip file.{\" \"}\n          </p>\n          <button onClick={() => handleMint(\"collection\")} className={classes.btn}>\n            Mint collection\n          </button>\n        </div>\n\n        <div className={`${classes.card} ${classes._1of1}`}>\n          <div className={classes.imageContainer}>\n            <img src={_1of1Icon} alt=\"\" />\n          </div>\n          <h3 className={classes.title}> Mint 1 of 1 </h3>\n          <p className={classes.description}>\n            {\" \"}\n            1 of 1 is a unique NFT you are minting individually. This is usually a single image in the format of Png{\" \"}\n          </p>\n          <button onClick={() => handleMint(\"1of1\")} type=\"button\" className={classes.btn}>\n            Mint 1 of 1\n          </button>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Mint;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/create/create.jsx",["1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086"],"import LayerOrders from \"../../components/layerorders/layerorders\";\nimport CollectionDescription from \"../../components/description/collection-description\";\nimport CollectionOverview from \"../../components/overview/collection-overview\";\nimport classes from \"./create.module.css\";\nimport { useEffect, useState } from \"react\";\nimport SubscriptionNotification from \"../../components/Subscription-Notification/SubscriptionNotification\";\nimport CollectionNameModal from \"../../components/Modals/Collection-Name-Modal/CollectionNameModal\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  setOverlay,\n  setSession,\n  setToggleCollectionNameModal,\n  setToggleSessionModal,\n  setUpgradePlan,\n} from \"../../gen-state/gen.actions\";\nimport { fetchSession } from \"../../renderless/store-data/StoreData.script\";\nimport { useHistory } from \"react-router-dom\";\nimport CreateGuide from \"../../components/create-guide/create-guide\";\nimport GoogleAuth from \"../../components/google-auth/googleAuth\";\nimport ProfileDropdown from \"../../components/profile-dropdown/profileDropdown\";\nimport { ReactComponent as Diskicon } from \"../../assets/icon-disk.svg\";\nimport { ReactComponent as DropdownIcon } from \"../../assets/icon-chevron-down.svg\";\nimport ProgressBar from \"./Progress-Bar/ProgressBar\";\nimport { useRef } from \"react\";\nimport { handleSampleLayers } from \"../../components/menu/collection-menu-script\";\nimport LoginModal from \"../../components/Modals/Login-Modal/LoginModal\";\nimport { signInWithGoogle } from \"../../components/google-auth/googleAuth.script\";\n\nconst Create = () => {\n  const collectionNameRef = useRef();\n  const history = useHistory();\n  const [profileDropdown, toggleProfileDropdown] = useState(false);\n  const [toggleGuide, setGuide] = useState(false);\n  const [nameWidth, setNameWidth] = useState(0);\n\n  const { dispatch, isUser, currentUser, currentPlan, collectionName } = useContext(GenContext);\n\n  const handleSample = () => {\n    handleSampleLayers({ dispatch });\n  };\n\n  const handleTutorial = () => {\n    setGuide(true);\n  };\n\n  const handleUpgrade = () => {\n    dispatch(setUpgradePlan(true));\n    history.push(\"/create/session/pricing\");\n  };\n\n  useEffect(() => {\n    if (!currentUser || isUser === \"true\") return;\n    const fetch = async () => {\n      try {\n        dispatch(setOverlay(true));\n        const sessions = await fetchSession({ currentUser });\n        dispatch(setOverlay(false));\n        if (sessions.length) {\n          dispatch(setSession(sessions));\n          dispatch(setToggleSessionModal(true));\n        } else if (!collectionName) {\n          dispatch(setToggleCollectionNameModal(true));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [currentUser]);\n\n  useEffect(() => {\n    let width = collectionNameRef.current.offsetWidth;\n    setNameWidth(width / 16);\n  }, [collectionName, currentUser]);\n\n  useEffect(() => {\n    document.documentElement.scrollTop = 0;\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <SubscriptionNotification />\n      <LoginModal />\n      <CollectionNameModal />\n      <CreateGuide toggleGuide={toggleGuide} setGuide={setGuide} />\n      <div className={classes.details}>\n        <div\n          onClick={() => signInWithGoogle({ dispatch })}\n          className={`${classes.signIn} ${!currentUser && classes.active}`}\n        >\n          Sign in to auto-save\n        </div>\n        <div className={`${classes.profileContainer} ${currentUser && classes.active}`}>\n          <div\n            onMouseOver={() => toggleProfileDropdown(true)}\n            onMouseOut={() => toggleProfileDropdown(false)}\n            className={`${classes.profile} ${currentUser && classes.active}`}\n          >\n            <GoogleAuth />\n            <div className={classes.collectionNameContainer}>\n              <div\n                ref={collectionNameRef}\n                className={`${classes.collectionName} ${currentUser && classes.active} ${\n                  nameWidth > 6 && classes.move\n                }`}\n              >\n                {collectionName}\n              </div>\n            </div>\n            <ProfileDropdown\n              dropdown={profileDropdown}\n              setDropdown={toggleProfileDropdown}\n              userName={currentUser?.displayName}\n            />\n            <div className={classes.dropdownIconContainer}>\n              <DropdownIcon className={classes.dropdownIcon} />\n            </div>\n          </div>\n          {currentPlan === \"free\" ? (\n            <div onClick={handleUpgrade} className={classes.autoSave}>\n              <Diskicon className={classes.diskIcon} />\n              <div>Auto-save</div>\n            </div>\n          ) : (\n            <ProgressBar />\n          )}\n        </div>\n        <div className={classes.guide}>\n          <div>Need help?</div>\n          {currentPlan === \"free\" ? <div onClick={handleSample}>Try our samples</div> : null}\n          <div onClick={handleTutorial}>Watch tutorial</div>\n        </div>\n      </div>\n      <div className={classes.wrapper}>\n        <div className={classes.layer_overview}>\n          <LayerOrders />\n          <CollectionOverview />\n        </div>\n        <CollectionDescription />\n      </div>\n    </div>\n  );\n};\n\nexport default Create;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pricing/Success-Plan/SuccessPlan.jsx",["1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  addRule,\n  setCollectionName,\n  setCurrentPlan,\n  setCurrentSession,\n  setCurrentUser,\n  setIsUser,\n  setLayerAction,\n  setLayers,\n  setNftLayers,\n  setPreview,\n  setProposedPlan,\n  setUpgradePlan,\n} from \"../../../gen-state/gen.actions\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { handleResetCreate } from \"../../../utils\";\nimport { v4 as uuid } from \"uuid\";\nimport { ReactComponent as SuccessIcon } from \"../../../assets/icon-payment-successful.svg\";\nimport classes from \"./SuccessPlan.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchUserData } from \"../../../renderless/store-data/StoreDataLocal\";\nimport { saveSession } from \"../../../renderless/store-data/StoreData.script\";\n\nconst SuccessPlan = () => {\n  const history = useHistory();\n  const { dispatch, upgradePlan, sessionId, collectionName, proposedPlan, currentUser } = useContext(GenContext);\n  const [inputValue, setInputValue] = useState(\"\");\n  let isStripe = window.sessionStorage.isStripe;\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const save = async ({ collectionName = \"New Collection\", sessionId, proposedPlan, currentUser }) => {\n    const res = await saveSession({ currentUser, sessionId, collectionName, currentPlan: proposedPlan });\n    if (!res) return; // showNotification\n    dispatch(setUpgradePlan(false));\n    return;\n  };\n\n  const handleContinue = async (e) => {\n    e.preventDefault();\n    dispatch(setCollectionName(inputValue));\n    dispatch(\n      setLayerAction({\n        type: \"name\",\n      })\n    );\n    await save({ collectionName: inputValue, sessionId, currentUser, proposedPlan });\n    history.push(\"/create\");\n  };\n\n  useEffect(() => {\n    if (isStripe === \"true\") return;\n    let ID = uuid();\n    if (!upgradePlan) {\n      handleResetCreate({ dispatch });\n      dispatch(setCurrentSession(ID));\n      save({ collectionName, sessionId: ID, currentUser, proposedPlan });\n    } else if (!sessionId) {\n      dispatch(setCurrentSession(ID));\n      save({ collectionName, sessionId: ID, currentUser, proposedPlan });\n    } else {\n      save({ collectionName, sessionId, currentUser, proposedPlan });\n    }\n    if (!collectionName) {\n      dispatch(setCollectionName(\"New Collection\"));\n    }\n    dispatch(setCurrentPlan(proposedPlan));\n  }, []);\n\n  useEffect(() => {\n    if (isStripe === \"true\") return;\n    if (!proposedPlan) {\n      return history.push(\"/create\");\n    }\n    document.documentElement.scrollTop = 0;\n  }, []);\n\n  useEffect(() => {\n    async function runFetch() {\n      if (isStripe === \"true\") {\n        const {\n          layers,\n          nftLayers,\n          preview,\n          rule,\n          collectionName,\n          sessionId,\n          upgradePlan,\n          proposedPlan,\n          currentPlan,\n          currentUser,\n        } = await fetchUserData();\n        let ID = uuid();\n        if (!upgradePlan) {\n          handleResetCreate({ dispatch });\n          await save({ collectionName: \"New Collection\", sessionId: ID, currentUser, proposedPlan });\n          dispatch(setCurrentSession(ID));\n          dispatch(setCurrentUser(currentUser));\n          dispatch(setCollectionName(\"New Collection\"));\n          dispatch(setCurrentPlan(proposedPlan));\n          dispatch(setProposedPlan(proposedPlan));\n          return;\n        } else if (!sessionId) {\n          dispatch(setCurrentSession(ID));\n        } else {\n          dispatch(setCurrentSession(sessionId));\n        }\n        await save({ collectionName, sessionId: sessionId ? sessionId : ID, currentUser, proposedPlan: currentPlan });\n        dispatch(setLayers(layers));\n        dispatch(setNftLayers(nftLayers));\n        dispatch(setPreview(preview));\n        dispatch(addRule(rule));\n        dispatch(setCollectionName(collectionName));\n        dispatch(setProposedPlan(proposedPlan));\n        dispatch(setCurrentUser(currentUser));\n        dispatch(setUpgradePlan(upgradePlan));\n        dispatch(setCurrentPlan(proposedPlan));\n      }\n      window.sessionStorage.isStripe = \"false\";\n      dispatch(setIsUser(\"true\"));\n    }\n    runFetch();\n  }, []);\n\n  useEffect(() => {\n    setInputValue(collectionName);\n  }, [collectionName]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.wrapper}>\n        <SuccessIcon className={classes.successIcon} />\n        <div className={classes.heading}>Payment Successful!</div>\n        <div className={classes.description}>\n          Good choice! Your payment for Hobby plan was successful. Input a collection name to proceed to the create\n          page.\n        </div>\n        <form onSubmit={handleContinue}>\n          <input onChange={handleChange} type=\"text\" placeholder=\"Enter collection name\" value={inputValue} />\n          <button onClick={handleContinue} className={inputValue && classes.active}>\n            Continue\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SuccessPlan;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pricing/Failed-Plan/FailedPlan.jsx",["1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126"],"import { useContext, useEffect } from \"react\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { ReactComponent as FailedIcon } from \"../../../assets/icon-payment-failed.svg\";\nimport classes from \"./FailedPlan.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { setProposedPlan } from \"../../../gen-state/gen.actions\";\n\nconst FailedPlan = () => {\n  const history = useHistory();\n  const { dispatch, proposedPlan } = useContext(GenContext);\n\n  useEffect(() => {\n    if (!proposedPlan) {\n      return history.push(\"/create\");\n    }\n    dispatch(setProposedPlan(\"\"));\n    document.documentElement.scrollTop = 0;\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.wrapper}>\n        <FailedIcon className={classes.failedIcon} />\n        <div className={classes.heading}>Payment failed!</div>\n        <div className={classes.description}>Something went terribly wrong here Don’t worry! Let’s try again</div>\n        <div className={classes.btnContainer}>\n          <button onClick={() => history.push(\"/create/session/pricing\")} className={classes.btn_1}>\n            Try again\n          </button>\n          <button onClick={() => history.push(\"/create\")} className={classes.btn_2}>\n            Go to create\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FailedPlan;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/store-data/StoreData.jsx",["1127","1128","1129","1130","1131"],"import { useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { setImageAction, setLayerAction, setNftLayers } from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  deleteAllTraits,\n  deleteTrait,\n  renameTrait,\n  saveCollectionName,\n  saveLayers,\n  saveNftLayers,\n  saveRules,\n  saveTraits,\n} from \"./StoreData.script\";\n\nconst StoreData = () => {\n  const location = useLocation();\n\n  const {\n    dispatch,\n    layers,\n    nftLayers,\n    rule,\n    collectionName,\n    sessionId,\n    currentUser,\n    imageAction,\n    layerAction,\n    upgradePlan,\n    currentPlan,\n  } = useContext(GenContext);\n\n  const resetLayerAction = () => {\n    dispatch(\n      setLayerAction({\n        type: \"\",\n      })\n    );\n  };\n\n  useEffect(() => {\n    const { type } = layerAction;\n    if (type !== \"name\") return;\n    saveCollectionName({ currentUser, sessionId, collectionName });\n    resetLayerAction();\n  }, [layerAction, currentUser, sessionId, collectionName]);\n\n  useEffect(() => {\n    const { type } = layerAction;\n    if ((!type && !imageAction.type) || type === \"generate\" || type === \"loadPreNftLayers\") return;\n    const newLayers = layers.map(({ traits, ...otherLayerProps }) => {\n      const newTraits = traits.map(({ image, ...otherTraitProps }) => {\n        return { image: \"\", ...otherTraitProps };\n      });\n      return { traits: newTraits, ...otherLayerProps };\n    });\n    if (type !== \"order\") {\n      saveLayers({ currentUser, sessionId, layers: newLayers });\n    } else if (type === \"order\") {\n      saveLayers({ currentUser, sessionId, layers: newLayers });\n    }\n    if (location.pathname === \"/create\" && type !== \"rule\") {\n      dispatch(setNftLayers([]));\n    }\n    resetLayerAction();\n  }, [layerAction, imageAction, layers, currentUser, sessionId]);\n\n  useEffect(() => {\n    const nftTraits = [];\n    const newNftLayers = nftLayers.map(({ image, id, attributes, ...otherLayerProps }) => {\n      nftTraits.push({ image, id });\n      return { image: \"\", id, attributes, ...otherLayerProps };\n    });\n    saveNftLayers({ currentUser, sessionId, nftLayers: newNftLayers, nftTraits });\n    resetLayerAction();\n  }, [nftLayers, currentUser, sessionId]);\n\n  useEffect(() => {\n    const { type, value } = imageAction;\n    if (!type) return;\n\n    switch (type) {\n      case \"upload\":\n        saveTraits({ dispatch, currentUser, sessionId, ...value });\n        break;\n      case \"rename\":\n        renameTrait({ dispatch, currentUser, sessionId, ...value });\n        break;\n      case \"delete\":\n        deleteTrait({ dispatch, currentUser, sessionId, ...value });\n        break;\n      case \"deleteAll\":\n        deleteAllTraits({ dispatch, currentUser, sessionId, id: value });\n        break;\n      default:\n        break;\n    }\n\n    dispatch(\n      setImageAction({\n        type: \"\",\n        value: {},\n      })\n    );\n  }, [imageAction, currentUser, sessionId]);\n\n  useEffect(() => {\n    const { type } = layerAction;\n    if (type !== \"rule\") return;\n    let newRules = rule.map((r) => {\n      let iRule = r.map(({ imageFile, ...ir }) => {\n        return { imageFile: \"\", ...ir };\n      });\n      return iRule;\n    });\n\n    let strRules = JSON.stringify(newRules);\n    saveRules({ currentUser, sessionId, rules: strRules });\n    resetLayerAction();\n  }, [layerAction, currentUser, sessionId, rule]);\n\n  useEffect(() => {\n    if (currentUser && sessionId && upgradePlan && currentPlan === \"free\") {\n      const newLayers = layers.map(({ traits, ...otherLayerProps }) => {\n        const newTraits = traits.map(({ image, ...otherTraitProps }) => {\n          return { image: \"\", ...otherTraitProps };\n        });\n        return { traits: newTraits, ...otherLayerProps };\n      });\n      layers.forEach(({ id, traits }, i) => {\n        traits.forEach(async (trait, j) => {\n          await saveTraits({ dispatch, currentUser, sessionId, id, traits: [trait] });\n        });\n      });\n      saveLayers({ currentUser, sessionId, layers: newLayers });\n      const nftTraits = [];\n      const newNftLayers = nftLayers.map(({ image, id, attributes, ...otherLayerProps }) => {\n        nftTraits.push({ image, id });\n        return { image: \"\", id, attributes, ...otherLayerProps };\n      });\n      saveNftLayers({ currentUser, sessionId, nftLayers: newNftLayers, nftTraits });\n    }\n  }, [currentUser, sessionId, upgradePlan, currentPlan]);\n\n  return null;\n};\n\nexport default StoreData;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/userDashboard/singleNFT/singleNFT.jsx",["1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154"],"import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { useHistory, useRouteMatch, Link } from \"react-router-dom\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { CopyBlock, dracula } from \"react-code-blocks\";\nimport axios from \"axios\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { FacebookShareButton, TwitterShareButton, WhatsappShareButton } from \"react-share\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport classes from \"./singleNFT.module.css\";\nimport Graph from \"../../../components/Nft-details/graph/graph\";\nimport DropItem from \"../../../components/Nft-details/dropItem/dropItem\";\nimport copiedIcon from \"../../../assets/copied.svg\";\nimport copyIcon from \"../../../assets/copy-solid.svg\";\nimport twitterIcon from \"../../../assets/twitter.svg\";\nimport facebookIcon from \"../../../assets/facebook.svg\";\nimport whatsappIcon from \"../../../assets/whatsapp.svg\";\nimport descriptionIcon from \"../../../assets/description-icon.png\";\nimport detailsIcon from \"../../../assets/details.png\";\nimport Search from \"../../../components/Nft-details/history/search\";\nimport { readNftTransaction } from \"../../../utils/firebase\";\nimport algoLogo from \"../../../assets/icon-algo.svg\";\nimport { setNotification } from \"../../../gen-state/gen.actions\";\nimport supportedChains from \"../../../utils/supportedChains\";\nimport { auroraUserData, celoUserData, polygonUserData } from \"../../../renderless/fetch-data/fetchUserGraphData\";\n\nconst ListSingleNFT = (nft) => {\n  const { account, connector, mainnet, dispatch, singleAlgoNfts, chainId } = useContext(GenContext);\n  const { Id, collection_name, name, price, image_url, chain } = nft;\n\n  const history = useHistory();\n  const {\n    params: { chainId: nftChainId, nftId },\n  } = useRouteMatch();\n  const wrapperRef = useRef(null);\n  const [state, setState] = useState({\n    dropdown: [\"1\", \"3\"],\n    nftDetails: null,\n    algoPrice: 0,\n    isLoading: true,\n    transactionHistory: null,\n    showSocial: false,\n    chainIcon: algoLogo,\n    isCopied: false,\n    chainSymbol: \"\",\n  });\n  const {\n    dropdown,\n    chainSymbol,\n    nftDetails,\n    algoPrice,\n    isLoading,\n    chainIcon,\n    showSocial,\n    isCopied,\n    transactionHistory,\n  } = state;\n\n  const buyProps = {\n    dispatch,\n    account,\n    connector,\n    mainnet,\n    nftDetails,\n    history,\n    chainId,\n  };\n\n  const Explorers = [\n    { algo: [{ testnet: \"https://testnet.algoexplorer.io/\" }, { mainnet: \"https://algoexplorer.io/tx/\" }] },\n    { matic: [{ testnet: \"https://mumbai.polygonscan.com/tx/\" }, { mainnet: \"https://polygonscan.com/tx/\" }] },\n    {\n      near: [{ testnet: \"https://testnet.aurorascan.dev/tx/\" }, { mainnet: \"https://explorer.mainnet.aurora.dev/tx/\" }],\n    },\n    {\n      celo: [\n        { mainnet: \"https://alfajores-blockscout.celo-testnet.org/tx/\" },\n        { testnet: \"https://explorer.celo.org/tx/\" },\n      ],\n    },\n  ];\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          handleSetState({ showSocial: false });\n        }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useOutsideAlerter(wrapperRef);\n\n  useEffect(() => {\n    if (Number(nftChainId) !== 4160) return;\n    let nftDetails = singleAlgoNfts[nftId];\n    if (nftDetails) {\n      // window.localStorage.activeAlgoNft = JSON.stringify(nftDetails);\n      (async function getNftDetails() {\n        const tHistory = await readNftTransaction(nftId);\n        tHistory.find((t) => {\n          if (t.type === \"Minting\") t.price = nftDetails.price;\n        });\n        handleSetState({\n          nftDetails,\n          isLoading: false,\n          transactionHistory: tHistory,\n        });\n      })();\n    }\n  }, [singleAlgoNfts]);\n\n  useEffect(() => {\n    if (Number(nftChainId) === 4160) return;\n    (async function getNftDetails() {\n      try {\n        // Fetching for nft by Id comparing it to the chain it belongs to before displaying the Id\n\n        if (Number(nftChainId) === 80001 || Number(nftChainId) === 137) {\n          const [polygonData, trHistory] = await polygonUserData(nftId);\n          if (!polygonData) return history.goBack();\n          handleSetState({\n            nftDetails: polygonData,\n            isLoading: false,\n            transactionHistory: trHistory,\n          });\n        } else if (Number(nftChainId) === supportedChains[nftChainId].networkId) {\n          const [auroraData, trHistory] = await auroraUserData(nftId);\n          if (!auroraData) return history.goBack();\n          handleSetState({\n            nftDetails: auroraData,\n            isLoading: false,\n            transactionHistory: trHistory,\n          });\n        } else if (Number(nftChainId) === 44787 || Number(nftChainId) === 42220) {\n          const [celoData, trHistory] = await celoUserData(nftId);\n          if (!celoData) return history.goBack();\n          handleSetState({\n            nftDetails: celoData,\n            isLoading: false,\n            transactionHistory: trHistory,\n          });\n        }\n      } catch (error) {\n        console.log({ error });\n      }\n    })();\n    document.documentElement.scrollTop = 0;\n  }, []);\n\n  useEffect(() => {\n    const pair = supportedChains[nftDetails?.chain]?.coinGeckoLabel;\n    if (Number(nftChainId) !== 4160 && pair) {\n      axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${pair}&vs_currencies=usd`).then((res) => {\n        let value = Object.values(res.data)[0].usd;\n        handleSetState({\n          chainIcon: supportedChains[nftDetails.chain].icon,\n          algoPrice: value,\n          chainSymbol: supportedChains[nftDetails.chain].symbol,\n        });\n      });\n    }\n    if (Number(nftChainId) === 4160) {\n      axios.get(\"https://api.coinbase.com/v2/prices/ALGO-USD/spot\").then((res) => {\n        handleSetState({ algoPrice: res.data.data.amount });\n      });\n    }\n  }, [nftDetails]);\n\n  const onCopyText = () => {\n    handleSetState({ isCopied: true });\n    setTimeout(() => {\n      handleSetState({ isCopied: false });\n    }, 1000);\n  };\n\n  if (isLoading) {\n    return (\n      <div className={classes.menu}>\n        <div className={classes.left}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n\n        <div className={classes.right}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n\n        <div className={classes.fullLegnth}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={200} />\n        </div>\n      </div>\n    );\n  }\n\n  const description = {\n    icon: detailsIcon,\n    title: \"Description\",\n    content: `${nftDetails?.description}`,\n  };\n\n  const graph = {\n    icon: detailsIcon,\n    title: \"Price History\",\n    content: <Graph details={transactionHistory} />,\n  };\n\n  const attributeContent = () => (\n    <div className={classes.attributesContainer}>\n      {nftDetails?.properties?.map((attribute, idx) => {\n        return attribute?.trait_type && attribute?.value ? (\n          <div key={idx} className={classes.attribute}>\n            <span className={classes.title}>{attribute?.trait_type}</span>\n            <span className={classes.description}>{attribute?.value}</span>\n          </div>\n        ) : nftDetails.properties.length === 1 ? (\n          <span key={idx}> No Attributes Available</span>\n        ) : (\n          <></>\n        );\n      })}\n    </div>\n  );\n\n  const attributesItem = {\n    icon: descriptionIcon,\n    title: \"Attributes\",\n    content: attributeContent(),\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.section1}>\n        <div className={classes.v_subsection1}>\n          <img className={classes.nft} src={nftDetails.image_url} alt=\"\" />\n\n          <div className={classes.feature}>\n            <DropItem key={1} item={attributesItem} id={1} dropdown={dropdown} handleSetState={handleSetState} />\n          </div>\n        </div>\n        <div className={classes.v_subsection2}>\n          <div className={classes.feature}>\n            <div className={classes.mainDetails}>\n              <div className={classes.collectionHeader}>\n                <div className={classes.nftId}>{nftDetails.name}</div>\n              </div>\n\n              <div className={classes.icons}>\n                <svg\n                  onClick={() => {\n                    handleSetState({ showSocial: true });\n                  }}\n                  className={`${classes.icon}`}\n                  width=\"18\"\n                  height=\"20\"\n                  viewBox=\"0 0 18 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M15 14.0781C15.8125 14.0781 16.5 14.375 17.0625 14.9688C17.625 15.5312 17.9062 16.2031 17.9062 16.9844C17.9062 17.7969 17.6094 18.5 17.0156 19.0938C16.4531 19.6562 15.7812 19.9375 15 19.9375C14.2188 19.9375 13.5312 19.6562 12.9375 19.0938C12.375 18.5 12.0938 17.7969 12.0938 16.9844C12.0938 16.6719 12.1094 16.4531 12.1406 16.3281L5.0625 12.2031C4.46875 12.7344 3.78125 13 3 13C2.1875 13 1.48438 12.7031 0.890625 12.1094C0.296875 11.5156 0 10.8125 0 10C0 9.1875 0.296875 8.48438 0.890625 7.89062C1.48438 7.29688 2.1875 7 3 7C3.78125 7 4.46875 7.26562 5.0625 7.79688L12.0938 3.71875C12.0312 3.40625 12 3.17188 12 3.01562C12 2.20312 12.2969 1.5 12.8906 0.90625C13.4844 0.3125 14.1875 0.015625 15 0.015625C15.8125 0.015625 16.5156 0.3125 17.1094 0.90625C17.7031 1.5 18 2.20312 18 3.01562C18 3.82812 17.7031 4.53125 17.1094 5.125C16.5156 5.71875 15.8125 6.01562 15 6.01562C14.25 6.01562 13.5625 5.73438 12.9375 5.17188L5.90625 9.29688C5.96875 9.60938 6 9.84375 6 10C6 10.1562 5.96875 10.3906 5.90625 10.7031L13.0312 14.8281C13.5938 14.3281 14.25 14.0781 15 14.0781Z\"\n                    fill=\"#707A83\"\n                  />\n                </svg>\n              </div>\n            </div>\n            <div className={classes.priceSection}>\n              <span className={classes.title}>Owned by you</span>\n            </div>\n            <div className={classes.btns}>\n              <Link\n                to={\n                  nft.collection_name\n                    ? `${match.url}/${nftDetails.Id}`\n                    : nftDetails.chain\n                    ? `/marketplace/1of1/list/${nftDetails.chain}/${nftId}`\n                    : `/marketplace/1of1/list/${nftDetails.Id}`\n                }\n                className={classes.alignIcon}\n              >\n                <img src={supportedChains[nftDetails?.chain]?.icon} />\n                <button className={classes.list}>List</button>\n              </Link>\n            </div>\n          </div>\n          <div className={classes.feature}>\n            <DropItem key={3} item={description} id={3} dropdown={dropdown} handleSetState={handleSetState} />\n          </div>\n        </div>\n      </div>\n\n      {/* TRANSACTION HISTORY */}\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>Transaction History</h3>\n        </div>\n\n        <div className={classes.history}>\n          <Search data={transactionHistory} chain={nftDetails?.chain ? nftDetails.chain : \"\"} />\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>Price History</h3>\n        </div>\n        <div className={classes.tableContainer}>{graph.content}</div>\n      </div>\n\n      <div className={classes.section}>\n        <div className={classes.heading}>\n          <h3>Meta Data</h3>\n        </div>\n        <div className={classes.code}>\n          <CopyBlock\n            language=\"json\"\n            text={JSON.stringify(nftDetails.properties, null, 2)}\n            showLineNumbers={false}\n            theme={dracula}\n            wrapLines\n            codeBlock\n          />\n        </div>\n      </div>\n\n      {showSocial ? (\n        <div>\n          <div ref={wrapperRef} className={classes.share}>\n            <div className={classes.copy}>\n              <input type=\"text\" value={window.location.href} readOnly className={classes.textArea} />\n              <CopyToClipboard text={window.location.href} onCopy={onCopyText}>\n                <div className={classes.copy_area}>\n                  {!isCopied ? (\n                    <img className={classes.shareicon} src={copyIcon} alt=\"\" />\n                  ) : (\n                    <img className={classes.shareicon} src={copiedIcon} alt=\"\" />\n                  )}\n                </div>\n              </CopyToClipboard>\n            </div>\n            <div className={classes.shareContent}>\n              <FacebookShareButton url={window.location.href}>\n                <img className={classes.shareIcon} src={facebookIcon} alt=\"facebook\" />\n              </FacebookShareButton>\n              <TwitterShareButton url={window.location.href}>\n                <img className={classes.shareIcon} src={twitterIcon} alt=\"twitter\" />\n              </TwitterShareButton>\n              <WhatsappShareButton url={window.location.href}>\n                <img className={classes.shareIcon} src={whatsappIcon} alt=\"twitter\" />\n              </WhatsappShareButton>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default ListSingleNFT;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/userDashboard/listNFT/listed.jsx",["1155","1156","1157","1158","1159","1160","1161","1162"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useRouteMatch, Link, useHistory } from \"react-router-dom\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { getSingleNftDetails, getUserBoughtNftCollection, getUserGraphNft } from \"../../../utils\";\nimport classes from \"./listed.module.css\";\nimport { fetchUserBoughtNfts } from \"../../../utils/firebase\";\nimport { ethers } from \"ethers\";\nimport telegram from \"../../../assets/blue-telegram.svg\";\nimport twitterIcon from \"../../../assets/blue-twitter.svg\";\nimport facebookIcon from \"../../../assets/blue-facebook.svg\";\nimport linktree from \"../../../assets/linked-tree.svg\";\nimport {\n  celoUserData,\n  getCeloNFTToList,\n  getPolygonNFTToList,\n  polygonUserData,\n} from \"../../../renderless/fetch-data/fetchUserGraphData\";\n\nconst Listed = () => {\n  const { account, mainnet, dispatch } = useContext(GenContext);\n\n  const {\n    params: { nftId, url },\n  } = useRouteMatch();\n  const { singleNfts, chainId } = useContext(GenContext);\n  const history = useHistory();\n  const [state, setState] = useState({\n    isLoading: true,\n  });\n  const { nftDetails, isLoading } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  useEffect(() => {\n    (async function getUserCollection() {\n      if (chainId === 80001 || chainId === 137) {\n        const [nft] = await polygonUserData(nftId);\n        if (!nft) history.push(\"/\");\n        else {\n          handleSetState({\n            nftDetails: nft,\n            isLoading: false,\n          });\n        }\n      } else if (chainId === 44787 || chainId === 42220) {\n        const [nft] = await celoUserData(nftId);\n        if (!nft) history.push(\"/\");\n        handleSetState({\n          nftDetails: nft,\n          isLoading: false,\n        });\n      } else {\n        const userNftCollections = await fetchUserBoughtNfts(account);\n        const result = await getUserBoughtNftCollection(mainnet, userNftCollections);\n\n        const nft = result.filter((NFT) => String(NFT.Id) === nftId)[0];\n        if (!nft) history.push(\"/\");\n        handleSetState({ nftDetails: nft, isLoading: false });\n      }\n    })();\n    document.documentElement.scrollTop = 0;\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className={classes.menu}>\n        <div className={classes.left}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n\n        <div className={classes.right}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={40} />\n          <br />\n          <Skeleton count={1} height={40} />\n        </div>\n\n        <div className={classes.fullLegnth}>\n          <Skeleton count={1} height={200} />\n          <br />\n          <Skeleton count={1} height={200} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.container}>\n      <span>Your item is now listed for sale</span>\n      <img className={classes.nft} src={nftDetails?.image_url} alt=\"\" />\n\n      <div className={classes.nftId}>\n        Share\n        <div className={classes.detailContent}>\n          <img src={twitterIcon} alt=\"\" />\n          <img src={facebookIcon} alt=\"\" />\n          <img src={telegram} alt=\"\" />\n          <img src={linktree} alt=\"\" />\n        </div>\n      </div>\n      <Link\n        to={\n          nftDetails.collection_name\n            ? `${url}/${nftDetails.Id}`\n            : nftDetails.chain\n            ? `/marketplace`\n            : `/marketplace/1of1/${nftDetails.Id}`\n        }\n        className={classes.view}\n      >\n        <button type=\"button\" className={classes.viewtext}>\n          Go to Marketplace\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Listed;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Session-Modal/SessionModal.jsx",["1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187"],"import classes from \"./SessionModal.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { useContext, useState } from \"react\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport {\n  addRule,\n  setCollectionName,\n  setCurrentPlan,\n  setCurrentSession,\n  setLayers,\n  setNftLayers,\n  setToggleSessionModal,\n  setUpgradePlan,\n} from \"../../../gen-state/gen.actions\";\nimport { fetchUserSession } from \"../../../renderless/store-data/StoreData.script\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SessionModal = () => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const { dispatch, currentUser, toggleSessionModal, sessions } = useContext(GenContext);\n\n  const handleLoad = async (sessionId, currentPlan) => {\n    console.log(\"fetch starts\");\n    setLoading(true);\n    const res = await fetchUserSession({ currentUser, sessionId });\n    if (res) {\n      dispatch(setCurrentPlan(currentPlan));\n      dispatch(setLayers(res.layers));\n      dispatch(setNftLayers(res.nftLayers));\n      dispatch(setCollectionName(res.collectionName));\n      dispatch(setCurrentSession(sessionId));\n      dispatch(addRule(res.rules));\n      dispatch(setToggleSessionModal(false));\n    }\n    setLoading(false);\n    console.log(\"fetch ends\");\n  };\n\n  const handleCreate = () => {\n    dispatch(setUpgradePlan(false));\n    history.push(\"/create/session/pricing\");\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(setToggleSessionModal(false));\n  };\n\n  return (\n    <div className={`${classes.container} ${toggleSessionModal && classes.active}`}>\n      <div className={classes.wrapper}>\n        <div className={` ${classes.loader} ${loading && classes.active}`}>\n          <div className={classes.dots}>\n            <div>Loading</div>\n            <div className={classes.dotOne} />\n            <div className={classes.dotTwo} />\n            <div className={classes.dotThree} />\n          </div>\n        </div>\n        <CloseIcon onClick={handleClose} className={classes.closeBtn} />\n        <div className={classes.content}>\n          <h1>Sessions</h1>\n          <div className={classes.sessionContainer}>\n            {sessions &&\n              sessions.map(({ session }, idx) => (\n                <div key={idx} className={classes.session}>\n                  <div className={classes.detail}>\n                    <div className={classes.name}>{session.collectionName}</div>\n                    {/* <div className={classes.edited}>Last edited</div> */}\n                  </div>\n                  <div className={classes.action}>\n                    <div onClick={() => handleLoad(session.sessionId, session.currentPlan)} className={classes.loadBtn}>\n                      Load\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n          <button onClick={handleCreate}>New Collection</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SessionModal;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/minter/minter.jsx",["1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211"],"import React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  setClipboard,\n  setConnectFromMint,\n  setLoader,\n  setOverlay,\n  setNotification,\n  setMinter,\n} from \"../../../gen-state/gen.actions\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport Attribute from \"../Attribute/Attribute\";\nimport { handleMint, handleSingleMint } from \"./minter-script\";\nimport classes from \"./minter.module.css\";\nimport CollectionPreview from \"../collection-preview/collectionPreview\";\nimport rightArrow from \"../../../assets/icon-arrow-right.svg\";\nimport ProfileImgOverlay from \"../ProfileImgOverlay/ProfileImgOverlay\";\nimport Popup from \"../popup/popup.component\";\nimport { ReactComponent as PlusIcon } from \"../../../assets/icon-plus.svg\";\nimport GenadropToolTip from \"../../Genadrop-Tooltip/GenadropTooltip\";\nimport supportedChains from \"../../../utils/supportedChains\";\nimport { ReactComponent as DropdownIcon } from \"../../../assets/icon-dropdown2.svg\";\nimport { initConnectWallet } from \"../../wallet/wallet-script\";\n\nconst Minter = () => {\n  const history = useHistory();\n  const { dispatch, connector, account, chainId, mainnet, minter } = useContext(GenContext);\n\n  if (!minter) {\n    history.push(\"/mint\");\n    return null;\n  }\n\n  const { file, fileName: fName, metadata, zip } = minter;\n  const [state, setState] = useState({\n    attributes: { [Date.now()]: { trait_type: \"File Type\", value: file[0].type } },\n    fileName: fName,\n    description: metadata?.length === 1 ? metadata[0].description : \"\",\n    chain: null,\n    preview: false,\n    collectionProfile: \"\",\n    toggleGuide: false,\n    toggleDropdown: false,\n    previewSelectMode: false,\n    profileSelected: false,\n    popupProps: {\n      url: null,\n      isError: null,\n      popup: false,\n    },\n  });\n  const {\n    attributes,\n    fileName,\n    description,\n    chain,\n    preview,\n    collectionProfile,\n    toggleGuide,\n    toggleDropdown,\n    previewSelectMode,\n    profileSelected,\n    popupProps,\n  } = state;\n\n  const mintProps = {\n    dispatch,\n    setLoader,\n    setNotification,\n    setClipboard,\n    description,\n    account,\n    chainId,\n    connector,\n    file: zip,\n    fileName,\n    mainnet,\n    chain: chain?.chain,\n  };\n\n  const singleMintProps = {\n    dispatch,\n    setLoader,\n    setNotification,\n    setClipboard,\n    account,\n    chainId,\n    connector,\n    file: file[0],\n    metadata: {\n      name: fileName,\n      description,\n      attributes: Object.values(attributes),\n    },\n    fileName,\n    mainnet,\n    chain: chain?.chain,\n  };\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const handleAddAttribute = () => {\n    handleSetState({\n      attributes: {\n        ...attributes,\n        [Date.now()]: { trait_type: \"\", value: \"\" },\n      },\n    });\n  };\n\n  const handleRemoveAttribute = (id) => {\n    if (Object.keys(attributes).length === 1) return;\n\n    const newAttributes = {};\n    for (const key in attributes) {\n      if (key !== id) {\n        newAttributes[key] = attributes[key];\n      }\n    }\n    handleSetState({ attributes: newAttributes });\n  };\n\n  const handleChangeAttribute = (arg) => {\n    const {\n      event: {\n        target: { name, value },\n      },\n      id,\n    } = arg;\n    handleSetState({\n      attributes: { ...attributes, [id]: { ...attributes[id], [name]: value } },\n    });\n  };\n\n  const handleCancel = () => {\n    dispatch(setMinter(null));\n    history.push(\"/mint\");\n  };\n\n  const handleSetFileState = () => {\n    console.log(\"handleSetFileState\");\n  };\n\n  const changeFile = () => {\n    history.push(`/mint/${minter.mintType}`);\n  };\n\n  const setMint = () => {\n    if (!(window.localStorage.walletconnect || chainId)) return initConnectWallet({ dispatch });\n\n    if (!chainId) {\n      return dispatch(\n        setNotification({\n          message: \"connect your wallet and try again\",\n          type: \"warning\",\n        })\n      );\n    }\n    if (file.length > 1) {\n      if (!mintProps.description) {\n        return dispatch(\n          setNotification({\n            message: \"fill in the required fields\",\n            type: \"warning\",\n          })\n        );\n      }\n      dispatch(setOverlay(true));\n      handleMint(mintProps).then((url) => {\n        dispatch(setOverlay(false));\n        if (typeof url === \"object\") {\n          handleSetState({\n            popupProps: {\n              url: url.message,\n              isError: true,\n              popup: true,\n            },\n          });\n        } else {\n          handleSetState({\n            popupProps: {\n              url,\n              isError: false,\n              popup: true,\n            },\n          });\n        }\n      });\n    } else {\n      if (!singleMintProps.fileName || !description) {\n        return dispatch(\n          setNotification({\n            message: \"fill out the missing fields\",\n            type: \"warning\",\n          })\n        );\n      }\n      dispatch(setOverlay(true));\n      handleSingleMint(singleMintProps).then((url) => {\n        dispatch(setOverlay(false));\n        if (typeof url === \"object\") {\n          handleSetState({\n            popupProps: {\n              url: url.message,\n              isError: true,\n              popup: true,\n            },\n          });\n        } else {\n          handleSetState({\n            popupProps: {\n              url,\n              isError: false,\n              popup: true,\n            },\n          });\n        }\n      });\n    }\n  };\n\n  // set MINT NFT\n\n  const setMintNFTSTORAGE = () => {\n    if (!(window.localStorage.walletconnect || chainId)) return initConnectWallet({ dispatch });\n\n    //\n\n    console.log(\"WE are in setMintNFTSTORAGE\");\n\n    if (!chainId) {\n      return dispatch(\n        setNotification({\n          message: \"connect your wallet and try again\",\n          type: \"warning\",\n        })\n      );\n    }\n\n    //\n    console.log(\"file.length \" + file.length);\n    \n\n    if (file.length > 1) {\n      if (!mintProps.description) {\n        return dispatch(\n          setNotification({\n            message: \"fill in the required fields\",\n            type: \"warning\",\n          })\n        );\n      }\n   \n      dispatch(setOverlay(true));\n      handleMint(mintProps).then((url) => {\n        dispatch(setOverlay(false));\n        if (typeof url === \"object\") {\n          handleSetState({\n            popupProps: {\n              url: url.message,\n              isError: true,\n              popup: true,\n            },\n          });\n        } else {\n          handleSetState({\n            popupProps: {\n              url,\n              isError: false,\n              popup: true,\n            },\n          });\n        }\n      });\n    } else {\n      \n      \n\n      if (!singleMintProps.fileName || !description) {\n        return dispatch(\n          setNotification({\n            message: \"fill out the missing fields\",\n            type: \"warning\",\n          })\n        );\n      }\n      dispatch(setOverlay(true));\n\n      console.log(\"typeof url \" + typeof url);\n      console.log(\"singleMintProps \" + singleMintProps);\n\n      handleSingleMint(singleMintProps).then((url) => {\n        dispatch(setOverlay(false));\n        if (typeof url === \"object\") {\n          handleSetState({\n            popupProps: {\n              url: url.message,\n              isError: true,\n              popup: true,\n            },\n          });\n        } else {\n\n          handleSetState({\n            popupProps: {\n              url,\n              isError: false,\n              popup: true,\n            },\n          });\n        }\n      });\n    }\n\n\n  };\n\n  const handleConnectFromMint = (props) => {\n    handleSetState({ toggleDropdown: false });\n    dispatch(\n      setConnectFromMint({\n        chainId: props.networkId,\n        isComingSoon: props.comingSoon,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (chainId) {\n      handleSetState({ chain: supportedChains[chainId] });\n    }\n  }, [chainId]);\n\n  return (\n    <div className={classes.container}>\n      <Popup handleSetState={handleSetState} popupProps={popupProps} />\n      {preview ? (\n        <CollectionPreview\n          previewSelectMode={previewSelectMode}\n          file={file}\n          metadata={metadata}\n          handleMintSetState={handleSetState}\n          collectionProfile={collectionProfile}\n          handleSetFileState={handleSetFileState}\n          zip={zip}\n        />\n      ) : (\n        <div className={classes.wrapper}>\n          <div>\n            <section className={classes.assetContainer}>\n              <div className={`${classes.imageContainers} ${file.length > 1 && classes._}`}>\n                {file.length > 1 ? (\n                  file\n                    .filter((_, idx) => idx < 3)\n                    .map((f, idx) => (\n                      <div\n                        key={idx}\n                        style={{ backgroundImage: `url(${URL.createObjectURL(f)})` }}\n                        className={classes.imageContainer}\n                      />\n                    ))\n                ) : file[0].type === \"video/mp4\" ? (\n                  <video src={URL.createObjectURL(file[0])} alt=\"\" className={classes.singleImage} autoPlay loop />\n                ) : (\n                  <img src={URL.createObjectURL(file[0])} alt=\"\" className={classes.singleImage} />\n                )}\n              </div>\n\n              <div className={classes.assetInfo}>\n                <div className={classes.innerAssetInfo}>\n                  <div className={classes.assetInfoTitle}>\n                    <span>{fName}</span>\n                  </div>\n                  <div>\n                    <span>Number of assets:</span> <p>{file.length}</p>\n                  </div>\n                  {chainId === 4160 && (\n                    <div className={classes.priceTooltip}>\n                      <span>Mint Price:</span> <p className={classes.assetInfoMintPrice}>{file.length * 0.1} ALGO</p>\n                      <GenadropToolTip content=\"Mint price is 0.01 per NFT\" fill=\"#0d99ff\" />\n                    </div>\n                  )}\n                  {file.length > 1 ? (\n                    <div onClick={() => handleSetState({ preview: true })} className={classes.showPreview}>\n                      <span>view all assets</span>\n                      <img src={rightArrow} alt=\"\" />\n                    </div>\n                  ) : null}\n                </div>\n                <button onClick={changeFile} type=\"button\">\n                  Change asset\n                </button>\n              </div>\n            </section>\n            <div className={classes.mintForm}>\n              <div className={classes.heading}>{file.length > 1 ? \"Mint a collection\" : \"Mint 1 of 1\"}</div>\n\n              <section className={classes.details}>\n                <div className={classes.category}>Asset Details</div>\n                <div className={classes.inputWrapper}>\n                  <label>\n                    {\" \"}\n                    Title <span className={classes.required}>*</span>\n                  </label>\n                  <input\n                    style={metadata ? { pointerEvents: \"none\" } : {}}\n                    type=\"text\"\n                    value={fileName}\n                    onChange={(event) => handleSetState({ fileName: event.target.value })}\n                  />\n                </div>\n\n                <div className={classes.inputWrapper}>\n                  <label>\n                    Description <span className={classes.required}>*</span>{\" \"}\n                    <GenadropToolTip\n                      content=\"This description will be visible on your collection page\"\n                      fill=\"#0d99ff\"\n                    />\n                  </label>\n                  <textarea\n                    style={metadata?.length === 1 ? { pointerEvents: \"none\" } : {}}\n                    rows=\"5\"\n                    value={description}\n                    onChange={(event) => handleSetState({ description: event.target.value })}\n                  />\n                </div>\n\n                <div className={classes.inputWrapper}>\n                  <label>Attributes</label>\n                  {!metadata ? (\n                    <>\n                      <div className={classes.attributes}>\n                        {Object.keys(attributes).map((key, index) => (\n                          <Attribute\n                            key={index}\n                            attribute={attributes[key]}\n                            id={key}\n                            index={index}\n                            removeAttribute={handleRemoveAttribute}\n                            changeAttribute={handleChangeAttribute}\n                          />\n                        ))}\n                      </div>\n                      <button type=\"button\" onClick={handleAddAttribute}>\n                        + Add Attribute\n                      </button>\n                    </>\n                  ) : metadata.length === 1 ? (\n                    <>\n                      {metadata[0].attributes.map((attr, idx) => (\n                        <div className={classes.attribute} key={idx}>\n                          <div>{attr.trait_type}</div>\n                          <div>{attr.value}</div>\n                        </div>\n                      ))}\n                    </>\n                  ) : (\n                    <div className={classes.metadata}>\n                      <div>Number of assets: {metadata.length}</div>\n                      <div className={classes.trait_type}>\n                        Trait_types:\n                        {metadata[0]?.attributes.map(({ trait_type }, idx) => (\n                          <span key={idx}>{trait_type} </span>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                {file.length > 1 && (\n                  <>\n                    <div className={`${classes.inputWrapper} ${classes.dropInputWrapper}`}>\n                      <label>\n                        Collection photo\n                        <GenadropToolTip content=\"This image will be used as collection logo\" fill=\"#0d99ff\" />\n                      </label>\n                    </div>\n                    <div className={`${classes.dropWrapper} ${collectionProfile && classes.dropWrapperSeleted}`}>\n                      <div onClick={() => handleSetState({ toggleGuide: true })}>\n                        {profileSelected ? (\n                          <img src={URL.createObjectURL(file[0])} alt=\"\" />\n                        ) : (\n                          <div className={classes.selectImg}>\n                            <PlusIcon />\n                            <p>Add photo</p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </>\n                )}\n              </section>\n\n              <section className={classes.mintOptions}>\n                <div className={classes.category}>Set Mint Options</div>\n                <div className={classes.inputWrapper}>\n                  <label>Blockchain</label>\n                  <div\n                    onClick={() => handleSetState({ toggleDropdown: !toggleDropdown })}\n                    className={`${classes.chain} ${classes.active}`}\n                  >\n                    {chainId ? (\n                      <div className={classes.chainLabel}>\n                        <img src={supportedChains[chainId].icon} alt=\"\" />\n                        {chain?.label}\n                      </div>\n                    ) : (\n                      <span>Select Chain</span>\n                    )}\n                    <DropdownIcon className={classes.dropdownIcon} />\n                  </div>\n                  <div className={`${classes.chainDropdown} ${toggleDropdown && classes.active}`}>\n                    {Object.values(supportedChains)\n                      .filter((chainE) => mainnet === chainE.isMainnet)\n                      .map((chainE, idx) => (\n                        <div\n                          onClick={() => (!chainE.comingSoon ? handleConnectFromMint(chainE) : {})}\n                          className={`${classes.chain} ${chainE.comingSoon && classes.disable}`}\n                          key={idx}\n                          value={chainE.label}\n                        >\n                          <img src={chainE.icon} alt=\"\" />\n                          {chainE.label}\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </section>\n\n              <section className={classes.mintButtonWrapper}>\n                <button type=\"button\" onClick={setMint} className={classes.mintBtn}>\n                  Mint\n                </button>\n                <button type=\"button\" onClick={setMintNFTSTORAGE} className={classes.mintBtn}>\n                  Mint NFT.STORAGE\n                </button>\n                <button type=\"button\" onClick={handleCancel} className={classes.cancelBtn}>\n                  Cancel\n                </button>\n              </section>\n            </div>\n          </div>\n        </div>\n      )}\n      <ProfileImgOverlay\n        metadata={metadata}\n        zip={zip}\n        handleSetState={handleSetState}\n        handleSetFileState={handleSetFileState}\n        file={file}\n        toggleGuide={toggleGuide}\n        collectionProfile={collectionProfile}\n      />\n    </div>\n  );\n};\n\nexport default Minter;\n\n{\n  /* <button\nonClick={() => {\n  console.log('clicked');\n  dispatch(\n    setConnectFromMint({\n      chainId: 1313161555,\n      isComingSoon: false,\n    })\n  );\n}}\n>\ntest\n</button> */\n}\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Upgrade-Modal/UpgradeModal.jsx",["1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234"],"import classes from \"./UpgradeModal.module.css\";\nimport { useContext } from \"react\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { setToggleUpgradeModal, setUpgradePlan } from \"../../../gen-state/gen.actions\";\nimport { ReactComponent as FailureIcon } from \"../../../assets/icon-failure-circle.svg\";\nimport { ReactComponent as SuccessIcon } from \"../../../assets/icon-success-circle.svg\";\nimport { ReactComponent as UpgradeIcon } from \"../../../assets/icon-upgrade.svg\";\nimport { plans } from \"../../../pages/Pricing/Pricing.script\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UpgradeModal = () => {\n  const history = useHistory();\n  const { toggleUpgradeModal, dispatch, currentPlan } = useContext(GenContext);\n  const planState = [<FailureIcon />, <SuccessIcon />];\n\n  const mapPlanToState = (plan, state) => {\n    let states = {\n      free: 0,\n      noobs: 1,\n      geeks: 2,\n      ogs: 3,\n    };\n\n    let currentState = states[plan];\n    if (currentState < states[state]) return true;\n    return false;\n  };\n\n  const handleClose = () => {\n    dispatch(setToggleUpgradeModal(false));\n  };\n\n  const handleUpgrade = () => {\n    dispatch(setUpgradePlan(true));\n    handleClose();\n    history.push(\"/create/session/pricing\");\n  };\n\n  return (\n    <div className={`${classes.container} ${toggleUpgradeModal && classes.active}`}>\n      <div className={classes.wrapper}>\n        <CloseIcon onClick={handleClose} className={classes.closeBtn} />\n        <div className={classes.content}>\n          {currentPlan === \"free\" ? (\n            <div className={classes.heading}>\n              Ooops... your<span className={classes.accent}> {currentPlan} </span>\n              plan doesn’t <br />\n              support auto-saving and collection download\n            </div>\n          ) : (\n            <div className={classes.heading}>\n              Ooops... you have exeeded your\n              <br />\n              generate limit for this plan. Upgrade to generate more{\" \"}\n            </div>\n          )}\n          <UpgradeIcon className={classes.upgradeIcon} />\n          <div className={classes.features}>FEATURES AVAILABLE IN</div>\n          <div className={classes.plans}>\n            {Object.keys(plans).map((plan, idx) => (\n              <div key={idx} className={classes.plan}>\n                {planState[`${mapPlanToState(currentPlan, plan) ? 1 : 0}`]}\n                <div>{plan}</div>\n              </div>\n            ))}\n          </div>\n          <button onClick={handleUpgrade}>Upgrade</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UpgradeModal;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/collection-single/collection-single.jsx",["1235","1236","1237"],"import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { useParams, useHistory, useRouteMatch, useLocation, Link } from \"react-router-dom\";\nimport classes from \"./collection-single.module.css\";\nimport { ReactComponent as CameraIcon } from \"../../../assets/icon-camera.svg\";\nimport collectionIcon from \"../../../assets/icon-collection-light.svg\";\nimport _1of1Icon from \"../../../assets/icon-1of1-light.svg\";\nimport { ReactComponent as BackIcon } from \"../../../assets/icon-arrow-left.svg\";\n// import UploadOverlay from \"../upload-overlay/upload-overlay\";\nimport { handleZipFile } from \"./collection-single-script\";\nimport Minter from \"../minter/minter\";\nimport line from \"../../../assets/icon-line.svg\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { setMinter, setZip } from \"../../../gen-state/gen.actions\";\n\nconst CollectionToSingleMinter = () => {\n  const params = useParams();\n  const history = useHistory();\n  const { url } = useRouteMatch();\n  const location = useLocation();\n  const fileRef = useRef(null);\n  const dragRef = useRef(null);\n\n  const { zip: zipObg, dispatch } = useContext(GenContext);\n  const [state, setState] = useState({\n    mintType: \"\",\n    cameraSwitch: false,\n    loading1: false,\n    loading2: false,\n    acceptedFileType: \"\",\n    file: null,\n    fileName: \"\",\n    metadata: null,\n    zip: null,\n  });\n\n  const { mintType, loading1, loading2, acceptedFileType, file, fileName, metadata, zip } = state;\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  const handleCollectionClick = () => {\n    history.push(url.replace(\"1of1\", \"collection\"));\n  };\n\n  const handle1of1Click = () => {\n    history.push(url.replace(\"collection\", \"1of1\"));\n  };\n\n  const handleImageLoading1 = () => {\n    handleSetState({ loading1: true });\n  };\n\n  const handleImageLoading2 = () => {\n    handleSetState({ loading2: true });\n  };\n\n  const handleFileChange = (event) => {\n    handleSetState({ fileName: \"\", file: null, metadata: null, zip: null });\n    const uploadedFile = event.target.files[0];\n    if (!uploadedFile) return;\n    const name = uploadedFile.name.replace(/\\.+\\s*\\./, \".\").split(\".\");\n    const uploadedFileName = name.slice(0, name.length - 1).join(\".\");\n    const fileType = name.slice(name.length - 1).join();\n    if (!acceptedFileType.includes(fileType.toLowerCase())) return;\n\n    if (fileType === \"zip\") {\n      handleSetState({ zip: uploadedFile, fileName: uploadedFileName });\n      handleZipFile({ uploadedFile, handleSetState });\n    } else {\n      handleSetState({ file: [uploadedFile], fileName: uploadedFileName });\n    }\n  };\n\n  // read zip or camera picture file\n  const handleZipUpload = () => {\n    if (location.pathname === \"/mint/collection\" && zipObg.file.type === \"application/zip\") {\n      handleSetState({ fileName: zipObg.name, zip: zipObg.file, file: null, metadata: null });\n      handleZipFile({ uploadedFile: zipObg.file, handleSetState });\n    } else {\n      handleSetState({ fileName: zipObg.name, file: [zipObg.file], metadata: null, zip: null });\n    }\n    dispatch(setZip({}));\n  };\n\n  useEffect(() => {\n    dragRef.current.ondragover = (e) => {\n      e.preventDefault();\n      document.querySelector(\".drop-area\").style.border = \"2px dashed green\";\n    };\n    dragRef.current.ondragleave = (e) => {\n      e.preventDefault();\n      document.querySelector(\".drop-area\").style.border = \"2px solid var(--outline)\";\n    };\n    dragRef.current.ondrop = (e) => {\n      e.preventDefault();\n      document.querySelector(\".drop-area\").style.border = \"2px solid green\";\n      handleFileChange({ target: e.dataTransfer });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (params.mintId === \"collection\") {\n      handleSetState({ acceptedFileType: \".zip\" });\n    } else {\n      handleSetState({ acceptedFileType: \".jpg, .jpeg, .png, .webp, .gif\" });\n    }\n    handleSetState({ mintType: params.mintId });\n  }, [params.mintId]);\n\n  useEffect(() => {\n    if (Object.keys(zipObg).length !== 0) {\n      handleZipUpload();\n    }\n  }, [zipObg]);\n\n  useEffect(() => {\n    if (!file) return;\n    console.log(\"changed\", { file });\n    dispatch(setMinter({ file, fileName, metadata, zip, mintType }));\n    history.push(`${url}/minter`);\n  }, [file]);\n\n  return (\n    <div ref={dragRef} className={classes.container}>\n      {/* <div ref={dropRef} style={{display: 'none'}} className=\"drop-area\"><UploadOverlay /></div>  */}\n\n      <>\n        <Link to=\"/mint\" className={classes.goBack}>\n          <BackIcon className={classes.backIcon} />\n          <span>Back to Mint</span>\n        </Link>\n        <header className={classes.headingWrapper}>\n          {/* <h1 className={classes.heading}>Mint Your NFTs</h1> */}\n          <p className={classes.description}>\n            Upload a{\" \"}\n            <span>\n              {params.mintId === \"1of1\" ? \"image\" : \"collection\"}\n              <img src={line} alt=\"\" />\n            </span>{\" \"}\n            to create NFTs on any of our <br />\n            supported blockchains super fast!\n          </p>\n        </header>\n\n        <div className={classes.mintSwitch}>\n          <button\n            type=\"button\"\n            className={`${params.mintId === \"collection\" && classes.active}`}\n            onClick={handleCollectionClick}\n          >\n            collection\n          </button>\n          <button type=\"button\" className={`${params.mintId === \"1of1\" && classes.active}`} onClick={handle1of1Click}>\n            1 of 1\n          </button>\n        </div>\n\n        {mintType === \"collection\" ? (\n          <div className={`${classes.card} ${classes[params.mintId]} drop-area`}>\n            {!loading1 ? <div className={classes.imagePlaceholder} /> : null}\n            <img\n              style={!loading1 ? { display: \"none\" } : {}}\n              src={collectionIcon}\n              alt=\"\"\n              onLoad={handleImageLoading1}\n            />\n            <h3 className={classes.title}> Mint a collection</h3>\n            <p className={classes.action}>Drag and Drop your zip file created using Genadrop Create app</p>\n            <p className={classes.supportedFiles}>\n              We only support .Zip files for collection mints and deploy to Celo, Algorand, Aurora, and Polygon{\" \"}\n            </p>\n            <div>or</div>\n            <button type=\"button\" onClick={() => fileRef.current.click()} className={classes.btn}>\n              Browse files\n            </button>\n          </div>\n        ) : mintType === \"1of1\" ? (\n          <div className={`${classes.card} ${classes[`_${params.mintId}`]} drop-area`}>\n            {!loading2 ? <div className={classes.imagePlaceholder} /> : null}\n            <img style={!loading2 ? { display: \"none\" } : {}} src={_1of1Icon} alt=\"\" onLoad={handleImageLoading2} />\n            <h3 className={classes.title}> Mint 1 of 1 </h3>\n            <Link className={classes.takePic} to=\"/mint/camera\">\n              <div>\n                <CameraIcon />\n              </div>\n              <p>Open Camera</p>\n            </Link>\n            <div className={classes.explanatoryText}>\n              <div>Take photo / video & mint straight away</div>\n              <p>Record video and turn it into a GIF</p>\n            </div>\n            <div>or</div>\n            <button type=\"button\" onClick={() => fileRef.current.click()} className={classes.btn}>\n              Browse files\n            </button>\n            <div className={classes.explanatoryText}>\n              <div>Drag and Drop your image file here</div>\n              <p>We support JPG, PNG, webp files and deploy to Celo, Algorand, Near, and Polygon </p>\n              <p>Max file size: 20mb </p>\n            </div>\n          </div>\n        ) : (\n          <div className={classes.cardPlaceholder} />\n        )}\n\n        <input\n          style={{ display: \"none\" }}\n          onChange={handleFileChange}\n          ref={fileRef}\n          type=\"file\"\n          accept={acceptedFileType}\n        />\n      </>\n    </div>\n  );\n};\n\nexport default CollectionToSingleMinter;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/fetch-data/fetchData.component.jsx",["1238","1239","1240","1241"],"import { useContext, useEffect } from \"react\";\nimport { fetchAlgoCollections, fetchAlgoSingle } from \"../../utils/firebase\";\nimport {\n  setCollections,\n  setSingleNfts,\n  setAlgoCollections,\n  setAlgoSingleNfts,\n  setAuroraCollections,\n  setPolygonCollections,\n  setAuroraSingleNfts,\n  setPolygonSingleNfts,\n  setNotification,\n  setCeloCollections,\n  setCeloSingleNft,\n  setSearchContainer,\n} from \"../../gen-state/gen.actions\";\nimport {\n  getGraphCollections,\n  getNftCollections,\n  getSingleNfts,\n  getSingleGraphNfts,\n  getCeloGraphCollections,\n} from \"../../utils\";\nimport {\n  GET_GRAPH_COLLECTIONS,\n  GET_ALL_POLYGON_COLLECTIONS,\n  GET_AURORA_SINGLE_NFTS,\n  GET_POLYGON_SINGLE_NFTS,\n  GET_CELO_SINGLE_NFT,\n  GET_CELO_GRAPH_COLLECITONS,\n} from \"../../graphql/querries/getCollections\";\nimport { celoClient, graphQLClient, graphQLClientPolygon } from \"../../utils/graphqlClient\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  parseAlgoCollection,\n  parseAlgoSingle,\n  parseAuroraCollection,\n  parseAuroraSingle,\n  parseCeloCollection,\n  parseCeloSingle,\n  parsePolygonCollection,\n  parsePolygonSingle,\n} from \"./fetchData-script\";\nimport { ethers } from \"ethers\";\n\nconst FetchData = () => {\n  const { dispatch, mainnet } = useContext(GenContext);\n\n  useEffect(() => {\n    // Get ALGO Collection\n    (async function getALgoCollections() {\n      const collections = await fetchAlgoCollections(mainnet);\n      dispatch(setCollections(collections));\n      if (collections?.length) {\n        const result = await getNftCollections({ collections, mainnet, dispatch });\n        dispatch(\n          setSearchContainer({\n            \"Algorand collection\": parseAlgoCollection(result),\n          })\n        );\n      } else {\n        dispatch(setAlgoCollections({}));\n      }\n    })();\n\n    // Get ALGO Signle NFTs\n    (async function getAlgoSingle() {\n      const singleNfts = await fetchAlgoSingle(mainnet);\n      dispatch(setSingleNfts(singleNfts));\n      if (singleNfts?.length) {\n        const result = await getSingleNfts({ mainnet, singleNfts, dispatch });\n        dispatch(\n          setSearchContainer({\n            \"Algorand 1of1\": parseAlgoSingle(result),\n          })\n        );\n      } else {\n        dispatch(setAlgoSingleNfts({}));\n      }\n    })();\n\n    // get Aurora Collections\n    (async function getDataFromEndpointA() {\n      const { data, error } = await graphQLClient\n        .query(\n          GET_GRAPH_COLLECTIONS,\n          {},\n          {\n            clientName: \"aurora\",\n          }\n        )\n        .toPromise();\n      if (error) {\n        return dispatch(\n          setNotification({\n            message: error.message,\n            type: \"warning\",\n          })\n        );\n      }\n      const result = await getGraphCollections(data?.collections);\n      if (result?.length) {\n        dispatch(setAuroraCollections(result));\n        dispatch(\n          setSearchContainer({\n            \"Aurora collection\": parseAuroraCollection(result),\n          })\n        );\n      } else {\n        dispatch(setAuroraCollections(null));\n      }\n      return null;\n    })();\n\n    // Get Aurora Signle NFTs\n    (async function getDataFromEndpointA() {\n      const { data, error } = await graphQLClient\n        .query(\n          GET_AURORA_SINGLE_NFTS,\n          {},\n          {\n            clientName: \"aurora\",\n          }\n        )\n        .toPromise();\n      if (error) {\n        return dispatch(\n          setNotification({\n            message: error.message,\n            type: \"warning\",\n          })\n        );\n      }\n      const result = await getSingleGraphNfts(data?.nfts);\n      if (result?.length) {\n        dispatch(setAuroraSingleNfts(result));\n        dispatch(\n          setSearchContainer({\n            \"Aurora 1of1\": parseAuroraSingle(result),\n          })\n        );\n      } else {\n        dispatch(setAuroraSingleNfts(null));\n      }\n      return null;\n    })();\n\n    // Get Polygon Collections\n    (async function getDataFromEndpointB() {\n      const { data, error } = await graphQLClientPolygon\n        .query(\n          GET_ALL_POLYGON_COLLECTIONS,\n          {},\n          {\n            clientName: \"polygon\",\n          }\n        )\n        .toPromise();\n      if (error) {\n        return dispatch(\n          setNotification({\n            message: error.message,\n            type: \"warning\",\n          })\n        );\n      }\n      const result = await getGraphCollections(data?.collections);\n      const filterAddress =\n        process.env.REACT_APP_ENV_STAGING === \"true\"\n          ? ethers.utils.hexlify(process.env.REACT_APP_POLY_TESTNET_SINGLE_ADDRESS)\n          : ethers.utils.hexlify(process.env.REACT_APP_GENA_MAINNET_SINGLE_ADDRESS);\n      const res = result?.filter((data) => data?.Id !== filterAddress);\n      if (res?.length) {\n        dispatch(setPolygonCollections(res));\n        dispatch(\n          setSearchContainer({\n            \"Polygon collection\": parsePolygonCollection(result),\n          })\n        );\n      } else {\n        dispatch(setPolygonCollections(null));\n      }\n      return null;\n    })();\n\n    // Get Polygon Signle NFTs\n    (async function getDataFromEndpointB() {\n      const { data, error } = await graphQLClientPolygon\n        .query(\n          GET_POLYGON_SINGLE_NFTS,\n          {},\n          {\n            clientName: \"polygon\",\n          }\n        )\n        .toPromise();\n      if (error) {\n        return dispatch(\n          setNotification({\n            message: error.message,\n            type: \"warning\",\n          })\n        );\n      }\n      const result = await getSingleGraphNfts(data?.nfts);\n      if (result?.length) {\n        dispatch(setPolygonSingleNfts(result));\n        dispatch(\n          setSearchContainer({\n            \"Polygon 1of1\": parsePolygonSingle(result),\n          })\n        );\n      } else {\n        dispatch(setPolygonSingleNfts(null));\n      }\n      return null;\n    })();\n\n    // Get Celo Single NFTs\n    (async function getCeloSingleNft() {\n      const { data, error } = await celoClient.query(GET_CELO_SINGLE_NFT).toPromise();\n      if (error) {\n        return dispatch(\n          setNotification({\n            message: error.message,\n            type: \"warning\",\n          })\n        );\n      }\n      const result = await getSingleGraphNfts(data?.nfts);\n      if (result?.length) {\n        dispatch(setCeloSingleNft(result));\n        dispatch(\n          setSearchContainer({\n            \"Celo 1of1\": parseCeloSingle(result),\n          })\n        );\n      } else {\n        dispatch(setCeloSingleNft(null));\n      }\n      return null;\n    })();\n\n    // Get Celo Collection NFTs\n    (async function getCeloCollections() {\n      const { data, error } = await celoClient.query(GET_CELO_GRAPH_COLLECITONS).toPromise();\n      if (error) {\n        return dispatch(\n          setNotification({\n            message: error.message,\n            type: \"warning\",\n          })\n        );\n      }\n      const result = await getGraphCollections(data?.collections);\n      const filterAddress =\n        process.env.REACT_APP_ENV_STAGING === \"true\"\n          ? ethers.utils.hexlify(process.env.REACT_APP_CELO_TESTNET_SINGLE_ADDRESS)\n          : ethers.utils.hexlify(process.env.REACT_APP_CELO_MAINNET_SINGLE_ADDRESS);\n      const res = result.filter((data) => data?.Id !== filterAddress);\n      if (res?.length) {\n        dispatch(setCeloCollections(res));\n        dispatch(\n          setSearchContainer({\n            \"Celo collection\": parseCeloCollection(result),\n          })\n        );\n      } else {\n        dispatch(setCeloCollections(null));\n      }\n      return null;\n    })();\n  }, [mainnet]);\n\n  return null;\n};\n\nexport default FetchData;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.types.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.utils.js",["1242"],"import { getDefaultName } from \"../utils\";\n\nexport const addLayer = (layers, layerToAdd) => {\n  const result = layers.find((layer) => layer.layerTitle === layerToAdd.layerTitle);\n  if (result) {\n    const existingLayer = layers.map((data) => {\n      if (result.layerTitle === data.layerTitle) {\n        return { ...data, exists: true };\n      } else {\n        return { ...data, exists: false };\n      }\n    });\n    return existingLayer;\n  }\n  return [...layers, layerToAdd];\n};\n\nexport const removeLayer = (layers, layerToRemove) =>\n  layers.filter((layer) => layer.layerTitle !== layerToRemove.layerTitle);\n\nexport const updateLayer = (layers, layerToUpdate) => {\n  const result = layers.find((layer) => layer.layerTitle === layerToUpdate.layerTitle);\n  if (result) return layers;\n  return layers.map((layer) =>\n    layer.id === layerToUpdate.id ? { ...layer, layerTitle: layerToUpdate.layerTitle } : layer\n  );\n};\n\nexport const addImage = (layers, imageObj) => {\n  const newLayers = layers.map((layer) => {\n    if (layer.id === imageObj.layerId) {\n      return {\n        ...layer,\n        traits: imageObj.traits,\n        traitsAmount: imageObj.traits.length,\n      };\n    }\n    return layer;\n  });\n  return newLayers;\n};\n\nexport const removeImage = (layers, imageObj) => {\n  const newLayers = layers.map((layer) => {\n    if (layer.id === imageObj.layerId) {\n      const { traits } = layer;\n      const newTraits = traits.filter(({ traitTitle }) => traitTitle !== imageObj.traitTitle);\n      return { ...layer, traits: newTraits, traitsAmount: newTraits.length };\n    }\n    return layer;\n  });\n  return newLayers;\n};\n\nexport const updateImage = (layers, imageObj) => {\n  const newLayers = layers.map((layer) => {\n    if (layer.id === imageObj.layerId) {\n      const { traits } = layer;\n      const newTraits = traits.map((trait) => {\n        if (trait.image.name === imageObj.image.name) {\n          return {\n            traitTitle: imageObj.traitTitle,\n            Rarity: imageObj.Rarity,\n            image: imageObj.image,\n          };\n        }\n        return trait;\n      });\n      return { ...layer, traits: newTraits, traitsAmount: newTraits.length };\n    }\n    return layer;\n  });\n  return newLayers;\n};\n\nexport const addPreview = (preview, { layerId, layerTitle, imageName, imageFile }) => {\n  let newPreview = [];\n  const result = preview.find((item) => item.layerId === layerId);\n  if (result) {\n    newPreview = preview.map((item) => {\n      if (item.layerId === layerId) {\n        return { layerId, layerTitle, imageName, imageFile };\n      }\n      return item;\n    });\n  } else {\n    return [...preview, { layerId, layerTitle, imageName, imageFile }];\n  }\n  return newPreview;\n};\n\nexport const removePreview = (preview, { layerId, imageName }) => {\n  const result = preview.find((item) => item.layerId === layerId);\n  if (!result) return preview;\n  return preview.filter((item) => !(item.layerId === layerId && item.imageName === imageName));\n};\n\nexport const updatePreview = (preview, { layerId, layerTitle, imageName }) => {\n  const newPreview = preview.map((pre) => {\n    if (pre.layerId === layerId) {\n      return { layerId, layerTitle, imageName };\n    }\n    return pre;\n  });\n  return newPreview;\n};\n\nexport const deleteAsset = (nftLayers, id) =>\n  nftLayers\n    .filter((layer) => layer.id !== id)\n    .map((layer, idx) => ({ ...layer, name: `${layer.name.split(\"#\")[0]} ${getDefaultName(idx + 1)}`.trim() }));\n\nexport const renameAsset = (nftLayers, value) =>\n  nftLayers.map((layer) => (layer.id === value.id ? { ...layer, name: value.name } : layer));\n\nexport const addDescription = (nftLayers, value) =>\n  nftLayers.map((layer) => (layer.id === value.id ? { ...layer, description: value.description } : layer));\n\nexport const deleteRule = (rule, ruleToDelete) =>\n  rule.filter((rl) => JSON.stringify(rl) !== JSON.stringify(ruleToDelete));\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/artist/Join/Join.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/artist/HeroSection/HeroSection.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/store-data/StoreData.script.js",["1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309"],"import {\n  getStorage,\n  ref,\n  uploadBytes,\n  deleteObject,\n  listAll,\n  getDownloadURL,\n  getMetadata,\n  uploadString,\n} from \"firebase/storage\";\nimport { doc, collection, setDoc, getFirestore, getDoc, getDocs, query, deleteDoc } from \"firebase/firestore\";\nimport { app } from \"../../utils/firebase\";\nimport { setActionProgress } from \"../../gen-state/gen.actions\";\nimport { getFile, getBase64FromUrl } from \"../../utils\";\n\nconst storage = getStorage(app);\nconst firestore = getFirestore();\n\nexport const saveSession = async ({ currentUser, sessionId, collectionName, currentPlan }) => {\n  if (currentUser && sessionId && collectionName) {\n    const docRef = doc(firestore, `users/${currentUser.uid}/sessions/${sessionId}`);\n    setDoc(docRef, {\n      session: {\n        collectionName,\n        sessionId,\n        currentPlan,\n      },\n    });\n    return sessionId;\n  }\n};\n\nexport const saveCollectionName = async ({ currentUser, sessionId, collectionName }) => {\n  if (currentUser && sessionId) {\n    const docRef = doc(firestore, `users/${currentUser.uid}/collectionName/${sessionId}`);\n    setDoc(docRef, { collectionName });\n  }\n};\n\nexport const saveLayers = ({ currentUser, sessionId, layers }) => {\n  if (currentUser && sessionId) {\n    const docRef = doc(firestore, `users/${currentUser.uid}/layers/${sessionId}`);\n    setDoc(docRef, { layers });\n  }\n};\n\nexport const saveRules = ({ currentUser, sessionId, rules }) => {\n  if (currentUser && sessionId) {\n    const docRef = doc(firestore, `users/${currentUser.uid}/rules/${sessionId}`);\n    setDoc(docRef, { rules });\n  }\n};\n\nexport const saveNftLayers = ({ currentUser, sessionId, nftLayers, nftTraits }) => {\n  if (currentUser && sessionId && nftLayers.length) {\n    const docRef = doc(firestore, `users/${currentUser.uid}/nftLayers/${sessionId}`);\n    setDoc(docRef, { nftLayers });\n    // save the layer trait to storage\n    nftTraits.forEach(async ({ id, image }, idx) => {\n      const nftTraitRef = ref(storage, `${currentUser.uid}/nftLayers/${sessionId}/${id}`);\n      try {\n        await uploadString(nftTraitRef, image, \"data_url\");\n      } catch (error) {\n        console.log(`error ${error}`);\n      }\n    });\n  }\n};\n\nexport const saveTraits = async ({ dispatch, currentUser, sessionId, id, traits }) => {\n  if (!traits.length) return;\n  if (currentUser && sessionId) {\n    await Promise.all(\n      traits.map(async ({ traitTitle, image }, idx) => {\n        const traitRef = ref(storage, `${currentUser.uid}/${sessionId}/${id}/${traitTitle}`);\n        try {\n          await uploadBytes(traitRef, image);\n          console.log({ traitTitle });\n          dispatch(setActionProgress({ totalCount: traits.length }));\n        } catch (error) {\n          console.log(`error ${error}`);\n        }\n      })\n    );\n    dispatch(setActionProgress({ resetCount: true }));\n    console.log(\"uploaded successfully\");\n  }\n};\n\nexport const renameTrait = async ({ currentUser, sessionId, id, oldName, newName, image }) => {\n  if (currentUser && sessionId) {\n    const traitRef = ref(storage, `${currentUser.uid}/${sessionId}/${id}/${newName}`);\n    // upload the new file\n    try {\n      await uploadBytes(traitRef, image);\n    } catch (error) {\n      console.log(`error ${error}`);\n    }\n    const deleteRef = ref(storage, `${currentUser.uid}/${sessionId}/${id}/${oldName}`);\n    // Delete the old file\n    try {\n      await deleteObject(deleteRef);\n    } catch (error) {\n      console.log(`error ${error}`);\n    }\n  }\n};\n\nexport const deleteAllLayers = async ({ currentUser, sessionId }) => {\n  try {\n    const res = await fetchNftLayers({ currentUser, sessionId });\n    res && (await deleteAllNftTraits({ currentUser, sessionId }));\n    const { layers } = await fetchLayers({ currentUser, sessionId });\n    layers.forEach(async (layer) => {\n      await deleteAllTraits({ currentUser, sessionId, id: layer.id });\n    });\n    await deleteDoc(doc(firestore, `users/${currentUser.uid}/sessions/${sessionId}`));\n    await deleteDoc(doc(firestore, `users/${currentUser.uid}/collectionName/${sessionId}`));\n    await deleteDoc(doc(firestore, `users/${currentUser.uid}/layers/${sessionId}`));\n    await deleteDoc(doc(firestore, `users/${currentUser.uid}/rules/${sessionId}`));\n    await deleteDoc(doc(firestore, `users/${currentUser.uid}/nftLayers/${sessionId}`));\n  } catch (error) {\n    console.log(\"error: \", error);\n  }\n};\n\nexport const deleteTrait = async ({ currentUser, sessionId, id, traitTitle }) => {\n  if (currentUser && sessionId) {\n    const deleteRef = ref(storage, `${currentUser.uid}/${sessionId}/${id}/${traitTitle}`);\n    try {\n      await deleteObject(deleteRef);\n    } catch (error) {\n      console.log(`error ${error}`);\n    }\n  }\n};\n\nexport const deleteAllTraits = async ({ currentUser, sessionId, id }) => {\n  if (currentUser && sessionId) {\n    const listRef = ref(storage, `${currentUser.uid}/${sessionId}/${id}`);\n    const res = await listAll(listRef);\n    const folder = await Promise.all(\n      res.items.map(async (folderRef) => {\n        // All the folder under listRef.\n        return folderRef;\n      })\n    );\n    folder.forEach(async (ref) => {\n      try {\n        await deleteObject(ref);\n      } catch (error) {\n        console.log(`error ${error}`);\n      }\n    });\n  }\n};\n\nexport const deleteAllNftTraits = async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const listRef = ref(storage, `${currentUser.uid}/nftLayers/${sessionId}`);\n    const res = await listAll(listRef);\n    const folder = await Promise.all(\n      res.items.map(async (folderRef) => {\n        return folderRef;\n      })\n    );\n    folder.forEach(async (ref) => {\n      try {\n        await deleteObject(ref);\n      } catch (error) {\n        console.log(`nftLayers error ${error}`);\n      }\n    });\n  }\n};\n\nexport const fetchSession = async ({ currentUser }) => {\n  if (currentUser) {\n    const q = query(collection(firestore, `users/${currentUser.uid}/sessions`));\n    const querySnapshot = await getDocs(q);\n    const sessions = [];\n    querySnapshot.forEach((doc) => {\n      sessions.push(doc.data());\n    });\n    return sessions;\n  }\n};\n\nexport const fetchCollectionName = async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const querySnapshot = query(doc(firestore, `users/${currentUser.uid}/collectionName/${sessionId}`));\n    const docSnapshot = await getDoc(querySnapshot);\n    if (docSnapshot.exists()) {\n      return docSnapshot.data();\n    } else {\n      console.log(\"collectionName does not exist\");\n    }\n  }\n};\n\nexport const fetchLayers = async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const querySnapshot = query(doc(firestore, `users/${currentUser.uid}/layers/${sessionId}`));\n    const docSnapshot = await getDoc(querySnapshot);\n    if (docSnapshot.exists()) {\n      return docSnapshot.data();\n    } else {\n      console.log(\"layers does not exist\");\n    }\n  }\n};\n\nexport const fetchRules = async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const querySnapshot = query(doc(firestore, `users/${currentUser.uid}/rules/${sessionId}`));\n    const docSnapshot = await getDoc(querySnapshot);\n    if (docSnapshot.exists()) {\n      return docSnapshot.data();\n    } else {\n      console.log(\"rules does not exist\");\n    }\n  }\n};\n\nexport const fetchNftLayers = async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const querySnapshot = query(doc(firestore, `users/${currentUser.uid}/nftLayers/${sessionId}`));\n    const docSnapshot = await getDoc(querySnapshot);\n    if (docSnapshot.exists()) {\n      return docSnapshot.data();\n    } else {\n      console.log(\"nftLayers does not exist\");\n    }\n  }\n};\n\nexport const fetchTraits = async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const listRef = ref(storage, `${currentUser.uid}/${sessionId}/`);\n    const traitRef = await listAll(listRef);\n    // Find all the prefixes and items.\n    const getFiles = async (fileRef) => {\n      const res = await listAll(fileRef);\n      let key = null;\n      const files = await Promise.all(\n        res.items.map(async (itemRef) => {\n          // All the items under listRef.\n          let file = {};\n          try {\n            const url = await getDownloadURL(ref(storage, itemRef));\n            file.url = url;\n            const metadata = await getMetadata(itemRef);\n            file.metadata = metadata;\n            key = metadata.fullPath.split(\"/\")[2];\n            return file;\n          } catch (error) {\n            console.log(error);\n          }\n        })\n      );\n      return { [key]: files };\n    };\n    const folders = await Promise.all(\n      traitRef.prefixes.map(async (folderRef) => {\n        // All the folders under listRef.\n        return folderRef;\n      })\n    );\n    return await Promise.all(folders.map(async (ref) => await getFiles(ref)));\n  }\n};\n\nexport const fetchNftTraits = async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const listRef = ref(storage, `${currentUser.uid}/nftLayers/${sessionId}/`);\n    // Find all the prefixes and items.\n    const res = await listAll(listRef);\n    const nftTraits = {};\n    await Promise.all(\n      res.items.map(async (itemRef) => {\n        // All the items under listRef.\n        let file = {};\n        try {\n          const url = await getDownloadURL(ref(storage, itemRef));\n          file.url = url;\n          const metadata = await getMetadata(itemRef);\n          file.metadata = metadata;\n          const key = metadata.fullPath.split(\"/\")[3];\n          nftTraits[key] = file;\n          return null;\n        } catch (error) {\n          console.log(error);\n        }\n      })\n    );\n    return nftTraits;\n  }\n};\n\nconst transfromTraits = async (value) => {\n  const newTraits = {};\n  await Promise.all(\n    value.map(async (traitObj) => {\n      let newTrait = null;\n      await Promise.all(\n        Object.values(traitObj).map(async (trait) => {\n          newTrait = await Promise.all(\n            trait.map(async ({ url, metadata: { name, contentType } }) => await getFile(url, name, contentType))\n          );\n          return null;\n        })\n      );\n      newTraits[Object.keys(traitObj)] = [...newTrait];\n      return null;\n    })\n  );\n  return newTraits;\n};\n\nconst transfromNftTraits = async (value) => {\n  let newTrait = {};\n  await Promise.all(\n    Object.keys(value).map(async (key) => {\n      const { url } = value[key];\n      const file = await getBase64FromUrl(url);\n      newTrait[key] = file;\n      return null;\n    })\n  );\n  return newTrait;\n};\n\nexport const fetchUserSession = async ({ currentUser, sessionId }) => {\n  console.log(\"fetching\");\n  try {\n    const result = await Promise.all([\n      fetchCollectionName({ currentUser, sessionId }),\n      fetchLayers({ currentUser, sessionId }),\n      fetchNftLayers({ currentUser, sessionId }),\n      fetchRules({ currentUser, sessionId }),\n      fetchTraits({ currentUser, sessionId }),\n      fetchNftTraits({ currentUser, sessionId }),\n    ]);\n    const [storedCollectionName, storedLayers, storedNftLayers, storedRules, storedTraits, storedNftTraits] = result;\n    console.log({\n      storedCollectionName,\n      storedLayers,\n      storedNftLayers,\n      storedRules,\n      storedTraits,\n      storedNftTraits,\n    });\n    let newCollectionName = \"New Collection\";\n    if (storedCollectionName) {\n      newCollectionName = storedCollectionName.collectionName;\n    }\n\n    let newLayers = [];\n    if (storedLayers) {\n      const transformedTraits = await transfromTraits(storedTraits);\n      newLayers = constructLayers({ storedLayers, transformedTraits });\n    }\n\n    let newNftLayers = [];\n    if (storedNftLayers) {\n      let startTime = performance.now();\n      const transformedNftTraits = await transfromNftTraits(storedNftTraits);\n      newNftLayers = constructNftLayers({ storedNftLayers, transformedNftTraits });\n      let endTime = performance.now();\n      console.log(`Call to fetch newNftLayers collection took ${(endTime - startTime) / 1000} seconds`);\n    }\n\n    let newRules = [];\n    if (storedRules) {\n      try {\n        let parseRules = JSON.parse(storedRules.rules);\n        newRules = constructRules({ newLayers, parseRules });\n      } catch (error) {\n        console.log({ error });\n      }\n    }\n\n    return {\n      rules: newRules,\n      layers: newLayers,\n      nftLayers: newNftLayers,\n      collectionName: newCollectionName,\n    };\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\nexport const constructLayers = ({ storedLayers, transformedTraits }) => {\n  return storedLayers.layers.map(({ traits, id, ...otherLayerProps }) => {\n    const obj = transformedTraits[id];\n    const newTraits = traits.map(({ image, traitTitle, ...otherTraitProps }) => {\n      let file = null;\n      for (let o of obj) {\n        if (o.name === traitTitle) {\n          file = o;\n          break;\n        }\n      }\n      return { image: file, traitTitle, ...otherTraitProps };\n    });\n    return { traits: newTraits, id, ...otherLayerProps };\n  });\n};\n\nexport const constructNftLayers = ({ storedNftLayers, transformedNftTraits }) => {\n  return storedNftLayers.nftLayers.map(({ id, image, ...otherLayerProps }) => {\n    const file = transformedNftTraits[id];\n    return { id, image: file, ...otherLayerProps };\n  });\n};\n\nexport const constructRules = ({ newLayers, parseRules }) => {\n  const mapLayersToObj = () => {\n    const mapedLayers = {};\n    newLayers.forEach((layer) => (mapedLayers[layer.id] = layer));\n    return mapedLayers;\n  };\n  const layers = mapLayersToObj();\n  const transformedRules = parseRules.map((r) => {\n    let iRule = r.map(({ layerId, layerTitle, imageName }) => {\n      let { traits } = layers[layerId];\n      let imageFile = null;\n      for (let { traitTitle, image } of traits) {\n        if (traitTitle === imageName) {\n          imageFile = image;\n          break;\n        }\n      }\n      return { imageFile, layerId, layerTitle, imageName };\n    });\n    return iRule;\n  });\n  return transformedRules;\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/gen-state/gen.actions.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Pricing/Pricing.script.js",["1310"],"export const plans = {\n  free: {\n    type: \"free\",\n    amount: \"2000\",\n    description: \"Up to 2,000 unique art generation\",\n    coveredCost: \"Cost per collection\",\n    price: \"0\",\n    subscription: \"Continue\",\n    services: [\n      {\n        name: \"Up to 2000 unique art generartion\",\n        available: true,\n      },\n      {\n        name: \"Unlimited preview\",\n        available: true,\n      },\n      {\n        name: \"Set conflict rule and art rarity\",\n        available: true,\n      },\n      {\n        name: \"Auto-save session progress\",\n        available: false,\n      },\n      {\n        name: \"Download collection with metadata\",\n        available: false,\n      },\n      {\n        name: \"Generate GIf\",\n        available: false,\n      },\n      {\n        name: \"Technical support\",\n        available: false,\n      },\n    ],\n  },\n  hobby: {\n    type: \"hobby\",\n    amount: \"2000\",\n    description: \"Up to 2,000 unique art generation\",\n    coveredCost: \"Cost per collection\",\n    price: \"100\",\n    subscription: \"Upgrade\",\n    services: [\n      {\n        name: \"Up to 2000 unique art generartion\",\n        available: true,\n      },\n      {\n        name: \"Unlimited preview\",\n        available: true,\n      },\n      {\n        name: \"Set conflict rule and art rarity\",\n        available: true,\n      },\n      {\n        name: \"Auto-save session progress\",\n        available: true,\n      },\n      {\n        name: \"Download collection with metadata\",\n        available: true,\n      },\n      {\n        name: \"Generate GIf\",\n        available: true,\n      },\n      {\n        name: \"Technical support\",\n        available: true,\n      },\n    ],\n  },\n  pro: {\n    type: \"pro\",\n    amount: \"5000\",\n    description: \"Up to 5,000 unique art generation\",\n    coveredCost: \"Cost per collection\",\n    price: \"200\",\n    subscription: \"Upgrade\",\n    mostPopular: true,\n    services: [\n      {\n        name: \"Up to 2000 unique art generartion\",\n        available: true,\n      },\n      {\n        name: \"Unlimited preview\",\n        available: true,\n      },\n      {\n        name: \"Set conflict rule and art rarity\",\n        available: true,\n      },\n      {\n        name: \"Auto-save session progress\",\n        available: true,\n      },\n      {\n        name: \"Download collection with metadata\",\n        available: true,\n      },\n      {\n        name: \"Generate GIf\",\n        available: true,\n      },\n      {\n        name: \"Technical support\",\n        available: true,\n      },\n    ],\n  },\n  agency: {\n    type: \"agency\",\n    amount: \"10000\",\n    description: \"Up to ,10000 unique art generation\",\n    coveredCost: \"Cost per collection\",\n    price: \"300\",\n    subscription: \"Upgrade\",\n    services: [\n      {\n        name: \"Up to 2000 unique art generartion\",\n        available: true,\n      },\n      {\n        name: \"Unlimited preview\",\n        available: true,\n      },\n      {\n        name: \"Set conflict rule and art rarity\",\n        available: true,\n      },\n      {\n        name: \"Auto-save session progress\",\n        available: true,\n      },\n      {\n        name: \"Download collection with metadata\",\n        available: true,\n      },\n      {\n        name: \"Generate GIf\",\n        available: true,\n      },\n      {\n        name: \"Technical support\",\n        available: true,\n      },\n    ],\n  },\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/store-data/StoreDataLocal.js",["1311","1312","1313","1314","1315","1316","1317"],"import { dataURItoBlob } from \"../../utils\";\n\nconst getFile = ({ imageUrl, fileName, fileType }) => {\n  const imageFile = new File([dataURItoBlob(imageUrl)], fileName, { type: `image/${fileType}` });\n  return imageFile;\n};\n\nconst delay = async () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, 0);\n  });\n};\n\nconst getBase64 = async (file) => {\n  return new Promise((resolve, reject) => {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      resolve(reader.result);\n    };\n    reader.onerror = function (error) {\n      reject(\"Error: \", error);\n    };\n  });\n};\n\nexport const saveLayers = async ({ layers }) => {\n  const newLayers = await Promise.all(\n    layers.map(async ({ traits, ...othersLayerProps }) => {\n      const newTrait = await Promise.all(\n        traits.map(async ({ image, ...otherTraits }) => {\n          const name = image.name.replace(/\\.+\\s*\\./, \".\").split(\".\");\n          const fileName = image.name;\n          const fileType = name.slice(name.length - 1).join();\n          const loadImage = async () => {\n            const dataUrl = await getBase64(image);\n            return { image: dataUrl, fileName, fileType, ...otherTraits };\n          };\n          return await loadImage();\n        })\n      );\n      return { traits: newTrait, ...othersLayerProps };\n    })\n  );\n  const cache = JSON.stringify(newLayers);\n  window.sessionStorage.storedLayers = cache;\n};\n\nexport const saveNftLayers = async ({ nftLayers }) => {\n  const cache = JSON.stringify(nftLayers);\n  window.sessionStorage.storedNftLayers = cache;\n};\n\nexport const fetchNftLayers = async () => {\n  if (!window.sessionStorage.storedNftLayers) return [];\n  // delay function is a hack to get one machine cycle off javascript. This is to ensure that the color to window sessionstorage has returned;\n  await delay();\n  return JSON.parse(window.sessionStorage.storedNftLayers);\n};\n\nexport const fetchLayers = async () => {\n  if (!window.sessionStorage.storedLayers) return [];\n  await delay();\n  const layers = JSON.parse(window.sessionStorage.storedLayers);\n  const newLayers = await Promise.all(\n    layers.map(async ({ traits, ...othersLayerProps }) => {\n      const newTrait = await Promise.all(\n        traits.map(async ({ image, fileType, fileName, ...otherTraits }) => {\n          const file = getFile({ imageUrl: image, fileType, fileName });\n          return { image: file, ...otherTraits };\n        })\n      );\n      return { traits: newTrait, ...othersLayerProps };\n    })\n  );\n  return newLayers;\n};\n\nexport const savePreview = async ({ preview }) => {\n  const newPreview = await Promise.all(\n    preview.map(async ({ imageFile, ...otherTraits }) => {\n      const name = imageFile.name.replace(/\\.+\\s*\\./, \".\").split(\".\");\n      const fileName = imageFile.name;\n      const fileType = name.slice(name.length - 1).join();\n      const loadImage = async () => {\n        const dataUrl = await getBase64(imageFile);\n        return { imageFile: dataUrl, fileName, fileType, ...otherTraits };\n      };\n      return await loadImage();\n    })\n  );\n  const cache = JSON.stringify(newPreview);\n  window.sessionStorage.storedPreview = cache;\n};\n\nexport const fetchPreview = async () => {\n  if (!window.sessionStorage.storedPreview) return [];\n  const preview = JSON.parse(window.sessionStorage.storedPreview);\n  await delay();\n  const newPreview = await Promise.all(\n    preview.map(async ({ imageFile, fileType, fileName, ...otherTraits }) => {\n      const file = getFile({ imageUrl: imageFile, fileType, fileName });\n      return { imageFile: file, ...otherTraits };\n    })\n  );\n  return newPreview;\n};\n\nexport const saveRule = async ({ rule }) => {\n  const newRule = await Promise.all(\n    rule.map(async (r) => {\n      const newLayer = await Promise.all(\n        r.map(async ({ imageFile, ...otherTraits }) => {\n          const name = imageFile.name.replace(/\\.+\\s*\\./, \".\").split(\".\");\n          const fileName = imageFile.name;\n          const fileType = name.slice(name.length - 1).join();\n          const loadImage = async () => {\n            const dataUrl = await getBase64(imageFile);\n            return { imageFile: dataUrl, fileName, fileType, ...otherTraits };\n          };\n          return await loadImage();\n        })\n      );\n      return [...newLayer];\n    })\n  );\n  const cache = JSON.stringify(newRule);\n  window.sessionStorage.storedRule = cache;\n};\n\nexport const fetchRules = async () => {\n  if (!window.sessionStorage.storedRule) return [];\n  const rule = JSON.parse(window.sessionStorage.storedRule);\n  await delay();\n  const newRule = await Promise.all(\n    rule.map(async (r) => {\n      const newLayer = await Promise.all(\n        r.map(async ({ imageFile, fileType, fileName, ...otherTraits }) => {\n          const file = getFile({ imageUrl: imageFile, fileType, fileName });\n          return { imageFile: file, ...otherTraits };\n        })\n      );\n      return [...newLayer];\n    })\n  );\n  return newRule;\n};\n\nexport const saveUserData = ({\n  layers,\n  nftLayers,\n  rule,\n  preview,\n  collectionName,\n  sessionId,\n  upgradePlan,\n  proposedPlan,\n  currentPlan,\n  currentUser,\n}) => {\n  saveLayers({ layers });\n  saveNftLayers({ nftLayers });\n  saveRule({ rule });\n  savePreview({ preview });\n  const data = {\n    collectionName,\n    sessionId,\n    upgradePlan,\n    proposedPlan,\n    currentPlan,\n    currentUser,\n  };\n  window.sessionStorage.otherInfo = JSON.stringify(data);\n  window.sessionStorage.isStripe = \"true\";\n};\n\nexport const fetchUserData = async () => {\n  const layers = await fetchLayers();\n  const nftLayers = await fetchNftLayers();\n  const preview = await fetchPreview();\n  const rule = await fetchRules();\n  const { collectionName, sessionId, upgradePlan, proposedPlan, currentPlan, currentUser } = JSON.parse(\n    window.sessionStorage.otherInfo\n  );\n  return {\n    layers,\n    nftLayers,\n    preview,\n    rule,\n    collectionName,\n    sessionId,\n    upgradePlan,\n    proposedPlan,\n    currentPlan,\n    currentUser,\n  };\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Explore-script.js",["1318"],"export const mapAttributeToFilter = (data) => {\n  const attributes = {};\n  data.forEach(({ ipfs_data }) => {\n    ipfs_data.properties.forEach((attr) => {\n      if (attr.trait_type in attributes) {\n        const obj = {};\n        const newValue = [...attributes[attr.trait_type].value, attr.value];\n        const newRarity = [...attributes[attr.trait_type].rarity, attr.rarity];\n        obj.trait_type = attr.trait_type;\n        obj.value = newValue;\n        obj.rarity = newRarity;\n        attributes[attr.trait_type] = obj;\n      } else {\n        const obj = {};\n        obj.trait_type = attr.trait_type;\n        obj.value = [attr.value];\n        obj.rarity = [attr.rarity];\n        attributes[attr.trait_type] = obj;\n      }\n    });\n  });\n  return Object.keys(attributes).map((key) => attributes[key]);\n};\n\nexport const groupAttributesByTraitType = (attributes) => {\n  const obj = {};\n  attributes &&\n    attributes.length &&\n    attributes.forEach((attr) => {\n      try {\n        obj[attr.trait_type] = [...obj[attr.trait_type], attr];\n      } catch (error) {\n        obj[attr.trait_type] = [attr];\n      }\n    });\n  return obj;\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/google-auth/googleAuth.script.js",["1319","1320"],"import { GoogleAuthProvider, getAuth, signInWithPopup, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { setCollectionName, setCurrentUser, setIsUser, setNotification } from \"../../gen-state/gen.actions\";\nimport { handleResetCreate } from \"../../utils\";\n\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth();\n\nexport const signInWithGoogle = ({ dispatch }) => {\n  signInWithPopup(auth, provider)\n    .then((result) => {\n      const { displayName, email, uid } = result.user;\n      dispatch(setCurrentUser({ displayName, email, uid }));\n    })\n    .catch((error) => {\n      console.log(error);\n      dispatch(\n        setNotification({\n          type: \"error\",\n          message: \"something went wrong! Please try again.\",\n        })\n      );\n    });\n};\n\nexport const getCurrentUser = ({ dispatch }) => {\n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      const { displayName, email, uid, photoURL } = user;\n      dispatch(setCurrentUser({ displayName, email, uid, photoURL }));\n      dispatch(setIsUser(\"true\"));\n    } else {\n      dispatch(setCurrentUser(null));\n      dispatch(setIsUser(\"false\"));\n    }\n  });\n};\n\nexport const logOut = ({ currentPlan, dispatch }) => {\n  signOut(auth)\n    .then(() => {\n      dispatch(setCurrentUser(null));\n      if (currentPlan !== \"free\") {\n        handleResetCreate({ dispatch });\n        dispatch(setCollectionName(\"New Collection\"));\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/menu/collection-menu-script.js",["1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332"],"import { setImageAction, setLayers, setOverlay } from \"../../gen-state/gen.actions\";\nimport { dataURItoBlob, handleBlankImage, handleTemplateImage } from \"../../utils\";\nimport { v4 as uuid } from \"uuid\";\nimport { getFile } from \"../../utils\";\n\nexport const handleFileChange = (props) => {\n  const { layerId, event, traits, layerTitle, dispatch } = props;\n  const { files } = event.target;\n  const imageFiles = Object.values(files);\n  const currentImageFiles = [...traits];\n  const filterArr = traits.map(({ image }) => image.name);\n  let newImageFiles = [];\n  imageFiles.forEach((imageFile) => {\n    if (!filterArr.includes(imageFile.name)) {\n      newImageFiles.push({\n        traitTitle: imageFile.name.split(\".\")[0],\n        Rarity: \"1\",\n        image: imageFile,\n      });\n      filterArr.push(imageFile.name);\n    }\n  });\n  dispatch(\n    setImageAction({\n      type: \"upload\",\n      value: {\n        id: layerId,\n        traits: newImageFiles,\n      },\n    })\n  );\n  return { layerId, layerTitle, traits: currentImageFiles.concat(newImageFiles) };\n};\n\nexport const handleAddAssets = (props) => {\n  const { layerId, files, traits, layerTitle } = props;\n  const imageFiles = Object.values(files);\n  const uniqueImageFile = [...traits];\n  const filterArr = traits.map(({ image }) => image.name);\n\n  imageFiles.forEach((imageFile) => {\n    if (!filterArr.includes(imageFile.name)) {\n      uniqueImageFile.push({\n        traitTitle: imageFile.name.split(\".\")[0],\n        Rarity: \"1\",\n        image: imageFile,\n      });\n      filterArr.push(imageFile.name);\n    }\n  });\n  return { layerId, layerTitle, traits: uniqueImageFile };\n};\n\nexport const handleAddBlank = async (props) => {\n  const { canvas, img, traits, layerTitle, layerId, imageQuality } = props;\n  await handleBlankImage({ canvas, img });\n  const imageUrl = canvas.toDataURL(\"image/webp\", imageQuality);\n  const imageFile = new File([dataURItoBlob(imageUrl)], \"\");\n  const uniqueImageFile = [...traits];\n  const filterArr = traits.map(({ image }) => image.name);\n  if (!filterArr.includes(imageFile.name)) {\n    uniqueImageFile.push({\n      traitTitle: \"blank\",\n      Rarity: \"1\",\n      image: imageFile,\n    });\n  }\n  return { layerId, layerTitle, traits: uniqueImageFile };\n};\n\nexport const handleSampleLayers = async ({ dispatch }) => {\n  dispatch(setOverlay(true));\n  const url = {\n    Green10: \"/assets/CreateAssets/Goo/Green10.png\",\n    High30: \"/assets/CreateAssets/TopLid/High30.png\",\n    Middle50: \"/assets/CreateAssets/TopLid/Middle50.png\",\n    High20: \"/assets/CreateAssets/BottomLid/High20.png\",\n    Low40: \"/assets/CreateAssets/BottomLid/Low40.png\",\n    Cyan1: \"/assets/CreateAssets/EyeColor/Cyan1.png\",\n    Yellow10: \"/assets/CreateAssets/EyeColor/Yellow10.png\",\n  };\n\n  // mapUrlToFile\n  const file = {};\n  await Promise.all(\n    Object.keys(url).map(async (key) => {\n      file[key] = await getFile(url[key], `${key}.png`, \"image/png\");\n    })\n  );\n\n  const layers = [\n    {\n      id: uuid(),\n      layerTitle: \"Goo\",\n      traitsAmount: 1,\n      traits: [{ traitTitle: \"Green10\", Rarity: \"1\", image: file[\"Green10\"] }],\n    },\n    {\n      id: uuid(),\n      layerTitle: \"Top Lid\",\n      traitsAmount: 2,\n      traits: [\n        { traitTitle: \"High30\", Rarity: \"1\", image: file[\"High30\"] },\n        { traitTitle: \"Middle50\", Rarity: \"1\", image: file[\"Middle50\"] },\n      ],\n    },\n    {\n      id: uuid(),\n      layerTitle: \"Bottom Lid\",\n      traitsAmount: 2,\n      traits: [\n        { traitTitle: \"High20\", Rarity: \"1\", image: file[\"High20\"] },\n        { traitTitle: \"Low40\", Rarity: \"1\", image: file[\"Low40\"] },\n      ],\n    },\n    {\n      id: uuid(),\n      layerTitle: \"Eye Color\",\n      traitsAmount: 2,\n      traits: [\n        { traitTitle: \"Cyan1\", Rarity: \"1\", image: file[\"Cyan1\"] },\n        { traitTitle: \"Yellow10\", Rarity: \"1\", image: file[\"Yellow10\"] },\n      ],\n    },\n  ];\n\n  dispatch(setLayers(layers));\n  dispatch(setOverlay(false));\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/fetch-data/fetchData-script.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/collection-single/collection-single-script.js",["1333","1334","1335"],"import JSZip from \"jszip\";\n\nfunction _arrayBufferToBase64(buffer) {\n  let binary = \"\";\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n}\n\nexport const extractZip = async (zip) => {\n  const new_zip = new JSZip();\n\n  const unzipped = await new_zip.loadAsync(zip);\n\n  const collection = [];\n  let metadata = null;\n  Object.keys(unzipped.files).forEach((file) => {\n    let blob = null;\n    let string = null;\n    const uint8array = unzipped.files[file]._data.compressedContent;\n    const fileType = file.split(\".\")[1]?.toLowerCase();\n    if (fileType === \"json\") {\n      string = new TextDecoder().decode(uint8array);\n      blob = new Blob([new Uint8Array(uint8array).buffer], {\n        type: \"application/json\",\n      });\n      metadata = JSON.parse(string);\n    } else {\n      string = new TextDecoder().decode(uint8array);\n      blob = new Blob([new Uint8Array(uint8array).buffer], {\n        type: `image/${fileType}`,\n      });\n      const imageFile = new File([blob], file, {\n        type: `image/${fileType}`,\n      });\n      collection.push(imageFile);\n    }\n  });\n  return { metadata, collection };\n};\n\nexport const handleZipFile = async (arg) => {\n  const { uploadedFile, handleSetState } = arg;\n  try {\n    const { metadata, collection } = await extractZip(uploadedFile);\n    handleSetState({ file: collection, metadata });\n  } catch (error) {\n    console.error(`failed with ${error}`);\n  }\n};\n\nexport const updateZip = async (zip, name, handleSetState) => {\n  const new_zip = new JSZip();\n  const unzipped = await new_zip.loadAsync(zip);\n  // selected image values\n  const pic = { ...unzipped.files[name] };\n  // index[0] image values\n  const index1 = { ...unzipped.files[Object.keys(unzipped.files)[1]] };\n\n  // swaping name values\n  unzipped.files[name].name = index1.name;\n\n  unzipped.files[Object.keys(unzipped.files)[1]].name = pic.name;\n\n  // swaping key's value\n  const selectedImage = unzipped.files[name];\n  unzipped.files[name] = unzipped.files[Object.keys(unzipped.files)[1]];\n  unzipped.files[Object.keys(unzipped.files)[1]] = selectedImage;\n\n  // updating metaData\n  let string = new TextDecoder().decode(unzipped.files[\"metadata.json\"]._data.compressedContent);\n  const metadata = JSON.parse(string);\n  const index = metadata.findIndex((object) => {\n    return object.image === name;\n  });\n  const a = { ...metadata[index] };\n  const b = { ...metadata[0] };\n  a.name = metadata[0].name;\n  a.image = metadata[0].image;\n  b.name = metadata[index].name;\n  b.image = metadata[index].image;\n  const newMetaData = [];\n  metadata.forEach((object, indx) => {\n    if (indx === 0) {\n      newMetaData.push(a);\n    } else if (indx === index) {\n      newMetaData.push(b);\n    } else {\n      newMetaData.push(object);\n    }\n  });\n  string = JSON.stringify(newMetaData, null, \"\\t\");\n  unzipped.file(\"metadata.json\", string);\n\n  // Generates a complete zip with the new values\n  const uploadedFile = await unzipped.generateAsync({ type: \"blob\" });\n\n  // update the stats\n  handleSetState({ zip: uploadedFile });\n  handleZipFile({ uploadedFile, handleSetState });\n};\n\n// export const handleZipFile = async (arg) => {\n//   const { uploadedFile, handleSetState } = arg;\n//   try {\n//     const { metadata, collection } = await extractZip(uploadedFile);\n//     handleSetState({ file: collection, metadata });\n//   } catch (error) {\n//     console.error(`failed with ${error}`);\n//   }\n// };\n// export const updateZip = async (zip, name, handleSetState) => {\n//   const new_zip = new JSZip();\n//   const unzipped = await new_zip.loadAsync(zip, { base64: true });\n//   const newZip = new JSZip();\n//   let metadata;\n//   let string;\n//   console.log(unzipped.files);\n//   Object.keys(unzipped.files).forEach(async (file, idx) => {\n//     const uint8array = unzipped.files[file]._data.compressedContent;\n//     const fileType = file.split(\".\")[1]?.toLowerCase();\n//     if (idx === 1) {\n//       const uint8arra = unzipped.files[name]._data.compressedContent;\n//       const base64String = _arrayBufferToBase64(uint8arra);\n//       newZip.file(file, base64String, { base64: true });\n//     } else if (fileType === \"json\") {\n//       string = new TextDecoder().decode(uint8array);\n//       metadata = JSON.parse(string);\n//       const index = metadata.findIndex((object) => {\n//         return object.image === name;\n//       });\n//       const a = { ...metadata[index] };\n//       const b = { ...metadata[0] };\n//       a.name = metadata[0].name;\n//       a.image = metadata[0].image;\n//       b.name = metadata[index].name;\n//       b.image = metadata[index].image;\n//       const newMetaData = [];\n//       metadata.forEach((object, indx) => {\n//         if (indx === 0) {\n//           newMetaData.push(a);\n//         } else if (indx === index) {\n//           newMetaData.push(b);\n//         } else {\n//           newMetaData.push(object);\n//         }\n//       });\n//       string = JSON.stringify(newMetaData, null, \"\\t\");\n\n//       newZip.file(\"metadata.json\", string);\n//     } else if (file !== name) {\n//       const uint8arra = unzipped.files[file]._data.compressedContent;\n//       const base64String = _arrayBufferToBase64(uint8arra);\n//       newZip.file(file, base64String, { base64: true });\n//     } else if (file === name) {\n//       const uint8arra = unzipped.files[Object.keys(unzipped.files)[1]]._data.compressedContent;\n//       const base64String = _arrayBufferToBase64(uint8arra);\n//       newZip.file(name, base64String, { base64: true });\n//     }\n//   });\n\n//   const uploadedFile = await newZip.generateAsync({ type: \"blob\" });\n//   handleSetState({ zip: uploadedFile });\n//   handleZipFile({ uploadedFile, handleSetState });\n// };\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/pitch-lock/pitchLock.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Session/No-Result/NoResult.jsx",["1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349"],"import classes from \"./NoResult.module.css\";\nimport { ReactComponent as CartIcon } from \"../../../assets/icon-cart.svg\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { useHistory } from \"react-router-dom\";\nimport { setUpgradePlan } from \"../../../gen-state/gen.actions\";\n\nconst NotFound = () => {\n  const { dispatch } = useContext(GenContext);\n  const history = useHistory();\n\n  const handleCreate = () => {\n    dispatch(setUpgradePlan(false));\n    history.push(\"/create/session/pricing\");\n  };\n\n  const handleUpgrade = () => {\n    dispatch(setUpgradePlan(true));\n    history.push(\"/create/session/pricing\");\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.content}>\n        <h1>Session</h1>\n        <div className={classes.wrapper}>\n          <CartIcon className={classes.cartIcon} />\n          <div className={classes.description}>\n            <div>You have no saved session</div>\n            <div>Upgrade to any of our paid plans to save your session progress</div>\n          </div>\n          <button onClick={handleUpgrade} className={classes.upgradeBtn}>\n            Upgrade\n          </button>\n          <button onClick={handleCreate} className={classes.createBtn}>\n            Create new session\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/firebase.js",["1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364"],"import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport { nanoid } from \"nanoid\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { query, where, getDocs } from \"firebase/firestore\";\n\n// const {\n//   getDatabase,\n//   ref,\n//   get,\n//   child,\n//   push,\n//   update,\n// } = require('firebase/database');\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey:\n    process.env.REACT_APP_ENV_STAGING === \"true\"\n      ? process.env.REACT_APP_API_KEY_STAGING\n      : process.env.REACT_APP_API_KEY_PROD,\n  authDomain:\n    process.env.REACT_APP_ENV_STAGING === \"true\"\n      ? process.env.REACT_APP_AUTH_DOMAIN_STAGING\n      : process.env.REACT_APP_AUTH_DOMAIN_PROD,\n  projectId:\n    process.env.REACT_APP_ENV_STAGING === \"true\"\n      ? process.env.REACT_APP_PROJECT_ID_STAGING\n      : process.env.REACT_APP_PROJECT_ID_PROD,\n  storageBucket:\n    process.env.REACT_APP_ENV_STAGING === \"true\"\n      ? process.env.REACT_APP_STORAGE_BUCKET_STAGING\n      : process.env.REACT_APP_STORAGE_BUCKET_PROD,\n  messagingSenderId:\n    process.env.REACT_APP_ENV_STAGING === \"true\"\n      ? process.env.REACT_APP_MESSAGING_SENDER_ID_STAGING\n      : process.env.REACT_APP_MESSAGING_SENDER_ID_PROD,\n  appId:\n    process.env.REACT_APP_ENV_STAGING === \"true\" ? process.env.REACT_APP_ID_STAGING : process.env.REACT_APP_ID_PROD,\n  measurementId:\n    process.env.REACT_APP_ENV_STAGING === \"true\"\n      ? process.env.REACT_APP_MEASUREMENT_ID_STAGING\n      : process.env.REACT_APP_MEASUREMENT_ID_PROD,\n};\n\n// Initialize Firebase\n\nlet initApp = null;\nif (!firebase.apps.length) {\n  initApp = firebase.initializeApp(firebaseConfig);\n}\nfirebase.firestore().settings({ experimentalForceLongPolling: true });\n\nexport const app = initApp;\nconst db = firebase.firestore();\n\nasync function recordTransaction(assetId, type, buyer, seller, price, txId) {\n  const updates = {};\n  updates[nanoid()] = {\n    type,\n    buyer,\n    seller,\n    price,\n    txId,\n    txDate: new Date(),\n  };\n  db.collection(\"transactionsHistory\")\n    .doc(`${assetId}`)\n    .set(\n      {\n        ...updates,\n      },\n      { merge: true }\n    );\n}\n\nasync function writeUserData(owner, collection, fileName, collection_id, priceValue, description, mainnet, txId, list) {\n  const name = fileName.split(\"-\")[0];\n  const updates = {};\n  for (let i = 0; i < collection_id.length; ++i) {\n    updates[collection_id[i]] = {\n      id: collection_id[i],\n      collection: name,\n      price: priceValue,\n      chain: \"algo\",\n      owner,\n      isListed: !!list,\n      sold: false,\n      mainnet,\n      createdAt: new Date(),\n    };\n    // eslint-disable-next-line no-await-in-loop\n    await recordTransaction(collection_id[i], \"Minting\", owner, null, null, txId[i]);\n  }\n  db.collection(\"collections\")\n    .add({\n      name: `${name}`,\n      url: `${collection}`,\n      price: priceValue,\n      owner,\n      description,\n      mainnet,\n      createdAt: new Date(),\n    })\n    .then(() => {})\n    .catch((error) => {\n      console.error(\"Error\", error);\n    });\n  db.collection(\"nfts\")\n    .doc(`${owner}`)\n    .set(\n      {\n        ...updates,\n      },\n      { merge: true }\n    );\n}\n\nasync function writeUserProfile(userObj, user) {\n  try {\n    let lendy = await db\n      .collection(\"profile\")\n      .doc(`${user}`)\n      .set(\n        {\n          ...userObj,\n        },\n        {\n          merge: true,\n        }\n      );\n  } catch (error) {\n    return { message: \"profile upload failed\" };\n  }\n  return userObj;\n}\n\nasync function readNftTransaction(assetId) {\n  const querySnapshot = await db.collection(\"transactionsHistory\").doc(`${assetId}`).get();\n\n  return Object.values(querySnapshot.data());\n}\n\nasync function writeNft(owner, collection, assetId, price, sold, buyer, dateSold, mainnet, txId, list) {\n  const updates = {};\n  updates[assetId] = {\n    id: assetId,\n    collection: collection || null,\n    sold: !!sold,\n    Buyer: buyer,\n    chain: \"algo\",\n    isListed: !!list,\n    owner: buyer || owner,\n    price,\n    dateSold,\n    mainnet,\n    createdAt: new Date(),\n  };\n  db.collection(\"nfts\")\n    .doc(`${owner}`)\n    .set(\n      {\n        ...updates,\n      },\n      { merge: true }\n    );\n  if (!sold) {\n    await recordTransaction(assetId, \"Minting\", owner, null, null, txId);\n  }\n\n  return true;\n}\n\n// async function readData() {\n//   const dbRef = ref(getDatabase());\n//   await get(child(dbRef, 'list'))\n//     .then((snapshot) => {\n//       if (snapshot.exists()) {\n//         // console.log(snapshot.val());\n//       } else {\n//         // console.log(\"No data available\");\n//       }\n//     })\n//     .catch((error) => {\n//       console.error(error);\n//     });\n// }\n\nasync function readSIngleUserNft(userAddress, assetId) {\n  // const querySnapshot = await db.collection(\"nfts\").doc(userAddress).get();\n  // const res = [];\n  // querySnapshot.forEach((docs) => {\n  //   res.push(...Object.values(docs.data()));\n  // });\n  // return res.find((asset) => asset.id === assetId);\n  const querySnapshot = await db.collection(\"nfts\").get();\n  const res = [];\n  try {\n    querySnapshot.forEach((docs) => {\n      res.push(...Object.values(docs.data()));\n    });\n    const response = res.find((asset) => asset.owner === userAddress && asset.id === assetId);\n    return response;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nasync function readUserProfile(userAddress) {\n  const docRef = doc(db, \"profile\", userAddress);\n  const docSnap = await getDoc(docRef);\n  if (docSnap.exists()) {\n    return docSnap.data();\n  }\n  // doc.data() will be undefined in this case\n  return {};\n}\n\nasync function fetchAlgoSingle(mainnet) {\n  const querySnapshot = await db.collection(\"nfts\").get();\n  const res = [];\n  querySnapshot.forEach((docs) => {\n    res.push(...Object.values(docs.data()));\n  });\n  const response = res.filter((asset) => asset.collection === null && asset.mainnet === mainnet);\n  return response;\n}\n\nasync function fetchAlgoCollections(mainnet) {\n  const querySnapshot = await db.collection(\"collections\").get();\n  const res = [];\n  querySnapshot.forEach((docs) => {\n    res.push(docs.data());\n  });\n  const response = mainnet === null ? res : res.filter((asset) => asset.mainnet === mainnet);\n  return response;\n}\n\nasync function fetchUserCollections(account) {\n  const querySnapshot = await db.collection(\"collections\").where(\"owner\", \"==\", account).get();\n  const res = [];\n  querySnapshot.forEach((docs) => {\n    res.push(docs.data());\n  });\n  return res;\n}\n\nasync function fetchUserCreatedNfts(account) {\n  const querySnapshot = await db.collection(\"nfts\").doc(account).get();\n  try {\n    const res = Object.values(querySnapshot.data());\n    return res;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nasync function fetchUserNfts(account) {\n  const querySnapshot = await db.collection(\"nfts\").get();\n  const res = [];\n  try {\n    querySnapshot.forEach((docs) => {\n      res.push(...Object.values(docs.data()));\n    });\n    const response = res.filter((asset) => asset.owner === account);\n    return response;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nasync function fetchUserBoughtNfts(account) {\n  const querySnapshot = await db.collection(\"nfts\").get();\n  const res = [];\n  querySnapshot.forEach((docs) => {\n    res.push(...Object.values(docs.data()));\n  });\n\n  const filtered = [];\n  res.forEach((e) => {\n    if (e.Buyer === account) {\n      filtered.push(e);\n    }\n  });\n  return filtered;\n}\n\nasync function listNft(assetId, price, owner) {\n  console.log(\"so you wanna list??\");\n  // let asset = await readSIngleUserNft(prevOwner, assetId);\n  // if (asset.buyer !== newOwner) {\n  //   return { message: \"you do not own this nft\" };\n  // }\n  // const nftRef = db.collection(\"nfts\").where(`${assetId}.id`, \"==\", assetId).get()\n  // const res = [];\n  // (await nftRef).forEach((docs) => {\n  //   res.push(...Object.values(docs.data()));\n  // });\n  // const rep = res.filter((asset) => asset.id === assetId);\n  // console.log(\"rev fighter\", res, rep);\n  // return;\n  const updates = {};\n  const batch = db.batch();\n\n  updates[assetId] = {\n    price,\n    updatedAt: new Date(),\n    sold: false,\n    isListed: true,\n  };\n\n  const transactionRecords = {};\n  transactionRecords[nanoid()] = {\n    type: \"Listing\",\n    buyer: owner,\n    id: assetId,\n    price,\n    txId: \"\",\n    txDate: new Date(),\n  };\n  try {\n    const nftRef = await db.collection(\"nfts\").where(`${assetId}.id`, \"==\", assetId).get();\n    console.log(nftRef);\n    const recordRef = db.collection(\"transactionsHistory\").doc(`${assetId}`);\n    batch.set(nftRef.docs[0].ref, updates, { merge: true });\n    batch.set(recordRef, transactionRecords, { merge: true });\n    await batch.commit();\n    return { message: \"Nft has been relisted\" };\n  } catch (err) {\n    console.log(err);\n    return { message: \"an error occured while listing nft\" };\n  }\n}\n\nexport {\n  writeUserData,\n  readSIngleUserNft,\n  fetchAlgoCollections,\n  fetchAlgoSingle,\n  fetchUserCollections,\n  fetchUserNfts,\n  fetchUserBoughtNfts,\n  writeNft,\n  recordTransaction,\n  readNftTransaction,\n  readUserProfile,\n  writeUserProfile,\n  listNft,\n  fetchUserCreatedNfts,\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/graphqlClient.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/google-auth/googleAuth.jsx",["1365","1366","1367","1368","1369","1370","1371","1372"],"import { useState } from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./googleAuth.module.css\";\nimport { getCurrentUser, signInWithGoogle } from \"./googleAuth.script\";\n\nconst GoogleAuth = () => {\n  const { dispatch, currentUser } = useContext(GenContext);\n  const [user, setUser] = useState(null);\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  const handleSignIn = () => {\n    signInWithGoogle({ dispatch });\n  };\n\n  const getInitial = (name) => {\n    if (!name) return \"\";\n    name = name.split(\" \");\n    if (name.length >= 2) {\n      return `${name[0][0]} ${name[1][0]}`;\n    }\n    return `${name[0][0]}`;\n  };\n\n  useEffect(() => {\n    setUser(currentUser);\n  }, [currentUser]);\n\n  useEffect(() => {\n    getCurrentUser({ dispatch });\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      {user ? (\n        <div className={classes.profileContainer}>\n          <img\n            style={{ display: `${imageLoaded ? \"block\" : \"none\"}` }}\n            onLoad={() => setImageLoaded(true)}\n            src={user.photoURL}\n            alt=\"\"\n            className={classes.profileIcon}\n          />\n          {!imageLoaded && <div className={classes.profileIcon}>{getInitial(user.displayName)}</div>}\n        </div>\n      ) : (\n        <div className={classes.signIn} onClick={handleSignIn}>\n          sign in\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GoogleAuth;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Pricing-Modal/PricingModal.jsx",["1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396"],"import classes from \"./PricingModal.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nimport PaypalButton from \"./PaypalButton\";\nimport { ReactComponent as StripeIcon } from \"../../../assets/icon-stripe.svg\";\nimport { saveUserData } from \"../../../renderless/store-data/StoreDataLocal\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\n\nlet stripePromise;\n\nconst getStripe = () => {\n  if (!stripePromise) {\n    stripePromise = loadStripe(process.env.REACT_APP_STRIPE_LIVE_PUBLIC_KEY);\n  }\n  return stripePromise;\n};\n\nconst PricingModal = ({ plan, price, closeModal }) => {\n  const history = useHistory();\n  const {\n    layers,\n    nftLayers,\n    rule,\n    preview,\n    collectionName,\n    sessionId,\n    upgradePlan,\n    proposedPlan,\n    currentPlan,\n    currentUser,\n  } = useContext(GenContext);\n  const [stripeError, setStripeError] = useState(null);\n\n  const initialOptionsPaypal = {\n    \"client-id\": process.env.REACT_APP_PAYPAL_LIVE_CLIENT_ID,\n    currency: \"USD\",\n    intent: \"capture\",\n  };\n\n  const item = {\n    local: {\n      price: \"price_1LPcyWBNj5DiViWrS47kiQgt\",\n      quantity: 1,\n    },\n    test: {\n      price: \"price_1LXs3aFiDLqRMLIX4KmmZYyS\",\n      quantity: 1,\n    },\n    hobby: {\n      price: \"price_1LQrfZFiDLqRMLIXoXqtKhas\",\n      quantity: 1,\n    },\n    pro: {\n      price: \"price_1LQriKFiDLqRMLIX1HBQwggL\",\n      quantity: 1,\n    },\n    agency: {\n      price: \"price_1LQroRFiDLqRMLIXBVqu6fbY\",\n      quantity: 1,\n    },\n    hobbyToPro: {\n      price: \"\",\n      quantity: 1,\n    },\n    hobbyToAgency: {\n      price: \"price_1LS7igFiDLqRMLIXTkWBHspT\",\n      quantity: 1,\n    },\n    proToAgency: {\n      price: \"price_1LS7maFiDLqRMLIXW1GZTDeg\",\n      quantity: 1,\n    },\n  };\n\n  const createOrderHandler = (data, actions) => {\n    // Set up the transaction\n    return actions.order.create({\n      purchase_units: [\n        {\n          amount: {\n            value: price,\n          },\n        },\n      ],\n    });\n  };\n\n  const onApproveHandler = (data, actions) => {\n    // This function captures the funds from the transaction.\n    return actions.order\n      .capture()\n      .then(function (details) {\n        // This function shows a transaction success message to your buyer.\n        handleClick();\n      })\n      .catch((error) => {\n        console.log(error);\n        history.push(\"/create/session/pricing/failed\");\n        handleClose();\n      });\n  };\n\n  const checkoutOptions = {\n    lineItems: [item[\"test\"]], //replace test with plan. plan is a variable name\n    mode: \"payment\",\n    successUrl: `${window.location.origin}/create/session/create`,\n    cancelUrl: `${window.location.origin}/create/session/pricing/failed`,\n  };\n\n  const redirectToCheckout = async () => {\n    console.log(\"redirectToCheckout\");\n    saveUserData({\n      layers,\n      nftLayers,\n      rule,\n      preview,\n      collectionName,\n      sessionId,\n      upgradePlan,\n      proposedPlan,\n      currentPlan,\n      currentUser,\n    });\n    const stripe = await getStripe();\n    console.log(\"Got stripe\");\n    const res = await stripe.redirectToCheckout(checkoutOptions);\n    console.log(\"Stripe checkout error\", res);\n\n    if (res.error) setStripeError(res.error.message);\n  };\n\n  if (stripeError) alert(stripeError);\n\n  const handleClick = () => {\n    history.push(\"/create/session/create\");\n    handleClose();\n  };\n\n  const handleClose = () => {\n    closeModal();\n  };\n\n  return (\n    <div className={`${classes.container} ${plan && classes.active}`}>\n      <div className={classes.wrapper}>\n        <CloseIcon onClick={handleClose} className={classes.closeBtn} />\n        <div className={classes.content}>\n          <h1>Choose a payment method</h1>\n          <div className={classes.methodContainer}>\n            <PayPalScriptProvider options={initialOptionsPaypal}>\n              <PaypalButton createOrder={createOrderHandler} onApprove={onApproveHandler} />\n            </PayPalScriptProvider>\n            <div onClick={redirectToCheckout} className={classes.stripeBtn}>\n              <StripeIcon className={classes.stripeIcon} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PricingModal;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/create/Progress-Bar/ProgressBar.jsx",["1397","1398","1399","1400","1401"],"import { useEffect, useState, useContext } from \"react\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport classes from \"./ProgressBar.module.css\";\nimport { ReactComponent as CloudIcon } from \"../../../assets/icon-cloud.svg\";\n\nconst ProgressBar = () => {\n  const [counter, setCounter] = useState({ count: 1, percentageCount: 100 });\n  const { actionProgress } = useContext(GenContext);\n\n  useEffect(() => {\n    const { totalCount, resetCount } = actionProgress;\n    if (totalCount) {\n      setCounter((counter) => {\n        let percentageCount = (counter.count / totalCount) * 100;\n        let count = counter.count + 1;\n        return { count, percentageCount: parseInt(percentageCount) };\n      });\n    } else if (resetCount) {\n      setCounter({ count: 1, percentageCount: 100 });\n    }\n  }, [actionProgress]);\n\n  return (\n    <div className={classes.container}>\n      <CloudIcon /> {counter.count > 1 ? `${counter.percentageCount}%` : \"saved\"}\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/graphql/querries/getCollections.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/minter/minter-script.js",["1402","1403","1404","1405","1406"],"import {\n  mintSingleToAlgo,\n  mintSingleToPoly,\n  mintToAlgo,\n  mintToCelo,\n  mintToPoly,\n  mintToAurora,\n  mintSingleToCelo,\n  mintSingleToAurora,\n  mintSingleToCeloNFTSTORAGE\n} from \"../../../utils/arc_ipfs\";\n\nexport const handleMint = async (args) => {\n  const { account, chain, dispatch, setNotification, setLoader } = args;\n  if (!account) {\n    return dispatch(\n      setNotification({\n        message: \"connect your wallet and try again.\",\n        type: \"warning\",\n      })\n    );\n  }\n  let url = null;\n  try {\n    if (chain.toLowerCase() === \"algorand\") {\n      url = await mintToAlgo({ ...args });\n    } else if (chain.toLowerCase() === \"celo\") {\n      url = await mintToCelo({ ...args });\n    } else if (chain.toLowerCase() === \"polygon\") {\n      url = await mintToPoly({ ...args });\n    } else if (chain.toLowerCase() === \"aurora\") {\n      url = await mintToAurora({ ...args });\n    } else {\n      dispatch(\n        setNotification({\n          message: \"select a chain and try again.\",\n          type: \"warning\",\n        })\n      );\n    }\n    dispatch(setLoader(\"\"));\n    return url;\n  } catch (error) {\n    console.error(\"error: ==========>\", error);\n    dispatch(setLoader(\"\"));\n    return {\n      message: \"Minting failed. This might be due to poor or no internet connection\",\n    };\n  }\n};\n\nexport const handleSingleMint = async (args) => {\n  const { account, chain, dispatch, setNotification, setLoader, setClipboard } = args;\n  if (!account) {\n    return dispatch(\n      setNotification({\n        message: \"connect your wallet and try again.\",\n        type: \"warning\",\n      })\n    );\n  }\n  let url = null;\n  try {\n    if (chain.toLowerCase() === \"algorand\") {\n      url = await mintSingleToAlgo({ ...args });\n    } else if (chain.toLowerCase() === \"celo\") {\n      url = await mintSingleToCeloNFTSTORAGE({ ...args }); // here will put my new function. My last was  url = await mintSingleToCelo({ ...args });\n    } else if (chain.toLowerCase() === \"polygon\") {\n      url = await mintSingleToPoly({ ...args });\n    } else if (chain.toLowerCase() === \"aurora\") {\n      url = await mintSingleToAurora({ ...args });\n    } else {\n      dispatch(\n        setNotification({\n          message: \"select a chain and try again.\",\n          type: \"warning\",\n        })\n      );\n    }\n    dispatch(setLoader(\"\"));\n    return url;\n  } catch (error) {\n    console.error(\"error: ==========>\", error);\n    dispatch(setLoader(\"\"));\n    return {\n      message: \"Minting failed. This might be due to poor or no internet connection\",\n    };\n  }\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/profile-dropdown/profileDropdown.jsx",["1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420"],"import classes from \"./profileDropdown.module.css\";\nimport { ReactComponent as SessionIcon } from \"../../assets/icon-session.svg\";\nimport { ReactComponent as SignOutIcon } from \"../../assets/icon-signout.svg\";\nimport { ReactComponent as UpgradeIcon } from \"../../assets/icon-upgrade2.svg\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { logOut } from \"../google-auth/googleAuth.script\";\nimport { setUpgradePlan } from \"../../gen-state/gen.actions\";\n\nconst ProfileDropdown = ({ dropdown, setDropdown, userName }) => {\n  const history = useHistory();\n  const { dispatch, currentPlan } = useContext(GenContext);\n\n  const handleUpgrade = () => {\n    // if (currentPlan !== \"free\") {\n    dispatch(setUpgradePlan(true));\n    // }\n    history.push(\"/create/session/pricing\");\n  };\n\n  const handleLogOut = () => {\n    setDropdown(false);\n    logOut({ currentPlan, dispatch });\n  };\n\n  return (\n    <div className={`${classes.container} ${dropdown && classes.active}`}>\n      <div className={classes.wrapper}>\n        <div className={classes.name}>{userName}</div>\n        {currentPlan !== \"agency\" && (\n          <div onClick={handleUpgrade} className={classes.option}>\n            <UpgradeIcon className={classes.icon} />\n            <div>Upgrade session</div>\n          </div>\n        )}\n        <div onClick={() => history.push(\"/create/session\")} className={classes.option}>\n          <SessionIcon className={classes.icon} />\n          <div>View all sessions</div>\n        </div>\n        <div onClick={handleLogOut} className={classes.option}>\n          <SignOutIcon className={classes.icon} />\n          <div>Sign out</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileDropdown;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/create-guide/create-guide.jsx",["1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434"],"import React, { useEffect, useState, useRef, useContext } from \"react\";\nimport classes from \"./create-guide.module.css\";\nimport rightCtrl from \"../../assets/icon-angle-right.svg\";\nimport leftCtrl from \"../../assets/icon-angle-left.svg\";\nimport blankImage from \"../../assets/blank.png\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { setDidMout } from \"../../gen-state/gen.actions\";\nimport { guide } from \"./create-guide-script\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\n\nconst maxCount = Object.keys(guide).length;\n\nconst CreateGuide = ({ toggleGuide, setGuide }) => {\n  const swipeRef = useRef();\n  const swipeContainer = useRef();\n  const cardRef1 = useRef();\n  const cardRef2 = useRef();\n  const cardRef3 = useRef();\n  const cardRef4 = useRef();\n  const cardRef5 = useRef();\n  const cardRef6 = useRef();\n  const sideRef = useRef();\n  const { dispatch } = useContext(GenContext);\n  const [swipeCount, setSwipeCount] = useState(1);\n  const [swipeWidth, setSwipeWidth] = useState(\"\");\n  const [swipeHeight, setSwipeHeight] = useState(0);\n  const [animate, setAnimate] = useState(false);\n\n  const swipeRight = () => {\n    setSwipeCount((sw) => (sw >= maxCount ? sw : sw + 1));\n    if (swipeCount < maxCount) setAnimate(true);\n  };\n\n  const swipeLeft = () => {\n    setSwipeCount((sw) => (sw <= 1 ? sw : sw - 1));\n    if (swipeCount > 1) setAnimate(true);\n  };\n\n  const handleClose = () => {\n    dispatch(setDidMout(true));\n    setGuide(false);\n    setSwipeCount(1);\n  };\n\n  useEffect(() => {\n    const plays = {\n      1: () => {\n        cardRef1.current.autoplay = true;\n        cardRef1.current.load();\n      },\n      2: () => {\n        cardRef2.current.autoplay = true;\n        cardRef2.current.load();\n      },\n      3: () => {\n        cardRef3.current.autoplay = true;\n        cardRef3.current.load();\n      },\n      4: () => {\n        cardRef4.current.autoplay = true;\n        cardRef4.current.load();\n      },\n      5: () => {\n        cardRef5.current.autoplay = true;\n        cardRef5.current.load();\n      },\n      6: () => {\n        cardRef6.current.autoplay = true;\n        cardRef6.current.load();\n      },\n    };\n\n    plays[swipeCount]();\n  }, [swipeCount]);\n\n  useEffect(() => {\n    swipeRef.current.style.transform = `translateX(-${(swipeCount - 1) * swipeWidth}px)`;\n  }, [swipeCount, swipeWidth]);\n\n  useEffect(() => {\n    cardRef1.current.style.width = `${swipeWidth}px`;\n    cardRef2.current.style.width = `${swipeWidth}px`;\n    cardRef3.current.style.width = `${swipeWidth}px`;\n    cardRef4.current.style.width = `${swipeWidth}px`;\n    cardRef5.current.style.width = `${swipeWidth}px`;\n    cardRef6.current.style.width = `${swipeWidth}px`;\n  }, [swipeWidth]);\n\n  useEffect(() => {\n    const sideVideos = sideRef.current;\n    if (!sideVideos) return;\n    for (let sv of sideVideos) {\n      if (sv.className.includes(\"outer\")) {\n        sv.style.height = `${swipeHeight - 64}px`;\n      } else {\n        sv.style.height = `${swipeHeight - 32}px`;\n      }\n    }\n  }, [swipeHeight]);\n\n  useEffect(() => {\n    const width = swipeContainer.current?.getBoundingClientRect().width;\n    setSwipeWidth(width);\n    // const height = cardRef1.current?.getBoundingClientRect().height;\n    setSwipeHeight(300);\n\n    window.addEventListener(\"resize\", () => {\n      const width = swipeContainer.current?.getBoundingClientRect().width;\n      setSwipeWidth(width);\n      const height = cardRef1.current?.getBoundingClientRect().height;\n      setSwipeHeight(height);\n    });\n\n    const sideVideos = document.querySelectorAll(\".vid\");\n    sideRef.current = sideVideos;\n\n    sideVideos[0].onanimationend = () => {\n      setAnimate(false);\n    };\n  }, [toggleGuide]);\n\n  return (\n    <div className={`${classes.wrapper} ${toggleGuide && classes.active}`}>\n      <div className={classes.mainContainer}>\n        <CloseIcon onClick={handleClose} className={classes.closeBtn} />\n        <div className={classes.heading}>{guide[swipeCount].title}</div>\n\n        <div className={classes.container}>\n          <div className={classes.control}>\n            <img\n              src={leftCtrl}\n              alt=\"\"\n              onMouseDown={swipeLeft}\n              className={`${classes.left} ${swipeCount > 1 && classes.active}`}\n            />\n            <img\n              src={rightCtrl}\n              alt=\"\"\n              onMouseDown={swipeRight}\n              className={`${classes.right} ${swipeCount < maxCount && classes.active}`}\n            />\n          </div>\n          <div\n            className={`vid outer ${classes.leftSideCard} ${classes._2} ${animate && classes.active} ${\n              !guide[swipeCount - 2] && classes.hide\n            }`}\n          >\n            <video src={swipeCount <= 2 ? blankImage : guide[swipeCount - 2].vid} />\n          </div>\n\n          <div\n            className={`vid inner ${classes.leftSideCard} ${animate && classes.active} ${\n              !guide[swipeCount - 1] && classes.hide\n            }`}\n          >\n            <video src={swipeCount <= 1 ? blankImage : guide[swipeCount - 1].vid} />\n          </div>\n\n          <div ref={swipeContainer} className={`${classes.swipeContainer} ${animate && classes.active}`}>\n            <div ref={swipeRef} className={classes.cardContainer}>\n              <video controls src={guide[1].vid} ref={cardRef1} className={classes.card} />\n              <video controls src={guide[2].vid} ref={cardRef2} className={classes.card} />\n              <video controls src={guide[3].vid} ref={cardRef3} className={classes.card} />\n              <video controls src={guide[4].vid} ref={cardRef4} className={classes.card} />\n              <video controls src={guide[5].vid} ref={cardRef5} className={classes.card} />\n              <video controls src={guide[6].vid} ref={cardRef6} className={classes.card} />\n            </div>\n          </div>\n          <div\n            className={`vid inner ${classes.rightSideCard} ${animate && classes.active} ${\n              !guide[swipeCount + 1] && classes.hide\n            }`}\n          >\n            <video src={swipeCount >= maxCount ? blankImage : guide[swipeCount + 1].vid} />\n          </div>\n          <div\n            className={`vid outer ${classes.rightSideCard} ${classes._2} ${animate && classes.active} ${\n              !guide[swipeCount + 2] && classes.hide\n            }`}\n          >\n            <video src={swipeCount >= maxCount - 1 ? blankImage : guide[swipeCount + 2].vid} />\n          </div>\n        </div>\n        <div className={classes.indicatorContainer}>\n          {Array(maxCount)\n            .fill(null)\n            .map((_, idx) => (\n              <div key={idx} className={`${classes.indicator} ${swipeCount === idx + 1 && classes.active}`}>\n                <div />\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateGuide;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Collection-Name-Modal/CollectionNameModal.jsx",["1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452"],"import classes from \"./CollectionNameModal.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { setCollectionName, setLayerAction, setToggleCollectionNameModal } from \"../../../gen-state/gen.actions\";\n\nconst CollectionNameModal = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const { dispatch, collectionName, toggleCollectionNameModal, currentUser, toggleSessionModal, isLoading } =\n    useContext(GenContext);\n\n  const handleChange = (e) => {\n    setError(false);\n    setInputValue(e.target.value);\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (!inputValue) return setError(true);\n    dispatch(setCollectionName(inputValue));\n    dispatch(\n      setLayerAction({\n        type: \"name\",\n      })\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setInputValue(\"\");\n    dispatch(setToggleCollectionNameModal(false));\n  };\n\n  useEffect(() => {\n    if (toggleSessionModal || isLoading || !currentUser) {\n      dispatch(setToggleCollectionNameModal(false));\n    } else if (!collectionName && currentUser) {\n      dispatch(setToggleCollectionNameModal(true));\n    }\n  }, [collectionName, currentUser, toggleSessionModal, isLoading]);\n\n  return (\n    <div className={`${classes.container} ${toggleCollectionNameModal && classes.active}`}>\n      <div className={classes.wrapper}>\n        {/* <CloseIcon onClick={handleClose} className={classes.closeBtn} /> */}\n        <form onSubmit={handleClick} className={classes.content}>\n          <h3>Let’s get cracking!</h3>\n          <h6>Every Collection is Unique</h6>\n          <p>\n            Input any awesome collection name you want and click continue <br /> Don’t worry, you can always change it\n            later.\n          </p>\n          <div className={`${classes.inputContainer} ${error && classes.error}`}>\n            <label> Collection name </label>\n            <input value={inputValue} onChange={handleChange} type=\"text\" placeholder=\"Minority_Drop\" />\n          </div>\n          <div className={`${classes.errorMessage} ${error && classes.error}`}>Enter collection name</div>\n          <button className={`${inputValue && classes.active}`} onClick={handleClick}>\n            Continue\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CollectionNameModal;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Filter/Filter.jsx",["1453","1454","1455","1456","1457"],"import React, { useEffect, useState } from \"react\";\nimport classes from \"./Filter.module.css\";\nimport arrowIconLeft from \"../../../assets/icon-arrow-left.svg\";\nimport arrowIconRight from \"../../../assets/icon-arrow-right.svg\";\nimport filterIcon from \"../../../assets/icon-filter.svg\";\nimport dropdownIcon from \"../../../assets/icon-dropdown.svg\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nconst Filter = ({ attributes, handleFilter, filterToDelete, toggleFilter, handleExploreSetState }) => {\n  const [state, setState] = useState({\n    toggleAttribute: true,\n    toggleLayer: -1,\n    lowestPrice: \"0\",\n    highestPrice: \"0\",\n    filter: {\n      priceRange: { min: 0, max: 0 },\n      onlyListed: true,\n      attributes: [],\n    },\n  });\n\n  const { lowestPrice, highestPrice, toggleAttribute, toggleLayer, filter } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\n  const capitalize = (arr) => arr.charAt(0).toUpperCase() + arr.slice(1); // Capitalize first letter of the word\n  const toPercent = (count, total) => (count >= 0 && total > 0 ? ((100 * count) / total).toFixed(1) : \"NaN\");\n\n  const handleApplyPriceFilter = () => {\n    handleSetState({\n      filter: {\n        ...filter,\n        priceRange: { min: lowestPrice, max: highestPrice },\n      },\n    });\n  };\n\n  const handleStatus = () => {\n    handleSetState({ filter: { ...filter, onlyListed: !filter.onlyListed } });\n  };\n\n  const handleAddToFilterAttribute = (val) => {\n    const strAttributes = JSON.stringify(filter.attributes);\n    const strVal = JSON.stringify(val);\n    if (!strAttributes.includes(strVal)) {\n      handleSetState({\n        filter: { ...filter, attributes: [...filter.attributes, val] },\n      });\n    }\n  };\n\n  const isSelected = (val) => {\n    const res = filter.attributes.find((attr) => JSON.stringify(attr) === JSON.stringify(val));\n    return !!res;\n  };\n\n  const handleFilterAttribute = (val) => {\n    const result = isSelected(val);\n    if (result) {\n      const strVal = JSON.stringify(val);\n      const newAttributes = filter.attributes.filter((attr) => JSON.stringify(attr) !== strVal);\n      handleSetState({ filter: { ...filter, attributes: newAttributes } });\n    } else {\n      handleAddToFilterAttribute(val);\n    }\n  };\n\n  useEffect(() => {\n    handleFilter(filter);\n  }, [filter]);\n\n  useEffect(() => {\n    if (Array.isArray(filterToDelete) && !filterToDelete.length) {\n      handleSetState({ filter: { ...filter, attributes: [] } });\n    } else {\n      const strVal = JSON.stringify(filterToDelete);\n      const newAttributes = filter.attributes.filter((attr) => JSON.stringify(attr) !== strVal);\n      handleSetState({ filter: { ...filter, attributes: newAttributes } });\n    }\n  }, [filterToDelete]);\n\n  return (\n    <>\n      {toggleFilter ? (\n        <aside className={classes.sidebar}>\n          <div onClick={() => handleExploreSetState({ toggleFilter: !toggleFilter })} className={classes.filterHeading}>\n            <div>\n              <img src={filterIcon} alt=\"\" />\n              <span>Filter</span>\n            </div>\n            <img className={classes.leftArrow} src={arrowIconLeft} alt=\"\" />\n          </div>\n          <div className={classes.sideOverflowWrapper}>\n            <Dropdown title=\"Status\">\n              <div className={classes.statusFilter}>\n                <span>Show only listed item</span>\n                <div\n                  onClick={handleStatus}\n                  className={`${classes.toggleButton} ${filter.onlyListed && classes.active}`}\n                >\n                  <div className={classes.toggle} />\n                </div>\n              </div>\n            </Dropdown>\n            <Dropdown title=\"Price\">\n              <div className={classes.priceFilter}>\n                <div className={classes.filterInput}>\n                  <div>\n                    <input\n                      value={lowestPrice}\n                      onChange={(event) => handleSetState({ lowestPrice: event.target.value })}\n                      type=\"number\"\n                    />\n                  </div>\n                  to\n                  <div>\n                    <input\n                      value={highestPrice}\n                      onChange={(event) => handleSetState({ highestPrice: event.target.value })}\n                      type=\"number\"\n                    />\n                  </div>\n                </div>\n                <button onClick={handleApplyPriceFilter}>Apply</button>\n              </div>\n            </Dropdown>\n            <Dropdown title=\"Attribute\">\n              <div className={classes.attributeFilter}>\n                <div className={`${classes.attribute} ${toggleAttribute && classes.active}`}>\n                  {attributes &&\n                    attributes.map((attr, idx) => (\n                      <div key={idx}>\n                        <div\n                          onClick={() =>\n                            handleSetState({\n                              toggleLayer: idx === toggleLayer ? -1 : idx,\n                            })\n                          }\n                          key={idx}\n                          className={classes.layerWrapper}\n                        >\n                          <div>{capitalize(attr.trait_type)}</div>\n                          <div className={`${classes.layerIcon} ${toggleLayer === idx && classes.active}`}>\n                            <div>{attr.value.length}</div>\n                            <img src={dropdownIcon} alt=\"\" />\n                          </div>\n                        </div>\n                        <div className={`${classes.layer} ${toggleLayer === idx && classes.active}`}>\n                          {attr.value.map((val, idx) => (\n                            <div\n                              key={idx}\n                              onClick={() =>\n                                handleFilterAttribute({\n                                  trait_type: attr.trait_type,\n                                  value: val,\n                                  rarity: attr.rarity[idx],\n                                })\n                              }\n                              className={classes.value}\n                            >\n                              <span className={classes.statusIcon}>\n                                {isSelected({\n                                  trait_type: attr.trait_type,\n                                  value: val,\n                                  rarity: attr.rarity[idx],\n                                })\n                                  ? \"+\"\n                                  : \"-\"}\n                              </span>\n                              {/* percentage of each value in an attribute */}\n                              <div className={classes.valuesOfAttr}>\n                                <span>{capitalize(val)}</span>\n                                <span>\n                                  <span style={{ marginRight: \"3px\" }}>{countOccurrences(attr.value, val)}</span>(\n                                  {toPercent(countOccurrences(attr.value, val), attr.value.length)}\n                                  %)\n                                </span>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </Dropdown>\n          </div>\n        </aside>\n      ) : (\n        <aside className={classes.sidebar2}>\n          <img\n            onClick={() => handleExploreSetState({ toggleFilter: !toggleFilter })}\n            className={classes.rightArrow}\n            src={arrowIconRight}\n            alt=\"\"\n          />\n        </aside>\n      )}\n    </>\n  );\n};\n\nexport default Filter;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Menu/Menu.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Header/Header.jsx",["1458"],"import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport Skeleton from \"react-loading-skeleton\";\nimport classes from \"./Header.module.css\";\nimport listIcon from \"../../../assets/icon-list.svg\";\nimport stackIcon from \"../../../assets/icon-stack.svg\";\nimport tradeIcon from \"../../../assets/icon-trade.svg\";\nimport Copy from \"../../../components/copy/copy\";\nimport supportedChains from \"../../../utils/supportedChains\";\nimport { readUserProfile } from \"../../../utils/firebase\";\n\nconst Header = ({ collection, getHeight, loadedChain }) => {\n  const domMountRef = useRef(false);\n  const headerRef = useRef(null);\n  const [explorerLink, setExplorerLink] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [state, setState] = useState({\n    dollarPrice: 0,\n  });\n  const { dollarPrice } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n  const { name, owner, price, imageUrl, numberOfNfts, description, nfts } = collection;\n  const getUsdValue = () => {\n    if (loadedChain) {\n      axios\n        .get(`https://api.coingecko.com/api/v3/simple/price?ids=${supportedChains[loadedChain].id}&vs_currencies=usd`)\n        .then((res) => {\n          const value = Object.values(res.data)[0].usd;\n          handleSetState({ dollarPrice: value * price });\n        });\n    }\n  };\n  const viewOnExplorer = () => {\n    if (loadedChain && loadedChain !== 4160) {\n      return setExplorerLink(`${supportedChains[loadedChain]?.explorer}/${owner}`);\n    }\n    if (process.env.REACT_APP_ENV_STAGING === \"false\") {\n      return setExplorerLink(`https://algoexplorer.io/address/${owner}`);\n    }\n    return setExplorerLink(`https://testnet.algoexplorer.io/address/${owner}`);\n  };\n\n  useEffect(() => {\n    if (owner)\n      readUserProfile(owner).then((data) => {\n        if (data) setUsername(data.username);\n      });\n  }, [owner]);\n  useEffect(() => {\n    getUsdValue();\n    viewOnExplorer();\n  }, [price, loadedChain]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      if (domMountRef.current) {\n        const res = headerRef.current?.getBoundingClientRect().height;\n        getHeight(res);\n      } else {\n        domMountRef.current = true;\n      }\n    });\n    getHeight(500);\n  }, []);\n\n  return (\n    <header ref={headerRef} className={classes.container}>\n      <div className={classes.wrapper}>\n        {imageUrl ? (\n          <img\n            className={classes.imageContainer}\n            onError={({ currentTarget }) => {\n              currentTarget.onerror = null; // prevents looping\n              currentTarget.src = imageUrl;\n            }}\n            src={imageUrl}\n            alt=\"asset\"\n          />\n        ) : (\n          <div className={classes.imageLoadingContainer}>\n            <Skeleton count={1} height={200} />\n          </div>\n        )}\n        <div className={classes.collectionName}>{name}</div>\n        <div className={classes.creator}>\n          {owner ? (\n            <div className={classes.ownerDetails}>\n              <div>\n                Created by\n                <span className={classes.address}>\n                  <Copy\n                    message={owner}\n                    placeholder={\n                      username ||\n                      (owner && `${owner.substring(0, 5)}...${owner.substring(owner.length - 4, owner.length)}`)\n                    }\n                  />\n                </span>\n              </div>\n              <a className={classes[\"link-explorer\"]} rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink}>\n                View on block explorer\n              </a>\n            </div>\n          ) : (\n            <div className={classes.skeleton}>\n              <Skeleton count={1} height={16} />\n            </div>\n          )}\n        </div>\n        <div className={classes.description}>\n          {description || (\n            <div className={classes.skeleton}>\n              <Skeleton count={2} height={20} />\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={classes.details}>\n        <div className={classes.detailContentWrapper}>\n          <div className={classes.floorPrice}>\n            <div className={classes.floor}>FLOOR PRICE</div>\n\n            <div className={classes.price}>\n              <span style={{ marginRight: 3 }}>{price}</span>\n              <span className={classes.chain}>\n                {supportedChains[loadedChain]?.sybmol} ({dollarPrice.toFixed(2)} USD)\n              </span>\n            </div>\n          </div>\n          <img src={stackIcon} alt=\"\" />\n        </div>\n\n        <div className={classes.detailContentWrapper}>\n          <div className={classes.floorPrice}>\n            <div className={classes.floor}>TOTAL VOLUME TRADED</div>\n            <div className={classes.price}>0</div>\n          </div>\n          <img src={tradeIcon} alt=\"\" />\n        </div>\n\n        <div className={classes.detailContentWrapper}>\n          <div className={classes.floorPrice}>\n            <div className={classes.floor}>TOTAL LIST COUNT</div>\n            <div className={classes.price}>{numberOfNfts}</div>\n          </div>\n          <img src={listIcon} alt=\"\" />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/Capture/Capture.jsx",["1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472"],"import React, { useRef, useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLongPress } from \"use-long-press\";\nimport axios from \"axios\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n// import Webcam from \"react-webcam\";\nimport { Camera } from \"./Camera\";\nimport classes from \"./Capture.module.css\";\nimport useTimer from \"./useTimer\";\nimport WebcamEnable from \"../webcam-enable/webcamEnable\";\n// icons\nimport { ReactComponent as IconCapture } from \"../../../assets/capture-btn.svg\";\nimport { ReactComponent as CameraSwitch } from \"../../../assets/camera-switch.svg\";\nimport { ReactComponent as ArrowLeft } from \"../../../assets/arrow-left-stretched.svg\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { setZip, setLoader, setNotification } from \"../../../gen-state/gen.actions\";\n\n// record button\nconst RecordBtn = ({ seconds }) => (\n  <div className={classes.RecordBtnWrapper}>\n    <CircularProgressbar\n      value={seconds / 500}\n      maxValue={1}\n      strokeWidth={12}\n      styles={buildStyles({\n        // Rotation of path and trail, in number of turns (0-1)\n        rotation: 0.25,\n\n        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n        strokeLinecap: \"round\",\n\n        // Text size\n        textSize: \"16px\",\n\n        // How long animation takes to go from one percentage to another, in seconds\n        pathTransitionDuration: 0.5,\n\n        // Colors\n        pathColor: \"#FF3236\",\n        trailColor: \"#ffffff\",\n      })}\n    />\n    <div className={classes.recordBtn} />\n  </div>\n);\n\nconst Capture = () => {\n  const history = useHistory();\n\n  const webcamRef = useRef();\n  const mediaRecorderRef = useRef();\n  const webcamWrapper = useRef();\n\n  const [state, setState] = useState({\n    toggle: false,\n    // each type file\n    img: \"\",\n    gif: \"\",\n    video: \"\",\n    // current file to mint\n    currenFile: \"\",\n    activeFile: \"gif\",\n    // User or Environment camera\n    webcam: \"environment\",\n    // video size\n    width: \"100%\",\n    height: \"100%\",\n    // genrate GIF loading status\n    gifGenrating: false,\n    webcamCurrentType: \"picture\",\n    trackRecord: false,\n    videoDuration: 0,\n  });\n  // video capture\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [capturing, setCapturing] = useState(false);\n  const [numberOfCameras, setNumberOfCameras] = useState(0);\n  const {\n    toggle,\n    img,\n    webcam,\n    width,\n    height,\n    gif,\n    video,\n    currenFile,\n    activeFile,\n    gifGenrating,\n    webcamCurrentType,\n    trackRecord,\n    videoDuration,\n  } = state;\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n  const { dispatch } = useContext(GenContext);\n  // update the video to fit different screen\n  const isLandscape = height <= width;\n  const ratio = isLandscape ? width / height : height / width;\n  const videoConstraints = {\n    facingMode: webcam,\n    width,\n    height,\n    // ...(ratio && { ratio }),\n  };\n  const updateVideoSize = () => {\n    const newWidth = webcamWrapper.current?.clientWidth;\n    const newHeight = webcamWrapper.current?.clientHeight;\n    handleSetState({ height: newHeight, width: newWidth });\n  };\n  useEffect(() => {\n    updateVideoSize();\n    window.addEventListener(\"resize\", updateVideoSize);\n  }, [webcamWrapper.current?.clientWidth]);\n\n  useEffect(() => {}, [webcamRef, capturing]);\n\n  // switch camera from front to rear for mobile view\n  const switchCameraToRear = () => {\n    const webcamStatus = webcam === \"user\" ? \"environment\" : \"user\";\n    handleSetState({ webcam: webcamStatus });\n    webcamRef.current.switchCamera();\n  };\n\n  // enable webcam\n  const getVideo = () => {\n    handleSetState({\n      toggle: true,\n    });\n  };\n  const cancel = () => {\n    history.push(\"/mint/1of1\");\n  };\n\n  // Picture Handler\n  const takePicture = () => {\n    const imageSrc = webcamRef.current.takePhoto();\n    handleSetState({ img: imageSrc });\n  };\n  const downloadImg = () => {\n    const ImageBase64 = img.split(\"data:image/png;base64,\")[1];\n    const a = document.createElement(\"a\"); // Create <a>\n    a.href = `data:image/png;base64,${ImageBase64}`; // Image Base64 Goes here\n    a.download = \"Image.png\"; // File name Here\n    a.click(); // Downloaded file\n  };\n  function getFileFromBytes(string64, fileName, type) {\n    // const trimmedString = string64.split(\",\")[1];\n    // const imageContent = atob(trimmedString);\n    const buffer = new ArrayBuffer(string64.length);\n    const view = new Uint8Array(buffer);\n\n    for (let n = 0; n < string64.length; n++) {\n      view[n] = string64.charCodeAt(n);\n    }\n    const blob = new Blob([buffer], { type });\n    return new File([blob], fileName, { lastModified: new Date().getTime(), type });\n  }\n  function getFileFromBase64(string64, fileName, type) {\n    const trimmedString = string64.split(\",\")[1];\n    const imageContent = atob(trimmedString);\n    const buffer = new ArrayBuffer(imageContent.length);\n    const view = new Uint8Array(buffer);\n    for (let n = 0; n < imageContent.length; n++) {\n      view[n] = imageContent.charCodeAt(n);\n    }\n    const blob = new Blob([buffer], { type });\n    return new File([blob], fileName, { lastModified: new Date().getTime(), type });\n  }\n\n  // Genrate GIF\n  async function getBase64(file) {\n    // console.log(duration);\n    dispatch(setLoader(\"Generating GIF\"));\n    handleSetState({\n      gifGenrating: true,\n    });\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      axios\n        .post(\"https://video-to-gif-converter.herokuapp.com/\", { url: reader.result, duration: videoDuration / 100 })\n        .then((res) => {\n          const gifFile = getFileFromBytes(res.data.data, \"Image.gif\", \"image/gif\");\n          handleSetState({ gif: gifFile, currenFile: gifFile });\n\n          dispatch(setLoader(\"\"));\n          dispatch(\n            setNotification({\n              message: \"GIF generated successfully\",\n              type: \"success\",\n            })\n          );\n          handleSetState({\n            gifGenrating: false,\n          });\n          return res.data.data;\n        })\n        .catch(() => {\n          dispatch(setLoader(\"\"));\n          dispatch(\n            setNotification({\n              message: `Something Went Wrong, Please Try Again`,\n              type: \"error\",\n            })\n          );\n        });\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n  }\n\n  // stopwatch, set to 8 sec\n  const { seconds, start, stop } = useTimer();\n\n  // Record Handles\n  const handleDataAvailable = React.useCallback(\n    ({ data }) => {\n      if (data.size > 0) {\n        setRecordedChunks((prev) => prev.concat(data));\n      }\n    },\n    [setRecordedChunks]\n  );\n\n  const handleStartCaptureClick = React.useCallback(\n    (event) => {\n      event.returnValue = false;\n      start();\n      setCapturing(true);\n      const stream = webcamRef.current.getStream();\n      try {\n        mediaRecorderRef.current = new MediaRecorder(stream, { mimeType: \"video/webm\" });\n      } catch (err1) {\n        try {\n          // Fallback for iOS\n          mediaRecorderRef.current = new MediaRecorder(stream, { mimeType: \"video/mp4;codecs:h264\" });\n        } catch (err2) {\n          // If fallback doesn't work either. Log / process errors.\n          console.error({ err1 });\n          console.error({ err2 });\n        }\n      }\n      // mediaRecorderRef.current = new MediaRecorder(webcamRef.current.getStream(), {\n      //   mimeType: \"video/webm\",\n      // });\n      mediaRecorderRef.current.addEventListener(\"dataavailable\", handleDataAvailable);\n      mediaRecorderRef.current.start();\n    },\n    [webcamRef, setCapturing, mediaRecorderRef]\n  );\n\n  const handleDownload = React.useCallback(() => {\n    if (recordedChunks.length) {\n      const type = \"video/mp4\";\n      const blob = new Blob(recordedChunks, {\n        type,\n      });\n      const file = new File([blob], \"video.mp4\", { lastModified: new Date().getTime(), type });\n      getBase64(file);\n      handleSetState({ video: file, currenFile: file });\n      setRecordedChunks([]);\n    }\n  }, [recordedChunks]);\n\n  useEffect(() => {\n    if (recordedChunks.length) {\n      handleDownload();\n    }\n  }, [recordedChunks]);\n\n  const handleStopCaptureClick = React.useCallback(() => {\n    stop();\n    mediaRecorderRef.current.stop();\n    setCapturing(false);\n  }, [mediaRecorderRef, webcamRef, setCapturing]);\n\n  const callback = () => {\n    const time = seconds;\n    handleSetState({\n      videoDuration: time,\n    });\n    handleStopCaptureClick();\n  };\n\n  const bind = useLongPress(callback, {\n    onStart: handleStartCaptureClick,\n    onCancel: callback,\n    threshold: 5000,\n    captureEvent: true,\n    cancelOnMovement: false,\n    detect: \"both\",\n  });\n\n  const updpateMainBtn = () => {\n    if (webcamCurrentType === \"picture\") {\n      handleSetState({\n        webcamCurrentType: \"record\",\n      });\n    } else {\n      handleSetState({\n        webcamCurrentType: \"picture\",\n      });\n    }\n  };\n\n  const continueToMint = () => {\n    let name;\n    let file;\n    if (img) {\n      name = \"Image\";\n      const result = getFileFromBase64(img, name, \"image/png\");\n      file = result;\n    } else if (activeFile === \"gif\") {\n      file = currenFile;\n      name = \"Short\";\n    } else {\n      file = currenFile;\n      name = \"video\";\n    }\n    dispatch(\n      setZip({\n        name,\n        file,\n      })\n    );\n\n    history.push(\"/mint/1of1\");\n  };\n\n  // file type switch\n  // useEffect(() => {\n  //   if (activeFile === \"gif\") {\n  //     if (gif) {\n  //       handleSetState({ currenFile: gif });\n  //     } else {\n  //       getBase64(currenFile);s\n  //     }\n  //   } else if (activeFile === \"mp4\") {\n  //     handleSetState({\n  //       currenFile: video,\n  //     });\n  //   }\n  // }, [activeFile]);\n  return (\n    <div className={`${classes.container}`}>\n      <WebcamEnable toggle={toggle} getVideo={getVideo} />\n\n      {img || gif || video ? (\n        <div className={classes.cameraWrapper}>\n          <div\n            onClick={() => {\n              handleSetState({\n                img: \"\",\n                gif: \"\",\n                video: \"\",\n                activeFile: \"mp4\",\n              });\n            }}\n            className={classes.retake}\n          >\n            <ArrowLeft />\n          </div>\n\n          {gif ? (\n            <img className={`${classes.cameraShot}`} src={URL.createObjectURL(gif)} alt=\"camera-shot\" />\n          ) : video ? (\n            <video src={URL.createObjectURL(video)} autoPlay className={`${classes.cameraShot}`} loop />\n          ) : (\n            <img className={`${classes.cameraShot}`} src={img} alt=\"camera-shot\" />\n          )}\n          <div className={classes.imgBtn}>\n            {/* {!img && (\n              <div className={classes.typeSelcet}>\n                <div\n                  onClick={() => handleSetState({ activeFile: \"gif\" })}\n                  className={activeFile === \"gif\" && classes.active}\n                >\n                  <div className={classes.rdaioBtn}>\n                    <div />\n                  </div>\n                  <p>GIF</p>\n                </div>\n                <div\n                  onClick={() => handleSetState({ activeFile: \"mp4\" })}\n                  className={activeFile === \"mp4\" && classes.active}\n                >\n                  <div className={classes.rdaioBtn}>\n                    <div />\n                  </div>\n                  <p>MP4</p>\n                </div>\n              </div>\n            )} */}\n            {/* <a onClick={downloadImg}>Download photo</a> */}\n            <div className={`${classes.mintBtn} ${gifGenrating && classes.disabled}`} onClick={continueToMint}>\n              Continue\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className={classes.videoContainer}>\n          <div className={classes.videoWrapper} ref={webcamWrapper}>\n            {toggle ? (\n              <Camera\n                ref={webcamRef}\n                aspectRatio=\"cover\"\n                numberOfCamerasCallback={setNumberOfCameras}\n                errorMessages={{\n                  noCameraAccessible:\n                    \"No camera device accessible. Please connect your camera or try a different browser.\",\n                  permissionDenied: \"Permission denied. Please refresh and give camera permission.\",\n                  switchCamera:\n                    \"It is not possible to switch camera to different one because there is only one video device accessible.\",\n                  canvas: \"Canvas is not supported.\",\n                }}\n              />\n            ) : (\n              // <Webcam\n              //   ref={webcamRef}\n              //   audio={false}\n              //   screenshotFormat=\"image/png\"\n              //   style={{\n              //     objectFit: \"cover\",\n              //   }}\n              //   minScreenshotHeight={videoConstraints.width}\n              //   minScreenshotWidth={videoConstraints.height}\n              //   width={videoConstraints.width}\n              //   height={videoConstraints.height}\n              //   videoConstraints={videoConstraints}\n              // />\n              <div className={classes.videoOFF} />\n            )}\n            <div className={classes.enableContainer}> </div>\n          </div>\n          <div className={classes.closeBtn} onClick={cancel}>\n            <CloseIcon />\n          </div>\n          <div className={classes.btnWrapper}>\n            {webcamCurrentType !== \"picture\" ? (\n              <div onClick={updpateMainBtn} className={classes.holdBtn}>\n                <IconCapture />\n              </div>\n            ) : (\n              <div onClick={updpateMainBtn} className={classes.holdBtn}>\n                <RecordBtn seconds={seconds} />\n              </div>\n            )}\n            {webcamCurrentType === \"picture\" ? (\n              <div onClick={takePicture} className={`${classes.captureBtn} ${classes.active}`}>\n                <IconCapture />\n              </div>\n            ) : (\n              <div {...bind()} className={`${classes.holdBtn} ${classes.active}`}>\n                <RecordBtn seconds={seconds} webcamCurrentType={webcamCurrentType} />\n              </div>\n              // <div\n              //   onClick={takePicture}\n              //   className={`${classes.holdBtn} ${classes.active} ${trackRecord ? classes.recording : \"\"}`}\n              // >\n              //   <RecordBtn seconds={seconds} />\n              // </div>\n            )}\n            <div className={classes.uploadBtn}>\n              <CameraSwitch onClick={() => switchCameraToRear()} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Capture;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/supportedChains.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Login-Modal/LoginModal.jsx",["1473","1474","1475","1476","1477","1478","1479","1480","1481"],"import { useContext, useState } from \"react\";\nimport classes from \"./LoginModal.module.css\";\nimport { ReactComponent as FolderIcon } from \"../../../assets/icon-folder.svg\";\nimport { ReactComponent as GoogleIcon } from \"../../../assets/icon-google.svg\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { signInWithGoogle } from \"../../google-auth/googleAuth.script\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { setCollectionName } from \"../../../gen-state/gen.actions\";\n\nconst LoginModal = () => {\n  const { dispatch, isUser, collectionName } = useContext(GenContext);\n  const [toggleModal, setToggleModal] = useState(true);\n\n  const handleSignIn = () => {\n    signInWithGoogle({ dispatch });\n  };\n\n  const handleClose = () => {\n    setToggleModal(false);\n    if (!collectionName) {\n      dispatch(setCollectionName(\"New Collection\"));\n    }\n  };\n\n  return (\n    <div className={`${classes.container} ${isUser === \"false\" && toggleModal && classes.active}`}>\n      <div className={classes.card}>\n        <CloseIcon onClick={handleClose} className={classes.closeBtn} />\n        <div className={classes.heading}>\n          Sign in/Sign up in to continue using <span>Genadrop</span>\n        </div>\n        <FolderIcon className={classes.logoHead} />\n        <div onClick={handleSignIn} className={classes.signinBtn}>\n          <GoogleIcon />\n          <div>sign in with google</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginModal;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/ProfileImgOverlay/ProfileImgOverlay.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/description/collection-description.jsx",["1482","1483","1484","1485","1486","1487","1488","1489"],"import React, { useContext, useEffect, useRef } from \"react\";\nimport { setImageQuality, setOverlay, setMintAmount, setToggleUpgradeModal } from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport CollectionDetails from \"../details/collection-details\";\nimport classes from \"./collection-description.module.css\";\nimport CollectionPreview from \"../preview/collection-preview\";\n// import GenadropToolTip from \"../Genadrop-Tooltip/GenadropTooltip\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as PreviewIcon } from \"../../assets/icon-preview.svg\";\nimport { handleGenerate } from \"./collection-description-script\";\nimport { plans } from \"../../pages/Pricing/Pricing.script\";\n\nconst CollectionDescription = () => {\n  const {\n    layers,\n    nftLayers,\n    mintAmount,\n    dispatch,\n    combinations,\n    rule,\n    isRule,\n    collectionName,\n    imageQuality,\n    currentPlan,\n  } = useContext(GenContext);\n  const canvasRef = useRef(null);\n  const [state, setState] = useState({\n    selectInputValue: 0.5,\n    amountInputValue: \"\",\n  });\n  const { selectInputValue, amountInputValue } = state;\n\n  const generateProps = {\n    isRule,\n    rule,\n    mintAmount,\n    combinations,\n    layers,\n    collectionName,\n    dispatch,\n    canvasRef,\n    imageQuality,\n  };\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  const handleSelectChange = (e) => {\n    handleSetState({ selectInputValue: e.target.value });\n    dispatch(setImageQuality(parseInt(e.target.value)));\n  };\n\n  const handleAmountChange = (e) => {\n    handleSetState({ amountInputValue: e.target.value });\n  };\n\n  const handleGenerateClick = () => {\n    if (parseInt(amountInputValue) > Number(plans[currentPlan].amount)) {\n      dispatch(setToggleUpgradeModal(true));\n      return;\n    }\n    dispatch(setMintAmount(parseInt(amountInputValue)));\n    handleGenerate({ ...generateProps, mintAmount: parseInt(amountInputValue) });\n  };\n\n  useEffect(() => {\n    dispatch(setOverlay(false));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (combinations) {\n      dispatch(setMintAmount(combinations - rule.length ? parseInt(combinations - rule.length) : 0));\n    }\n  }, [combinations]);\n\n  const ripple = window.sessionStorage.ripple;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.preview_details}>\n        <div className={classes.previewWrapper}>\n          <CollectionPreview />\n        </div>\n        <div className={classes.detailsWrapper}>\n          <CollectionDetails />\n        </div>\n      </div>\n\n      <div className={classes.sectionHeading}>Generate</div>\n      <div className={classes.combinations_amount}>\n        <div className={classes.combinations}>\n          <div className={classes.title}>\n            <span>Combinations</span>\n            {/* <GenadropToolTip content={\"The maximum number of arts the uploaded assets can generate\"} fill=\"#3d3d3d\" /> */}\n          </div>\n          <div className={classes.count}>{combinations - rule.length}</div>\n        </div>\n\n        <div className={classes.amount}>\n          <div htmlFor=\"amount to generate\" className={classes.title}>\n            <span>Amount to Generate</span>\n          </div>\n          <input\n            className={classes.amountInput}\n            type=\"number\"\n            min=\"0\"\n            max={combinations}\n            value={amountInputValue}\n            onChange={handleAmountChange}\n            placeholder=\"Eg: 1000\"\n          />\n        </div>\n      </div>\n\n      <div className={classes.generateContainer}>\n        <div className={classes.generateSettings}>\n          <label htmlFor=\"\">Choose image quality: </label>\n          <div className={classes.wrapper}>\n            <select value={selectInputValue} onChange={handleSelectChange}>\n              <option value={1}>High</option>\n              <option value={0.5}>Medium</option>\n              <option value={0.2}>Low</option>\n            </select>\n            <span className={classes.format}>PNG</span>\n          </div>\n        </div>\n        <div className={classes.btnContainer}>\n          {nftLayers.length ? (\n            <div\n              onClick={() => (window.sessionStorage.ripple = true)}\n              className={`${classes.previewBtn} ${!ripple && classes.active}`}\n            >\n              <Link to={\"/preview\"}>\n                <PreviewIcon className={classes.previewIcon} />\n              </Link>\n            </div>\n          ) : null}\n          <div onClick={handleGenerateClick} className={`${classes.generateBtn} ${combinations && classes.active}`}>\n            Generate Collection\n          </div>\n        </div>\n      </div>\n      <canvas style={{ display: \"none\" }} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default CollectionDescription;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/renderless/fetch-data/fetchUserGraphData.js",["1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504"],"import {\n  GET_CELO_GRAPH_COLLECITONS,\n  GET_CELO_NFT,\n  GET_GRAPH_NFT,\n  GET_USER_COLLECTIONS,\n  GET_USER_NFT,\n} from \"../../graphql/querries/getCollections\";\nimport {\n  getCeloGraphNft,\n  getGraphCollection,\n  getGraphCollections,\n  getGraphNft,\n  getTransactions,\n  getUserGraphNft,\n} from \"../../utils\";\nimport { auroraClient, celoClient, polygonClient } from \"../../utils/graphqlClient\";\n\nexport const polygonUserData = async (address) => {\n  const { data: polygonData, error: polygonError } = await polygonClient\n    .query(GET_GRAPH_NFT, { id: address })\n    .toPromise();\n  if (polygonError) return;\n  let trHistory;\n  let polygonResult = [];\n  if (polygonData?.nft !== null) {\n    polygonResult = await getGraphNft(polygonData?.nft);\n    trHistory = await getTransactions(polygonData?.nft?.transactions);\n    trHistory.find((t) => {\n      if (t.type === \"Minting\") t.price = polygonResult[0].price;\n    });\n  }\n  return [polygonResult[0], trHistory];\n};\n\nexport const getPolygonNFTToList = async (address, nftId) => {\n  const { data, error: polygonError } = await polygonClient.query(GET_USER_NFT, { id: address }).toPromise();\n  if (polygonError) return;\n  const polygonBoughtNft = await getUserGraphNft(data?.user?.nfts, address);\n  const nft = polygonBoughtNft.filter((NFT) => NFT.tokenID === nftId)[0];\n  return nft;\n};\n\nexport const getPolygonCollectedNFTs = async (address) => {\n  const { data, error: polygonError } = await polygonClient.query(GET_USER_NFT, { id: address }).toPromise();\n  if (polygonError) return;\n  const polygonBoughtNft = await getUserGraphNft(data?.user?.nfts, address);\n  return polygonBoughtNft;\n};\n\nexport const getCeloNFTToList = async (address, nftId) => {\n  const { data, error: celoError } = await celoClient.query(GET_USER_NFT, { id: address }).toPromise();\n  if (celoError) return;\n  const celoBoughtNft = await getUserGraphNft(data?.user?.nfts, address);\n  const nft = celoBoughtNft.filter((NFT) => NFT.tokenID === nftId)[0];\n  return nft;\n};\n\nexport const getCeloCollectedNFTs = async (address) => {\n  const { data, error: celoError } = await celoClient.query(GET_USER_NFT, { id: address }).toPromise();\n  if (celoError) return;\n  const celoCollectedNfts = await getUserGraphNft(data?.user?.nfts, address);\n  return celoCollectedNfts;\n};\n\nexport const getCeloUserCollections = async (account) => {\n  const { data, error: celoError } = await celoClient.query(GET_USER_COLLECTIONS, { id: account }).toPromise();\n  if (celoError) return;\n  const result = await getGraphCollections(data?.user?.collections);\n  return result;\n};\n\nexport const getPolygonUserCollections = async (account) => {\n  const { data, error: polygonError } = await polygonClient.query(GET_USER_COLLECTIONS, { id: account }).toPromise();\n  if (polygonError) return;\n  const result = await getGraphCollections(data?.user?.collections);\n  return result;\n};\n\nexport const auroraUserData = async (address) => {\n  const { data: auroraData, error: auroraError } = await auroraClient.query(GET_GRAPH_NFT, { id: address }).toPromise();\n  if (auroraError) return;\n  let trHistory;\n  let auroraResult = [];\n  if (auroraData?.nft !== null) {\n    auroraResult = await getGraphNft(auroraData?.nft);\n    trHistory = await getTransactions(auroraData?.nft?.transactions);\n    trHistory.find((t) => {\n      if (t.type === \"Minting\") t.price = auroraResult[0].price;\n    });\n  }\n  return [auroraResult[0], trHistory];\n};\n\nexport const celoUserData = async (address) => {\n  const { data: celoData, error: celoError } = await celoClient.query(GET_CELO_NFT, { id: address }).toPromise();\n  console.log(\"xxxx\", celoData);\n  if (celoError) return;\n  let trHistory;\n  let celoResult = [];\n  if (celoData?.nft !== null) {\n    celoResult = await getCeloGraphNft(celoData?.nft);\n    trHistory = await getTransactions(celoData?.nft?.transactions);\n    trHistory.find((t) => {\n      if (t.type === \"Minting\") t.price = celoResult[0].price;\n    });\n  }\n  return [celoResult[0], trHistory];\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Subscription-Notification/SubscriptionNotification.jsx",["1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522"],"import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { setUpgradePlan } from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./SubscriptionNotification.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\n\nconst SubscriptionNotification = () => {\n  const history = useHistory();\n  const [toggle, setToggle] = useState(false);\n  const { dispatch, currentUser, currentPlan, collectionName } = useContext(GenContext);\n  const _5mins = 1000 * 60 * 500;\n\n  let timerId = null;\n  const counter = () => {\n    if (currentPlan !== \"free\") return;\n    timerId = setTimeout(() => {\n      setToggle(true);\n    }, _5mins);\n  };\n\n  const handleUpgrade = () => {\n    dispatch(setUpgradePlan(true));\n    history.push(\"/create/session/pricing\");\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setToggle(false);\n    clearInterval(timerId);\n    counter();\n  };\n\n  useEffect(() => {\n    if (currentUser && collectionName) {\n      counter();\n    }\n  }, [currentUser, collectionName]);\n\n  return (\n    <div className={`${classes.container} ${toggle && classes.active}`}>\n      <CloseIcon className={classes.closeIcon} onClick={handleClose} />\n      <div className={classes.title}>Upgrade Plan!</div>\n      <div className={classes.description}>\n        You’re using a free plan. Upgrade to auto-save session, download collection, and more..\n      </div>\n      <div className={classes.list}>\n        <CloseIcon className={classes.listIcon} />\n        <div>Auto-save progress</div>\n      </div>\n      <div className={classes.list}>\n        <CloseIcon className={classes.listIcon} />\n        <div>Download collection</div>\n      </div>\n      <div className={classes.list}>\n        <CloseIcon className={classes.listIcon} />\n        <div>More than 2000 art generation</div>\n      </div>\n      <div className={classes.upgradeBtn} onClick={handleUpgrade}>\n        upgrade plan\n      </div>\n    </div>\n  );\n};\n\nexport default SubscriptionNotification;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/overview/collection-overview.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/layerorders/layerorders.jsx",["1523","1524","1525","1526"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { v4 as uuid } from \"uuid\";\nimport classes from \"./layerorders.module.css\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  addLayer,\n  setLayers,\n  setCollectionName,\n  removeLayer,\n  setPrompt,\n  promptDeleteLayer,\n  setCombinations,\n  setLayerAction,\n} from \"../../gen-state/gen.actions\";\nimport Layer from \"../layer/layer\";\nimport { getCombinations, getItemStyle, getListStyle } from \"./layeroders-script\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as AddIcon } from \"../../assets/icon-plus.svg\";\nimport LayerInput from \"./Layer-Input/LayerInput\";\n// import Tooltip from \"./Tooltip/Tooltip\";\nimport { ReactComponent as EditIcon } from \"../../assets/icon-edit.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\n\nconst LayerOrders = ({ isCreateModal }) => {\n  const { layers, dispatch, collectionName, isRule, promptLayer } = useContext(GenContext);\n  const [state, setState] = useState({\n    prompt: false,\n    inputValue: \"\",\n    renameAction: false,\n    activeInput: false,\n    showInfo: true,\n  });\n\n  const { prompt, inputValue, renameAction, activeInput, showInfo } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const onDragEnd = ({ source, destination }) => {\n    if (!destination) return;\n    const newLayers = [...layers];\n    const [removed] = newLayers.splice(source.index, 1);\n    newLayers.splice(destination.index, 0, removed);\n    dispatch(setLayers(newLayers));\n    handleSetState({ inputValue: \"\" });\n    dispatch(\n      setLayerAction({\n        type: \"order\",\n      })\n    );\n  };\n\n  const handleAddLayer = (value) => {\n    if (!value) return;\n    dispatch(\n      addLayer({\n        id: uuid(),\n        traitsAmount: 0,\n        layerTitle: value,\n        traits: [],\n      })\n    );\n    dispatch(\n      setLayerAction({\n        type: \"add\",\n      })\n    );\n  };\n\n  const handleRemoveLayer = (layer) => {\n    dispatch(setPrompt(promptDeleteLayer(layer)));\n  };\n\n  const handleAddClick = () => {\n    !isRule && handleSetState({ prompt: true });\n    window.sessionStorage.isTooltip = \"true\";\n  };\n\n  const handleRename = async (event) => {\n    event.preventDefault();\n    if (!inputValue) return;\n    handleSetState({ renameAction: false });\n    dispatch(setCollectionName(inputValue));\n    dispatch(\n      setLayerAction({\n        type: \"name\",\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (promptLayer) {\n      dispatch(removeLayer(promptLayer));\n      dispatch(promptDeleteLayer(null));\n    }\n  }, [promptLayer]);\n\n  useEffect(() => {\n    dispatch(setCombinations(getCombinations(layers)));\n  }, [layers]);\n\n  useEffect(() => {\n    handleSetState({ inputValue: collectionName });\n  }, [collectionName]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.collectionNameContainer}>\n        <div className={classes.collectionName}>\n          {renameAction ? (\n            <form onSubmit={handleRename}>\n              <input\n                type=\"text\"\n                onChange={(e) => handleSetState({ inputValue: e.target.value })}\n                value={inputValue}\n                placeholder=\"Enter collection name\"\n                autoFocus\n              />\n            </form>\n          ) : (\n            <label>{collectionName}</label>\n          )}\n\n          <div className={classes.editBtn}>\n            {renameAction ? (\n              <MarkIcon onClick={handleRename} className={classes.editIcon} />\n            ) : (\n              <EditIcon onClick={() => handleSetState({ renameAction: true })} className={classes.editIcon} />\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.layerorder}>\n        <div className={classes.layerHeadWrapper}>\n          {showInfo ? (\n            <div className={classes.info}>\n              <p>Please, ensure that background layer is at the bottom, you can drag layers down or up to re-order</p>\n              <CloseIcon onClick={() => handleSetState({ showInfo: false })} className={classes.closeBtn} />\n            </div>\n          ) : null}\n        </div>\n        <div className={classes.listWrapper}>\n          <div className={classes.layer_trait}>\n            <div className={classes.layerHeader}>layer name</div>\n            <div className={classes.traitHeader}>traits</div>\n          </div>\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n              {(provided, snapshot) => (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                  className={`${classes.list} ${showInfo && classes.active}`}\n                >\n                  {layers.map((item, index) => (\n                    <Draggable key={index} draggableId={`${index}`} index={index}>\n                      {(providedProp, snapshotProp) => (\n                        <div\n                          ref={providedProp.innerRef}\n                          {...providedProp.draggableProps}\n                          {...providedProp.dragHandleProps}\n                          style={getItemStyle(snapshotProp.isDragging, providedProp.draggableProps.style)}\n                        >\n                          <Layer\n                            name={item.layerTitle}\n                            id={item.id}\n                            trait={item.traitsAmount}\n                            click={() => handleRemoveLayer(item)}\n                            activeInput={activeInput}\n                            setActiveInput={(input) => handleSetState({ activeInput: input })}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          {prompt ? (\n            <div className={classes.promptWrapper}>\n              <LayerInput\n                handleAddLayer={handleAddLayer}\n                setPrompt={(promptAdded) => handleSetState({ prompt: promptAdded })}\n              />\n            </div>\n          ) : (\n            <div className={classes.addBtnContainer}>\n              {/* <Tooltip isModal={isCreateModal} /> */}\n              <button type=\"button\" className={classes.addBtn} onClick={handleAddClick}>\n                <AddIcon className={classes.addIcon} />\n                Add Layer\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LayerOrders;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Price-dropdown/priceDropdown.jsx",["1527","1528","1529","1530","1531","1532"],"import React, { useState } from \"react\";\nimport classes from \"./priceDropdown.module.css\";\nimport dropdownIcon from \"../../../assets/icon-caret-down.svg\";\n\nconst PriceDropdown = ({ onPriceFilter }) => {\n  const [state, setState] = useState({\n    togglePriceFilter: false,\n    filter: \"low\",\n  });\n\n  const { filter, togglePriceFilter } = state;\n\n  const filters = {\n    low: \"Low to High\",\n    high: \"High to Low\",\n    // txVolume: \"Transaction Volume\",\n    newest: \"Newest\",\n    oldest: \"Oldest\",\n    descAlphabet: \"Z-A\",\n    ascAlphabet: \"A-Z\",\n  };\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const filterPropertyUpdate = (filterProp) => {\n    handleSetState({ filter: filterProp, togglePriceFilter: false });\n    onPriceFilter(filter);\n  };\n  return (\n    <div className={classes.priceDropdown}>\n      <div onClick={() => handleSetState({ togglePriceFilter: !togglePriceFilter })} className={classes.selectedPrice}>\n        Filter\n        <div className={classes.priceInfo}>\n          <span>{filters[filter]}</span>\n          <img src={dropdownIcon} alt=\"\" className={`${classes.dropdownIcon} ${togglePriceFilter && classes.active}`} />\n        </div>\n      </div>\n      <div className={`${classes.dropdown} ${togglePriceFilter && classes.active}`}>\n        {filter != \"low\" && (\n          <div onClick={() => filterPropertyUpdate(\"low\")}>\n            price\n            <div className={classes.priceInfo}>\n              <span>Low to High</span>\n            </div>\n          </div>\n        )}\n        {filter != \"high\" && (\n          <div onClick={() => filterPropertyUpdate(\"high\")}>\n            price\n            <div className={classes.priceInfo}>\n              <span>High to Low</span>\n            </div>\n          </div>\n        )}\n\n        {filter != \"newest\" && (\n          <div onClick={() => filterPropertyUpdate(\"newest\")}>\n            Added\n            <div className={classes.priceInfo}>\n              <span>Newest</span>\n            </div>\n          </div>\n        )}\n        {filter != \"oldest\" && (\n          <div onClick={() => filterPropertyUpdate(\"oldest\")}>\n            Added\n            <div className={classes.priceInfo}>\n              <span>Oldest</span>\n            </div>\n          </div>\n        )}\n        {filter != \"ascAlphabet\" && (\n          <div onClick={() => filterPropertyUpdate(\"ascAlphabet\")}>\n            Alphabet\n            <div className={classes.priceInfo}>\n              <span>A-Z </span>\n            </div>\n          </div>\n        )}\n\n        {filter != \"descAlphabet\" && (\n          <div onClick={() => filterPropertyUpdate(\"descAlphabet\")}>\n            Alphabet\n            <div className={classes.priceInfo}>\n              <span>Z-A</span>\n            </div>\n          </div>\n        )}\n\n        {/* {filter != \"txVolume\" && (\n          <div onClick={() => filterPropertyUpdate(\"txVolume\")}>\n            <div className={classes.priceInfo}>\n              <span>Transaction Volume</span>\n            </div>\n          </div>\n        )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default PriceDropdown;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Search-bar/searchBar.component.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/wallet/wallet-script.js",["1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551"],"import WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { ethers } from \"ethers\";\nimport {\n  setNotification,\n  setProposedChain,\n  setConnector,\n  setChainId,\n  setAccount,\n  setMainnet,\n  setClipboard,\n  setToggleWalletPopup,\n  setSwitchWalletNotification,\n} from \"../../gen-state/gen.actions\";\nimport { chainIdToParams } from \"../../utils/chainConnect\";\nimport blankImage from \"../../assets/blank.png\";\nimport supportedChains from \"../../utils/supportedChains\";\nimport * as WS from \"./wallet-script\";\n\nexport const breakAddress = (address = \"\", width = 6) => {\n  if (address) return `${address.slice(0, width)}...${address.slice(-width)}`;\n};\n\nexport const getConnectedChain = (chainId) => {\n  const c = supportedChains[chainId];\n  if (!c) return blankImage;\n  return c.icon;\n};\n\nexport const getNetworkID = () => {\n  return new Promise(async (resolve) => {\n    const networkId = await window.ethereum.request({ method: \"net_version\" });\n    resolve(Number(networkId));\n  });\n};\n\nexport const initializeConnection = (walletProps) => {\n  const { dispatch, handleSetState, rpc, mainnet } = walletProps;\n  let walletConnectProvider = null;\n\n  if (window.localStorage.walletconnect) {\n    let newRpc = null;\n    let storedProvider = JSON.parse(window.localStorage.walletconnect);\n    if (storedProvider.chainId === 4160) {\n      newRpc = {\n        4160: mainnet ? \"https://node.algoexplorerapi.io\" : \"https://node.testnet.algoexplorerapi.io\",\n      };\n    } else {\n      newRpc = {\n        [storedProvider.chainId]: chainIdToParams[storedProvider.chainId].rpcUrls[0],\n      };\n    }\n    walletConnectProvider = new WalletConnectProvider({\n      rpc: newRpc,\n    });\n    dispatch(setProposedChain(storedProvider.chainId));\n    dispatch(setConnector(walletConnectProvider));\n    handleSetState({ overrideWalletConnect: true });\n    handleSetState({ walletConnectProvider });\n  } else if (rpc) {\n    walletConnectProvider = new WalletConnectProvider({\n      rpc,\n    });\n    handleSetState({ walletConnectProvider });\n  } else if (window.ethereum !== undefined) {\n    WS.updateAccount(walletProps);\n    const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n    dispatch(setConnector(ethereumProvider));\n    const { ethereum } = window;\n    // Subscribe to accounts change\n    ethereum.on(\"accountsChanged\", function (accounts) {\n      WS.updateAccount(walletProps);\n    });\n\n    // Subscribe to chainId change\n    ethereum.on(\"chainChanged\", (chainId) => {\n      const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n      dispatch(setConnector(ethereumProvider));\n      WS.updateAccount(walletProps);\n    });\n    handleSetState({ isMetamask: true });\n    return;\n  } else {\n    handleSetState({ isMetamask: false });\n    return;\n  }\n\n  // Subscribe to accounts change\n  walletConnectProvider.on(\"accountsChanged\", (accounts) => {\n    dispatch(setAccount(accounts[0]));\n    // dispatch(setChainId(walletConnectProvider.chainId));\n  });\n\n  // Subscribe to chainId change\n  walletConnectProvider.on(\"chainChanged\", (chainId) => {\n    dispatch(setChainId(chainId));\n  });\n\n  // Subscribe to session disconnection\n  walletConnectProvider.on(\"disconnect\", (code, reason) => {\n    WS.disconnectWallet(walletProps);\n  });\n};\n\nexport const setNetworkType = ({ dispatch, handleSetState }) => {\n  dispatch(setMainnet(process.env.REACT_APP_ENV_STAGING === \"false\"));\n  handleSetState({ network: process.env.REACT_APP_ENV_STAGING === \"false\" ? \"mainnet\" : \"testnet\" });\n};\n\nexport const connectWithQRCode = async ({ walletConnectProvider, dispatch, supportedChains }) => {\n  let proposedChain = Object.keys(walletConnectProvider.rpc)[0];\n  try {\n    await walletConnectProvider.enable();\n    console.log(\"opopoo\", proposedChain);\n    // if (proposedChain !== String(walletConnectProvider.chainId)) {\n    //   walletConnectProvider.disconnect();\n    //   setTimeout(() => {\n    //     alert(\n    //       `Invalid connection! Please ensure that ${supportedChains[proposedChain].label} network is selected on your scanning wallet`\n    //     );\n    //     window.location.reload();\n    //   }, 100);\n    // }\n    dispatch(setConnector(walletConnectProvider));\n  } catch (error) {\n    console.log(\"error: \", error);\n    dispatch(\n      setNotification({\n        message: \"Connection failed\",\n        type: \"error\",\n      })\n    );\n    dispatch(setProposedChain(null));\n  }\n};\n\nexport const connectWithMetamask = async (walletProps) => {\n  const { dispatch, walletConnectProvider, supportedChains, proposedChain } = walletProps;\n  let res;\n  res = await supportedChains[proposedChain].switch(proposedChain);\n  if (!res) {\n    await WS.disconnectWalletConnectProvider(walletConnectProvider);\n    const activeChain = await WS.getNetworkID();\n    if (activeChain === proposedChain) {\n      WS.updateAccount(walletProps);\n    }\n  } else if (res.message.includes(\"Unrecognized\")) {\n    res = await supportedChains[proposedChain].add(proposedChain);\n    if (!res) {\n      await WS.disconnectWalletConnectProvider(walletConnectProvider);\n    } else {\n      dispatch(\n        setNotification({\n          message: \"Failed to add network\",\n          type: \"error\",\n        })\n      );\n      dispatch(setProposedChain(null));\n    }\n  } else {\n    dispatch(\n      setNotification({\n        message: \"Connection failed\",\n        type: \"error\",\n      })\n    );\n    dispatch(setProposedChain(null));\n  }\n};\n\nexport const initConnectWallet = (walletProps) => {\n  const { dispatch } = walletProps;\n  dispatch(setToggleWalletPopup(true));\n};\n\nexport const connectWallet = async (walletProps) => {\n  const { dispatch, proposedChain, connectionMethod, walletProviderRef, handleSetState, mainnet } = walletProps;\n  if (connectionMethod === \"metamask\") {\n    if (window?.ethereum !== undefined) {\n      await WS.connectWithMetamask(walletProps);\n      const ethereumProvider = new ethers.providers.Web3Provider(window.ethereum);\n      dispatch(setConnector(ethereumProvider));\n    } else {\n      dispatch(setToggleWalletPopup(false));\n      dispatch(\n        setNotification({\n          message: \"You need to install metamask to continue\",\n          type: \"error\",\n        })\n      );\n      dispatch(setClipboard(\"https://metamask.io/\"));\n    }\n  } else if (connectionMethod === \"walletConnect\") {\n    walletProviderRef.current = 2;\n    if (proposedChain === 4160) {\n      handleSetState({\n        rpc: {\n          4160: mainnet ? \"https://node.algoexplorerapi.io\" : \"https://node.testnet.algoexplorerapi.io\",\n        },\n      });\n    } else {\n      handleSetState({\n        rpc: {\n          [proposedChain]: chainIdToParams[proposedChain].rpcUrls[0],\n        },\n      });\n    }\n  }\n};\n\nexport const disconnectWalletConnectProvider = async (walletConnectProvider) => {\n  if (walletConnectProvider?.connected) {\n    try {\n      await walletConnectProvider.disconnect();\n    } catch (error) {\n      console.log(\"error disconneting: \", error);\n    }\n  }\n};\n\nexport const updateAccount = async (walletProps) => {\n  const { dispatch, walletConnectProvider, mainnet } = walletProps;\n  const { ethereum } = window;\n  let [accounts] = await ethereum.request({\n    method: \"eth_accounts\", //eth_accounts should not allow metamask to popup on page load //eth_requestAccounts\n  });\n  let networkId = await ethereum.request({ method: \"net_version\" });\n  await WS.disconnectWalletConnectProvider(walletConnectProvider);\n  const getEnv = supportedChains[networkId] ? mainnet === supportedChains[networkId].isMainnet : false;\n  if (!getEnv) {\n    WS.disconnectWallet(walletProps);\n    dispatch(setSwitchWalletNotification(true));\n    return;\n  }\n  dispatch(setSwitchWalletNotification(false));\n  const isSupported = Object.keys(supportedChains).includes(networkId);\n  if (!isSupported) {\n    WS.disconnectWallet(walletProps);\n    dispatch(setToggleWalletPopup(true));\n  } else {\n    dispatch(setToggleWalletPopup(false));\n    if (!accounts) {\n      [accounts] = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      if (!accounts) {\n        WS.disconnectWallet(walletProps);\n        dispatch(\n          setNotification({\n            message: \"Please connect your site manually from your wallet extension.\",\n            type: \"warning\",\n          })\n        );\n      }\n    } else {\n      dispatch(setChainId(Number(networkId)));\n      dispatch(setAccount(accounts));\n      dispatch(\n        setNotification({\n          message: `Your site is connected to ${supportedChains[networkId].label}`,\n          type: \"success\",\n        })\n      );\n    }\n  }\n};\n\nexport const disconnectWallet = async ({ walletConnectProvider, dispatch, history, pathname, handleSetState }) => {\n  await WS.disconnectWalletConnectProvider(walletConnectProvider);\n  dispatch(setAccount(null));\n  dispatch(setProposedChain(null));\n  dispatch(setChainId(null));\n  handleSetState({ toggleDropdown: false });\n  if (pathname.includes(\"/me\")) {\n    history.push(\"/marketplace\");\n  }\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/popup/popup.component.jsx",["1552","1553","1554"],"import ErrorPopup from \"./error-popup.component\";\nimport classes from \"./popup.module.css\";\nimport SuccessPopup from \"./success-popup.component\";\n\nconst Popup = (props) => {\n  const { popupProps, handleSetState } = props;\n  const { popup, isError } = popupProps;\n\n  return (\n    <div className={`${classes.container} ${popup && classes.active}`}>\n      {isError ? (\n        <ErrorPopup handleSetState={handleSetState} popupProps={popupProps} />\n      ) : (\n        <SuccessPopup handleSetState={handleSetState} popupProps={popupProps} />\n      )}\n    </div>\n  );\n};\n\nexport default Popup;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/collection-preview/collectionPreview.jsx",["1555"],"import React, { useEffect, useState } from \"react\";\nimport classes from \"./collectionPreview.module.css\";\nimport arrowIconLeft from \"../../../assets/icon-arrow-left.svg\";\nimport AttributeOverlay from \"../attribute-overlay/attributeOverlay\";\nimport { updateZip } from \"../collection-single/collection-single-script\";\n\nconst CollectionPreview = ({\n  file,\n  metadata,\n  handleMintSetState,\n  previewSelectMode,\n  collectionProfile,\n  handleSetFileState,\n  zip,\n}) => {\n  const [state, setState] = useState({\n    currentPage: 1,\n    paginate: {},\n    currentPageValue: 1,\n    fileToMetadataMap: {},\n    showAttribute: false,\n    attribute: {},\n  });\n\n  const { currentPage, paginate, currentPageValue, fileToMetadataMap, showAttribute, attribute } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const handlePrev = () => {\n    if (currentPage <= 1) return;\n    handleSetState({ currentPage: currentPage - 1 });\n    document.documentElement.scrollTop = 0;\n  };\n\n  const handleNext = () => {\n    if (currentPage >= Object.keys(paginate).length) return;\n    handleSetState({ currentPage: currentPage + 1 });\n    document.documentElement.scrollTop = 0;\n  };\n\n  const handleGoto = () => {\n    if (currentPageValue < 1 || currentPageValue > Object.keys(paginate).length) return;\n    handleSetState({ currentPage: Number(currentPageValue) });\n    document.documentElement.scrollTop = 0;\n  };\n\n  const handleShowAttribute = (attributes) => {\n    handleSetState({ showAttribute: true, attribute: attributes });\n  };\n\n  useEffect(() => {\n    const countPerPage = 20;\n    const numberOfPages = Math.ceil(file.length / countPerPage);\n    let startIndex = 0;\n    let endIndex = startIndex + countPerPage;\n    const paginateObj = {};\n    for (let i = 1; i <= numberOfPages; i += 1) {\n      paginateObj[i] = file.slice(startIndex, endIndex);\n      startIndex = endIndex;\n      endIndex = startIndex + countPerPage;\n    }\n    handleSetState({ paginate: paginateObj });\n  }, [file]);\n\n  useEffect(() => {\n    const data = [...metadata];\n    const obj = {};\n    file.forEach((f) => {\n      data.forEach((m, idx) => {\n        if (f.name === m.image) {\n          obj[f.name] = { ...m, file: f };\n          data.splice(idx, 1);\n        }\n      });\n    });\n    handleSetState({ fileToMetadataMap: obj });\n  }, []);\n\n  const saveHandler = async () => {\n    await updateZip(zip, collectionProfile.name, handleSetFileState);\n    handleMintSetState({\n      preview: false,\n      previewSelectMode: false,\n      toggleGuide: false,\n      collectionProfile: file[0],\n      profileSelected: true,\n    });\n  };\n  return (\n    <div className={classes.container}>\n      {showAttribute && <AttributeOverlay attribute={attribute} handleSetState={handleSetState} />}\n      <div className={classes.topNav}>\n        <div\n          onClick={() => handleMintSetState({ preview: false, previewSelectMode: false })}\n          className={classes.backBtn}\n        >\n          <img src={arrowIconLeft} alt=\"\" />\n          {/* {previewSelectMode ? \"Select an image\" : \"Back\"} */}\n          Back\n        </div>\n\n        <div className={classes.paginate}>\n          <div onClick={handlePrev} className={`${classes.pageControl} ${classes.prev}`}>\n            prev\n          </div>\n          <div className={classes.pageCount}>\n            {currentPage} of {Object.keys(paginate).length}\n          </div>\n          <div onClick={handleNext} className={`${classes.pageControl} ${classes.next}`}>\n            next\n          </div>\n          <div className={classes.gotoWrapper}>\n            <div onClick={handleGoto} className={`${classes.pageControl} ${classes.goto}`}>\n              goto\n            </div>\n            <input\n              type=\"number\"\n              value={currentPageValue}\n              onChange={(event) => handleSetState({ currentPageValue: event.target.value })}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.display}>\n        {Object.keys(paginate).length\n          ? paginate[currentPage].map((f, idx) => (\n              <div\n                key={idx}\n                className={`${previewSelectMode ? classes.assetWrapperSelect : classes.assetWrapper} ${\n                  collectionProfile.name === f.name && previewSelectMode && classes.assetWrapperActive\n                }`}\n              >\n                <img\n                  onClick={() => (previewSelectMode ? handleMintSetState({ collectionProfile: f }) : \"\")}\n                  src={URL.createObjectURL(f)}\n                  alt=\"\"\n                />\n                {!previewSelectMode && (\n                  <div className={classes.assetOverlay}>\n                    <div className={classes.assetName}>{fileToMetadataMap[f.name].name}</div>\n                    <button\n                      type=\"button\"\n                      onClick={() => handleShowAttribute(fileToMetadataMap[f.name])}\n                      className={classes.attrBtn}\n                    >\n                      View Attributes\n                    </button>\n                  </div>\n                )}\n              </div>\n            ))\n          : null}\n      </div>\n      {previewSelectMode && (\n        <div className={classes.buttonWrapper}>\n          <p onClick={() => handleMintSetState({ preview: false, previewSelectMode: false })}>Cancel</p>\n          <div onClick={saveHandler}>Save</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CollectionPreview;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Genadrop-Tooltip/GenadropTooltip.jsx",["1556","1557","1558","1559","1560","1561"],"import { useRef, useEffect, useState } from \"react\";\n\nimport { ReactComponent as InfoIcon } from \"../../assets/tooltip.svg\";\nimport classes from \"./GenadropTooltip.module.css\";\n\nconst GenadropToolTip = ({ content, fill = \"#3d3d3d\" }) => {\n  const cardRef = useRef(null);\n  const [mouseOver, setMouseOver] = useState(false);\n\n  const adjustTooltip = () => {\n    if (!cardRef.current) return;\n    const { left, right, width } = cardRef.current.getBoundingClientRect();\n    setTimeout(() => {\n      if (left <= 32) {\n        cardRef.current.style.transform = `translateX(${width / 3}px) translateY(-100%)`;\n      }\n      if (window.innerWidth - right <= 32) {\n        cardRef.current.style.transform = `translateX(${-width / 3}px) translateY(-100%)`;\n      }\n      if (window.innerWidth - right > width / 1.5 && left > width / 1.5) {\n        cardRef.current.style.transform = \"translateX(0px) translateY(-100%)\";\n      }\n    }, 100);\n  };\n\n  useEffect(() => {\n    adjustTooltip();\n    window.addEventListener(\"resize\", () => {\n      adjustTooltip();\n    });\n  }, [mouseOver]);\n\n  return (\n    <div onMouseOut={() => setMouseOver(false)} onMouseOver={() => setMouseOver(true)} className={classes.container}>\n      <InfoIcon style={{ fill: fill }} />\n      <div ref={cardRef} className={classes.card}>\n        {content}\n      </div>\n    </div>\n  );\n};\n\nexport default GenadropToolTip;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/index.js",["1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593"],"/* eslint-disable no-await-in-loop */\n/* eslint-disable no-restricted-syntax */\nimport axios from \"axios\";\n// import fileDownload from \"js-file-download\";\n// eslint-disable-next-line import/no-unresolved\n// import worker from \"workerize-loader!../worker\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport { getAlgoData, purchaseCeloNfts, PurchaseNft, purchasePolygonNfts } from \"./arc_ipfs\";\nimport { readSIngleUserNft } from \"./firebase\";\nimport blankImage from \"../assets/blank.png\";\nimport {\n  addLayer,\n  clearLayers,\n  setActiveCollection,\n  setAlgoCollections,\n  setAlgoSingleNfts,\n  setOverlay,\n  setNotification,\n  setCollectionName,\n  clearRule,\n  clearPreview,\n  setCurrentSession,\n  setLayerAction,\n  setImageAction,\n  setNftLayers,\n  setActionProgress,\n  setCurrentPlan,\n} from \"../gen-state/gen.actions\";\nimport supportedChains from \"./supportedChains\";\nimport { v4 as uuid } from \"uuid\";\n\n// setting a delay as not exceed the API limit\nconst getDelayTime = (index, data, batch) => {\n  const reqPagination = [...new Array(Math.floor(data.length / batch) + 1)].map((_, idx) => (idx + 1) * batch);\n  for (const base of reqPagination) {\n    if (index < base) {\n      return (Math.floor(base / batch) - 1) * 1000;\n    }\n  }\n};\n// Fetch Single NFTs\nfunction fetchNFT(NFT, mainnet) {\n  const fetch = async (resolve, reject) => {\n    try {\n      const nftObj = {};\n      nftObj.Id = NFT.id;\n      nftObj.price = NFT.price;\n      nftObj.buyer = NFT.Buyer;\n      nftObj.owner = NFT.owner;\n      nftObj.sold = NFT.sold;\n      nftObj.dateSold = NFT.dateSold;\n      nftObj.description = NFT.description;\n      nftObj.mainnet = NFT.mainnet;\n      const { params } = await getAlgoData(mainnet, NFT.id);\n      const urlIPF = params.url.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n      nftObj.url = params.url;\n      const response = await axios.get(urlIPF);\n      nftObj.image_url = response.data.image.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n      nftObj.name = response.data.name;\n      nftObj.description = response.data.description;\n      nftObj.chain = 4160;\n      nftObj.properties = response.data.properties;\n      resolve(nftObj);\n    } catch (err) {\n      console.log(err);\n      reject(err);\n    }\n  };\n  return new Promise((resolve, reject) => {\n    fetch(resolve, reject);\n  });\n}\n\n// Fetch Collections\nfunction fetchCollection(collection, mainnet) {\n  const fetch = async (resolve, reject) => {\n    try {\n      const collectionObj = {};\n      collectionObj.name = collection.name;\n      collectionObj.price = collection.price;\n      collectionObj.owner = collection.owner;\n      collectionObj.description = collection.description;\n      collectionObj.url = collection.url;\n      collectionObj.createdAt = collection?.createdAt;\n      const urlIPF = collection.url.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n      const { data } = await axios.get(urlIPF);\n      collectionObj.nfts = data;\n\n      const { params } = await getAlgoData(mainnet, data[0]);\n      const response = await axios.get(params.url.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\"));\n      collectionObj.image_url = response.data.image.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n      collectionObj.chain = 4160;\n      resolve(collectionObj);\n    } catch (err) {\n      console.log(err);\n      reject(err);\n    }\n  };\n  return new Promise((resolve, reject) => {\n    fetch(resolve, reject);\n  });\n}\n\nexport const getGraphCollections = async (collections) => {\n  function fetchAuroraCollection(collection) {\n    const fetch = async (resolve, reject) => {\n      try {\n        const collectionObj = {};\n        const { data } = await axios.get(\n          collection?.nfts[0].tokenIPFSPath.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\")\n        );\n        collectionObj.image_url = data?.image.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n\n        collectionObj.name = collection?.name;\n        collectionObj.owner = collection?.creator?.id;\n        collectionObj.Id = collection?.id;\n        const getPrice = collection?.nfts.map((col) => col.price).reduce((a, b) => (a < b ? a : b));\n        const chain = collection?.nfts?.map((col) => col.chain).reduce((a, b) => a === b && a);\n        collectionObj.chain = chain;\n        collectionObj.price = (getPrice * 0.000000000000000001).toString();\n        collectionObj.description = collection?.description;\n        collectionObj.isListed = collection?.isListed ? collection?.isListed : false;\n        collectionObj.nfts = collection?.nfts;\n        collectionObj.createdAt = Number(collection?.nfts?.[0].createdAtTimestamp);\n        resolve(collectionObj);\n      } catch (err) {\n        console.log(err);\n        reject(err);\n      }\n    };\n    return new Promise((resolve, reject) => {\n      fetch(resolve, reject);\n    });\n  }\n  const collectionsArr = [];\n  if (collections) {\n    const responses = await Promise.allSettled(collections.map((collection) => fetchAuroraCollection(collection)));\n    responses.forEach((element) => {\n      if (element?.status === \"fulfilled\") {\n        collectionsArr.push(element.value);\n      }\n    });\n  }\n  return collectionsArr;\n};\n\nexport const getCeloGraphCollections = async (collections) => {\n  function fetchAuroraCollection(collection) {\n    const fetch = async (resolve, reject) => {\n      try {\n        const collectionObj = {};\n        const { data } = await axios.get(\n          collection?.nfts[0].tokenIPFSPath.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\")\n        );\n        collectionObj.image_url = data?.image.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n\n        collectionObj.name = collection?.name;\n        collectionObj.owner = collection?.id;\n        const getPrice = collection?.nfts.map((col) => col.price).reduce((a, b) => (a < b ? a : b));\n        const chain = collection?.nfts?.map((col) => col.chain).reduce((a, b) => a === b && a);\n        collectionObj.chain = chain;\n        collectionObj.price = getPrice;\n        collectionObj.description = collection?.description;\n        collectionObj.nfts = collection?.nfts;\n        resolve(collectionObj);\n      } catch (err) {\n        console.log(err);\n        reject(err);\n      }\n    };\n    return new Promise((resolve, reject) => {\n      fetch(resolve, reject);\n    });\n  }\n  const collectionsArr = [];\n  if (collections) {\n    const responses = await Promise.allSettled(collections.map((collection) => fetchAuroraCollection(collection)));\n    responses.forEach((element) => {\n      if (element?.status === \"fulfilled\") {\n        collectionsArr.push(element.value);\n      }\n    });\n  }\n  return collectionsArr;\n};\n\nexport const getNftCollections = async ({ collections, mainnet, dispatch }) => {\n  const responses = await Promise.allSettled(collections.map((collection) => fetchCollection(collection, mainnet)));\n\n  // removing rejected responses\n  const collectionsObj = {};\n  responses.forEach((element) => {\n    if (element?.status === \"fulfilled\") {\n      collectionsObj[element.value.name.trimEnd()] = element.value;\n    }\n  });\n  dispatch(setAlgoCollections(collectionsObj));\n  return collectionsObj;\n};\n\nexport const getUserNftCollections = async ({ collections, mainnet }) => {\n  const responses = await Promise.allSettled(collections.map((collection) => fetchCollection(collection, mainnet)));\n  // removing rejected responses\n  const collectionsArr = [];\n  responses.forEach((element) => {\n    if (element?.status === \"fulfilled\") {\n      collectionsArr.push(element.value);\n    }\n  });\n  return collectionsArr;\n};\n\nexport const getSingleNfts = async ({ mainnet, singleNfts, dispatch }) => {\n  const responses = await Promise.allSettled(singleNfts.map((NFT) => fetchNFT(NFT, mainnet)));\n  const nftArr = [];\n  const nftsObj = {};\n  // removing rejected responses\n  responses.forEach((element) => {\n    if (element?.status === \"fulfilled\") {\n      nftArr.push(element.value);\n      nftsObj[element.value.Id] = element.value;\n    }\n  });\n  dispatch(setAlgoSingleNfts(nftsObj));\n  return nftsObj;\n};\n\nexport const getUserSingleNfts = async ({ mainnet, singleNfts }) => {\n  const _1of1 = singleNfts.filter((s) => !s.collection);\n  const responses = await Promise.allSettled(_1of1?.map((NFT) => fetchNFT(NFT, mainnet)));\n  const nftArr = [];\n  // // removing rejected responses\n  responses.forEach((element) => {\n    if (element?.status === \"fulfilled\") {\n      nftArr.push(element.value);\n    }\n  });\n  return nftArr;\n};\n\nexport const getNftCollection = async ({ collection, mainnet, handleSetState, dispatch }) => {\n  const urlIPF = collection.url.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n  const { data } = await axios.get(urlIPF);\n\n  function fetchCollectionNFT(id, idx) {\n    return new Promise((resolve, reject) => {\n      const delay = getDelayTime(idx, data, 60);\n      setTimeout(async () => {\n        try {\n          const { params } = await getAlgoData(mainnet, id);\n          const nftObj = {};\n          nftObj.collection_name = collection.name;\n          nftObj.owner = collection.owner;\n          nftObj.price = collection.price;\n          nftObj.algo_data = params;\n          nftObj.Id = id;\n          const url = params.url.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n          const response = await axios.get(url);\n\n          const assetInfo = await readSIngleUserNft(collection.owner, id);\n\n          nftObj.sold = assetInfo.sold;\n          nftObj.ipfs_data = response.data;\n          nftObj.name = response.data.name;\n          nftObj.image_url = response.data.image.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n          nftObj.chain = 4160;\n          resolve(nftObj);\n        } catch (err) {\n          console.log(err);\n          reject(err);\n        }\n      }, delay);\n    });\n  }\n\n  const responses = await Promise.allSettled(data.map((id, idx) => fetchCollectionNFT(id, idx)));\n  const nftArr = [];\n  const nftsObj = {};\n  // removing rejected responses\n  responses.forEach((element) => {\n    if (element?.status === \"fulfilled\") {\n      nftArr.push(element.value);\n      const nftObj = element.value;\n      nftsObj[nftObj.Id] = nftObj;\n    }\n  });\n  window.localStorage.activeCollection = JSON.stringify({ ...nftsObj });\n\n  handleSetState({\n    NFTCollection: nftArr,\n    loadedChain: 4160,\n  });\n  dispatch(setActiveCollection(nftArr));\n};\n\nexport const getGraphCollection = async (collection, mainnet) => {\n  const nftArr = [];\n  if (collection) {\n    for (let i = 0; i < collection?.length; i++) {\n      const { data } = await axios.get(\n        collection[i].tokenIPFSPath.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\")\n      );\n      try {\n        const nftObj = {};\n        nftObj.collection_name = mainnet.name;\n        nftObj.description = mainnet.description;\n        nftObj.chain = collection[i].chain;\n        nftObj.owner = collection[i]?.owner?.id;\n        nftObj.Id = collection[i].id;\n        const getPrice = collection.map((col) => col.price).reduce((a, b) => (a < b ? a : b));\n        nftObj.collectionPrice = getPrice * 0.000000000000000001;\n        nftObj.price = collection[i].price * 0.000000000000000001;\n        nftObj.sold = collection[i].isSold;\n        nftObj.ipfs_data = data;\n        nftObj.name = data.name;\n        nftObj.image_url = data.image.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n        nftArr.push(nftObj);\n        window.localStorage.activeCollection = JSON.stringify({ ...nftObj });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  return nftArr;\n};\n\nexport const getTransactions = async (transactions) => {\n  const trnArr = [];\n  for (let i = 0; i < transactions?.length; i++) {\n    try {\n      const trnObj = {};\n      (trnObj.buyer = transactions[i]?.to?.id),\n        (trnObj.price = transactions[i]?.price * 0.000000000000000001),\n        (trnObj.seller = transactions[i].from?.id),\n        (trnObj.txDate = transactions[i]?.txDate),\n        (trnObj.txId = transactions[i]?.txId),\n        (trnObj.type = transactions[i]?.type);\n      trnArr.push(trnObj);\n    } catch (error) {}\n  }\n  return trnArr;\n};\n\nexport const getUserGraphNft = async (collection, address) => {\n  console.log(collection);\n  const nftArr = [];\n  if (collection) {\n    for (let i = 0; i < collection?.length; i++) {\n      const { data } = await axios.get(collection[i].tokenIPFSPath.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\"));\n      try {\n        const nftObj = {};\n        // nftObj.collection_name = collection[i]?.owner.collections[0]?.name;\n        nftObj.owner = address;\n        nftObj.chain = collection[i]?.chain;\n        nftObj.Id = collection[i]?.id;\n        nftObj.tokenID = collection[i]?.tokenID;\n        const getPrice = collection.map((col) => col?.price).reduce((a, b) => (a < b ? a : b));\n        nftObj.collectionPrice = getPrice * 0.000000000000000001;\n        nftObj.price = collection[i]?.price * 0.000000000000000001;\n        nftObj.sold = collection[i]?.isSold;\n        nftObj.ipfs_data = data;\n        nftObj.contractAddress = collection[i]?.id?.split(collection[i]?.tokenID)[0];\n        nftObj.collection_contract = collection[i]?.id?.split(collection[i]?.tokenID)[0];\n        nftObj.name = data?.name;\n        nftObj.image_url = data?.image?.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n        nftArr.push(nftObj);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  return nftArr;\n};\n\nexport const getCeloGraphNft = async (collection) => {\n  const { data } = await axios.get(\n    collection?.tokenIPFSPath.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\")\n  );\n  const nftObj = [];\n  try {\n    const nftArr = {};\n    nftArr.collection_name = collection?.collection?.name;\n    nftArr.collection_contract = collection?.id?.split(collection?.tokenID)[0];\n    nftArr.name = data?.name;\n    nftArr.chain = collection?.chain;\n    nftArr.owner = collection?.owner?.id;\n    nftArr.price = collection?.price * 0.000000000000000001;\n    nftArr.isListed = collection?.isListed;\n    nftArr.image_url = data?.image?.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n    nftArr.ipfs_data = data;\n    nftArr.sold = collection?.isSold;\n    nftArr.description = data?.description;\n    nftObj.contractAddress = collection?.id?.split(collection?.tokenID)[0];\n    nftArr.Id = collection?.id;\n    nftArr.tokenID = collection?.tokenID;\n    nftArr.marketId = collection?.marketId;\n    nftArr.properties = data?.properties;\n    nftObj.push(nftArr);\n  } catch (error) {\n    console.log(error);\n  }\n\n  return nftObj;\n};\n\nexport const getGraphNft = async (collection, mainnet) => {\n  const { data } = await axios.get(\n    collection?.tokenIPFSPath.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\")\n  );\n  const nftObj = [];\n  try {\n    const nftArr = {};\n    nftArr.collection_name = collection?.collection?.name;\n    nftArr.collection_contract = collection?.id?.split(collection?.tokenID)[0];\n    nftArr.name = data?.name;\n    nftArr.chain = collection?.chain;\n    nftArr.owner = collection?.owner?.id;\n    nftArr.price = collection?.price * 0.000000000000000001;\n    nftArr.image_url = data?.image?.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n    nftArr.ipfs_data = data;\n    nftArr.sold = collection?.isSold;\n    nftArr.description = data?.description;\n    nftArr.Id = collection?.id;\n    nftArr.tokenID = collection?.tokenID;\n    nftArr.marketId = collection?.marketId;\n    nftArr.properties = data?.properties;\n    nftObj.push(nftArr);\n  } catch (error) {\n    console.log(error);\n  }\n\n  return nftObj;\n};\n\nexport const getUserBoughtNftCollection = async (mainnet, data) => {\n  const responses = await Promise.allSettled(data.map((NFT) => fetchNFT(NFT, mainnet)));\n  const nftArr = [];\n  // removing rejected responses\n  responses.forEach((element) => {\n    if (element?.status === \"fulfilled\") {\n      nftArr.push(element.value);\n    }\n  });\n  return nftArr;\n};\n\nexport const getSingleGraphNfts = async (nfts) => {\n  function fetchGraphNFT(NFT, idx, singleNfts) {\n    return new Promise((resolve, reject) => {\n      const delay = getDelayTime(idx, singleNfts, 60);\n      setTimeout(async () => {\n        try {\n          const nftObj = {};\n          const { data } = await axios.get(\n            NFT.tokenIPFSPath.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\")\n          );\n          nftObj.Id = NFT?.id;\n          nftObj.price = NFT?.price * 0.000000000000000001;\n          nftObj.owner = NFT?.owner?.id;\n          nftObj.sold = NFT?.isSold;\n          nftObj.chain = NFT?.chain;\n          nftObj.description = data?.description;\n          nftObj.image_url = data?.image.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n          nftObj.name = data?.name;\n          resolve(nftObj);\n        } catch (err) {\n          console.log(err);\n          reject(err);\n        }\n      }, delay);\n    });\n  }\n  const responses = await Promise.allSettled(nfts.map((NFT, idx) => fetchGraphNFT(NFT, idx, nfts)));\n  const nftArr = [];\n  // removing rejected responses\n  responses.forEach((element) => {\n    if (element?.status === \"fulfilled\") {\n      nftArr.push(element.value);\n    }\n  });\n  return nftArr;\n};\n\nexport const getSingleNftDetails = async (mainnet, nft) => {\n  const nftDetails = {};\n  try {\n    nftDetails.Id = nft.id;\n    nftDetails.price = nft.price;\n    nftDetails.buyer = nft.buyer;\n    nftDetails.owner = nft.owner;\n    nftDetails.sold = nft.sold;\n    nftDetails.dateSold = nft.dateSold;\n    nftDetails.description = nft.description;\n    const { params } = await getAlgoData(mainnet, nft.id);\n    const response = await axios.get(params.url.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\"));\n    nftDetails.image_url = response.data.image.replace(\"ipfs://\", \"https://genadrop.mypinata.cloud/ipfs/\");\n    nftDetails.name = response.data.name;\n    nftDetails.description = response.data.description;\n    nftDetails.properties = response.data.properties;\n  } catch (error) {\n    console.error(\"get collection result failed\");\n  }\n  return nftDetails;\n};\n\nexport const buyGraphNft = async (buyProps) => {\n  const {\n    dispatch,\n    history,\n    account,\n    nftDetails: { chain },\n    chainId,\n  } = buyProps;\n\n  if (!account) {\n    return dispatch(\n      setNotification({\n        message: `Please, connect your wallet to ${supportedChains[chain].label} network and try again.`,\n        type: \"error\",\n      })\n    );\n  }\n\n  if (chainId != chain) {\n    return dispatch(\n      setNotification({\n        message: `Please, connect your wallet to ${supportedChains[chain].label} network and try again.`,\n        type: \"warning\",\n      })\n    );\n  }\n  if (chainId === 44787 || chainId === 42220) {\n    dispatch(setOverlay(true));\n    const res = await purchaseCeloNfts(buyProps);\n    if (res) {\n      dispatch(setOverlay(false));\n      dispatch(\n        setNotification({\n          message: \"transaction successful\",\n          type: \"success\",\n        })\n      );\n      setTimeout(() => {\n        history.push(`/me/${account}`);\n        // history.push(`/marketplace`);\n      }, 3000);\n    } else {\n      dispatch(setOverlay(false));\n      dispatch(\n        setNotification({\n          message: \"transaction failed\",\n          type: \"error\",\n        })\n      );\n    }\n  } else {\n    console.log(buyProps);\n    dispatch(setOverlay(true));\n    const res = await purchasePolygonNfts(buyProps);\n    if (res) {\n      dispatch(setOverlay(false));\n      dispatch(\n        setNotification({\n          message: \"transaction successful\",\n          type: \"success\",\n        })\n      );\n      setTimeout(() => {\n        history.push(`/me/${account}`);\n        // history.push(`/marketplace`);\n      }, 3000);\n    } else {\n      dispatch(setOverlay(false));\n      dispatch(\n        setNotification({\n          message: \"transaction failed\",\n          type: \"error\",\n        })\n      );\n    }\n  }\n};\n\nexport const buyNft = async (buyProps) => {\n  const {\n    dispatch,\n    history,\n    account,\n    nftDetails: { chain },\n    chainId,\n  } = buyProps;\n\n  if (!account) {\n    return dispatch(\n      setNotification({\n        message: `Please, connect your wallet to ${supportedChains[chain].label} network and try again.`,\n        type: \"error\",\n      })\n    );\n  }\n\n  if (chainId !== chain) {\n    return dispatch(\n      setNotification({\n        message: `Please, connect your wallet to ${supportedChains[chain].label} network and try again.`,\n        type: \"warning\",\n      })\n    );\n  }\n\n  dispatch(setOverlay(true));\n  const res = await PurchaseNft(buyProps);\n\n  if (res) {\n    dispatch(setOverlay(false));\n    dispatch(\n      setNotification({\n        message: \"transaction successful\",\n        type: \"success\",\n      })\n    );\n    setTimeout(() => {\n      history.push(`/me/${account}`);\n      // history.push(`/marketplace`);\n    }, 3000);\n  } else {\n    dispatch(setOverlay(false));\n    dispatch(\n      setNotification({\n        message: \"transaction failed\",\n        type: \"error\",\n      })\n    );\n  }\n};\n\nexport const getImageSize = async (img) =>\n  new Promise((resolve) => {\n    const image = new Image();\n    if (typeof img === \"string\") {\n      image.src = img;\n    } else {\n      image.src = URL.createObjectURL(img);\n    }\n    image.onload = () => {\n      resolve({ height: image.height, width: image.width });\n    };\n  });\n\nexport const getDefaultName = (nameId) => {\n  let id = nameId;\n  id = String(id);\n  if (id.length < 4) {\n    const repeatBy = 4 - id.length;\n    return `#${\"0\".repeat(repeatBy)}${id}`;\n  }\n  return `#${id}`;\n};\n\nexport const dataURItoBlob = (dataURI) => {\n  const byteString = atob(dataURI.split(\",\")[1]);\n  const mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const ab = new ArrayBuffer(byteString.length);\n  const ia = new Uint8Array(ab);\n  for (let i = 0; i < byteString.length; i += 1) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n  const blob = new Blob([ab], { type: mimeString });\n  return blob;\n};\n\nexport const getFile = async (url, name = \"image\", type = \"image/png\") => {\n  const response = await fetch(url);\n  const blob = await response.blob();\n  const file = new File([blob], name, { type });\n  return file;\n};\n\nexport const getBase64FromUrl = async (url) => {\n  const response = await fetch(url);\n  const blob = await response.blob();\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    reader.onloadend = () => {\n      const base64data = reader.result;\n      resolve(base64data);\n    };\n  });\n};\n\nexport const handleImage = async (props) => {\n  const { canvas, images, image } = props;\n  const { height, width } = await getImageSize(image);\n  canvas.setAttribute(\"width\", width);\n  canvas.setAttribute(\"height\", height);\n  const ctx = canvas.getContext(\"2d\");\n  for (const img of images) {\n    const resImage = await new Promise((resolve) => {\n      const newImage = new Image();\n      newImage.src = URL.createObjectURL(img);\n      newImage.onload = () => {\n        resolve(newImage);\n      };\n    });\n    if (resImage) ctx.drawImage(resImage, 0, 0, width, height);\n  }\n};\n\nexport const handleBlankImage = async (props) => {\n  const { img, canvas } = props;\n  const { height, width } = await getImageSize(img);\n  canvas.setAttribute(\"width\", width);\n  canvas.setAttribute(\"height\", height);\n  const ctx = canvas.getContext(\"2d\");\n  const image = await new Promise((resolve) => {\n    const newImage = new Image();\n    newImage.src = blankImage;\n    newImage.onload = () => {\n      resolve(newImage);\n    };\n  });\n  if (image) ctx.drawImage(image, 0, 0, width, height);\n};\n\nexport const handleTemplateImage = async (props) => {\n  const { img, canvas } = props;\n  const { height, width } = await getImageSize(img);\n  if (height) {\n    canvas.setAttribute(\"width\", width);\n    canvas.setAttribute(\"height\", height);\n  }\n  const ctx = canvas.getContext(\"2d\");\n  const resImage = await new Promise((resolve) => {\n    const newImage = new Image();\n    newImage.src = img;\n    newImage.crossOrigin = \"anonymous\";\n    newImage.onload = () => {\n      resolve(newImage);\n    };\n  });\n  if (resImage) {\n    ctx.drawImage(resImage, 0, 0, width, height);\n    return true;\n  }\n  return false;\n};\n\nexport const reOrderPreview = ({ preview, layers }) => {\n  const newPreview = [];\n  [...layers].forEach(({ id, traits, layerTitle }) => {\n    traits.forEach(({ traitTitle }) => {\n      preview.forEach((p) => {\n        if (id === p.layerId && traitTitle === p.imageName) {\n          newPreview.push({ ...p, layerTitle });\n        }\n      });\n    });\n  });\n  return newPreview;\n};\n\nexport const handleResetCreate = ({ dispatch }) => {\n  dispatch(setCollectionName(\"\"));\n  dispatch(clearLayers());\n  dispatch(clearPreview());\n  dispatch(clearRule());\n  dispatch(setNftLayers([]));\n  dispatch(setCurrentSession(null));\n  dispatch(setCurrentPlan(\"free\"));\n  dispatch(\n    setLayerAction({\n      type: \"\",\n    })\n  );\n  dispatch(\n    setImageAction({\n      type: \"\",\n      value: {},\n    })\n  );\n  dispatch(\n    setActionProgress({\n      totalCount: 0,\n      resetCount: true,\n    })\n  );\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/Attribute/Attribute.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/history/search.jsx",["1594","1595"],"import React from \"react\";\nimport Table from \"./table\";\nimport UserInput from \"./userInput\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n    };\n  }\n\n  handleChange(event) {\n    const searchValue = event.target.value;\n    this.setState({ search: searchValue });\n  }\n\n  render() {\n    let records = this.props.data;\n    let chain = this.props.chain;\n\n    const searchString = this.state.search.trim().toLowerCase();\n\n    if (searchString.length > 0) {\n      records = records.filter((e) => e.type.toLowerCase().match(searchString));\n    }\n\n    return (\n      <div style={{ overflow: \"scroll\" }}>\n        <UserInput update={(e) => this.handleChange(e)} />\n        {records.length >= 1 ? (\n          <Table data={records} chain={chain} />\n        ) : (\n          <div style={{ height: 100, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            No Transaction\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/arc_ipfs.js",["1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662","1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705","1706","1707","1708","1709","1710","1711","1712"],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/dropItem/dropItem.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/chainConnect.js",["1713","1714","1715"],"export const chainIdToParams = {\n  137: {\n    chainId: \"0x89\",\n    chainName: \"Polygon Matic\",\n    nativeCurrency: { name: \"Matic\", symbol: \"MATIC\", decimals: 18 },\n    rpcUrls: [\"https://polygon-rpc.com/\"],\n    blockExplorerUrls: [\"https://www.polygonscan.com/\"],\n    iconUrls: [\"\"],\n  },\n\n  80001: {\n    chainId: \"0x13881\",\n    chainName: \"Polygon Testnet\",\n    nativeCurrency: { name: \"Matic\", symbol: \"MATIC\", decimals: 18 },\n    rpcUrls: [\"https://polygon-mumbai.g.alchemy.com/v2/sjbvWTjbyKXxvfJ1HkHIdEDHc2u8wNym\"],\n    blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"],\n    iconUrls: [\"\"],\n  },\n\n  42220: {\n    chainId: \"0xa4ec\",\n    chainName: \"Celo\",\n    nativeCurrency: { name: \"Celo\", symbol: \"CELO\", decimals: 18 },\n    rpcUrls: [\"https://forno.celo.org\"],\n    blockExplorerUrls: [\"https://explorer.celo.org/\"],\n    iconUrls: [\"future\"],\n  },\n\n  44787: {\n    chainId: \"0xaef3\",\n    chainName: \"Alfajores Testnet\",\n    nativeCurrency: { name: \"Alfajores Celo\", symbol: \"A-CELO\", decimals: 18 },\n    rpcUrls: [\"https://alfajores-forno.celo-testnet.org\"],\n    blockExplorerUrls: [\"https://alfajores-blockscout.celo-testnet.org/\"],\n    iconUrls: [\"future\"],\n  },\n\n  62320: {\n    chainId: \"0xf370\",\n    chainName: \"Baklava Testnet\",\n    nativeCurrency: { name: \"Baklava Celo\", symbol: \"B-CELO\", decimals: 18 },\n    rpcUrls: [\"https://baklava-forno.celo-testnet.org\"],\n    blockExplorerUrls: [\"https://baklava-blockscout.celo-testnet.org/\"],\n    iconUrls: [\"future\"],\n  },\n\n  1313161554: {\n    chainId: \"0x4e454152\",\n    chainName: \"Aurora\",\n    nativeCurrency: { name: \"Aurora\", symbol: \"ETH\", decimals: 18 },\n    rpcUrls: [\"https://mainnet.aurora.dev/\"],\n    blockExplorerUrls: [\"https://aurorascan.dev/\"],\n    iconUrls: [\"\"],\n  },\n\n  1313161555: {\n    chainId: \"0X4E454153\",\n    chainName: \"Aurora Testnet\",\n    nativeCurrency: { name: \"Aurora\", symbol: \"ETH\", decimals: 18 },\n    rpcUrls: [\"https://testnet.aurora.dev/\"],\n    blockExplorerUrls: [\"https://testnet.aurorascan.dev/\"],\n    iconUrls: [\"\"],\n  },\n};\n\nconst chainDecimalsToHex = {\n  137: \"0x89\",\n  80001: \"0x13881\",\n  42220: \"0xa4ec\",\n  44787: \"0xaef3\",\n  62320: \"0xf370\",\n  1313161554: \"0x4e454152\",\n  1313161555: \"0X4E454153\",\n};\n\nexport async function switchChain(chainId) {\n  console.log({ chainId });\n  try {\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [\n        {\n          chainId: chainDecimalsToHex[chainId],\n        },\n      ],\n    });\n\n    return null;\n  } catch (error) {\n    console.log(\"switch error: \", error);\n    return error;\n  }\n}\n\nexport async function addChain(chainId) {\n  try {\n    await window.ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: [chainIdToParams[chainId]],\n    });\n    return null;\n  } catch (error) {\n    console.log(\"add error: \", error);\n    return error;\n  }\n}\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/overview/collection-overview-script.js",["1716"],"const isUnique = (props) => {\n  const { preview, rule } = props;\n\n  const stringPreview = JSON.stringify(preview);\n  for (const r of rule) {\n    const stringRule = JSON.stringify(r);\n    if (stringRule === stringPreview) return false;\n  }\n  return true;\n};\nexport default isUnique;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/layerorders/layeroders-script.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/graph/graph.jsx",["1717","1718","1719","1720","1721","1722","1723","1724"],"import React, { useEffect } from \"react\";\nimport classes from \"./graph.module.css\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, registerables } from \"chart.js\";\nChart.register(...registerables);\n\nconst Graph = ({ details }) => {\n  let dates = [];\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  let prices = [];\n  if (details) {\n    details.map((e, i) => {\n      const date = new Date(e.txDate * 1000);\n\n      dates.push(date.getDate() + \"/\" + months[date.getMonth()]);\n      prices.push(e.price);\n    });\n  }\n\n  // console.log(dates, prices);\n  const data = {\n    labels: dates,\n    datasets: [\n      {\n        // label: \"First dataset\",\n        data: prices,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\",\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n    },\n  };\n  return (\n    <>\n      {prices ? (\n        <div className={classes.chart}>\n          <Line data={data} width={null} height={80} options={options} />\n        </div>\n      ) : (\n        <div className={classes.nodata}>No Price History Available</div>\n      )}\n    </>\n  );\n};\n\nexport default Graph;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/copy/copy.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/description/collection-description-script.js",["1725","1726","1727","1728","1729","1730","1731","1732","1733","1734","1735","1736","1737","1738"],"import { v4 as uuid } from \"uuid\";\nimport {\n  setCurrentDnaLayers,\n  setNftLayers,\n  setNotification,\n  setLoader,\n  setLayerAction,\n} from \"../../gen-state/gen.actions\";\nimport { getDefaultName, handleImage } from \"../../utils\";\n\nexport const createDna = (layers) => {\n  const getPercentage = (rarity, total) => {\n    const result = (parseInt(rarity) / total) * 100;\n    return Math.floor(result) ? Math.floor(result) : 1;\n  };\n\n  function shuffle(array) {\n    for (let i = 0; i < 100; i += 1) {\n      for (let x = array.length - 1; x > 0; x -= 1) {\n        const j = Math.floor(Math.random() * (x + 1));\n        [array[x], array[j]] = [array[j], array[x]];\n      }\n    }\n    return array;\n  }\n\n  const newLayers = layers\n    .filter((layer) => layer.traits.length)\n    .map((layer) => {\n      const totalTraits = layer.traits.map((trait) => parseInt(trait.Rarity)).reduce((acc, curr) => acc + curr);\n      const newTraits = layer.traits.map((trait) => Array(getPercentage(trait.Rarity, totalTraits)).fill(trait)).flat();\n      return { ...layer, traits: shuffle(newTraits) };\n    });\n  return newLayers.reverse();\n};\n\nexport const isUnique = (attributes, attr, rule) => {\n  const parseAttrToRule = attr.map((p) => ({\n    layerTitle: p.trait_type,\n    imageName: p.imageName,\n  }));\n\n  const att_str = JSON.stringify(attr);\n  for (const _attr of attributes) {\n    const _attr_str = JSON.stringify(_attr);\n    if (_attr_str === att_str) return false;\n  }\n  let result;\n\n  for (const rl of rule) {\n    result = rl.every((el) => {\n      let singleRule = {\n        layerTitle: el.layerTitle,\n        imageName: el.imageName,\n      };\n      if (JSON.stringify(parseAttrToRule).includes(JSON.stringify(singleRule))) {\n        return true;\n      }\n      return false;\n    });\n    if (result === true) return false;\n  }\n  return true;\n};\n\nexport const createUniqueLayer = async (props) => {\n  const { dispatch, setLoader, layers, rule, mintAmount, collectionName } = props;\n  const newLayers = [];\n  const newAttributes = [];\n  let uniqueIndex = 0;\n\n  const mintCallback = (resolve) => {\n    setTimeout(() => {\n      dispatch(\n        setLoader(\n          `preparing ${newAttributes.length} of ${mintAmount} assets \nremoving ${uniqueIndex} duplicates`\n        )\n      );\n\n      const attr = [];\n      layers.forEach(({ layerTitle, traits, id }) => {\n        const randNum = Math.floor(Math.random() * traits.length);\n        const { traitTitle, Rarity, image } = traits[randNum];\n        attr.push({\n          trait_type: layerTitle,\n          imageName: traitTitle.replace(\".png\", \"\"),\n          rarity: Rarity,\n          image,\n          id,\n        });\n      });\n\n      if (isUnique(newAttributes, attr, rule)) {\n        newAttributes.push([...attr]);\n      } else {\n        uniqueIndex += 1;\n      }\n      resolve();\n    }, 0);\n  };\n\n  for (let i = 0; i < mintAmount + uniqueIndex; i += 1) {\n    await new Promise(mintCallback);\n  }\n\n  newAttributes.forEach((attr, id) => {\n    newLayers.push({\n      id: uuid(),\n      name: `${collectionName} ${getDefaultName(id + 1)}`.trim(),\n      description: \"\",\n      image: \"image\",\n      attributes: attr,\n    });\n  });\n\n  return newLayers;\n};\n\nexport const generateArt = async (props) => {\n  const { layers, canvas, image, dispatch, setLoader, imageQuality } = props;\n  const uniqueImages = [];\n  for (const [index, { attributes, id }] of layers.entries()) {\n    dispatch(setLoader(`generating ${index + 1} of ${layers.length}`));\n    const images = [];\n    attributes.forEach((attr) => {\n      images.push(attr.image);\n    });\n    await handleImage({ images, canvas, image });\n    const imageUrl = canvas.toDataURL(\"image/webp\", imageQuality);\n    uniqueImages.push({ id, imageUrl });\n  }\n  dispatch(setLoader(\"\"));\n  return uniqueImages;\n};\n\nexport const parseLayers = (props) => {\n  const { uniqueLayers, arts } = props;\n  return uniqueLayers.map(({ attributes, id, ...otherLayerProps }) => {\n    const newAttributes = attributes.map(({ image, ...otherAttrProps }) => ({ ...otherAttrProps }));\n    for (const art of arts) {\n      if (art.id === id) {\n        return { ...otherLayerProps, id, attributes: newAttributes, image: art.imageUrl };\n      }\n    }\n    return { attributes: newAttributes, id, ...otherLayerProps };\n  });\n};\n\nexport const getFirstLayerWithTrait = (layers) => {\n  return layers.find((layer) => layer.traits.length);\n};\n\nexport const handleGenerate = async (generateProps) => {\n  var startTime = performance.now();\n  const { isRule, mintAmount, combinations, layers, collectionName, dispatch, rule, canvasRef, imageQuality } =\n    generateProps;\n\n  if (isRule) {\n    return dispatch(\n      setNotification({\n        message: \"Finish adding conflict rule and try again\",\n        type: \"warning\",\n      })\n    );\n  }\n  if (mintAmount <= 0 || !mintAmount) {\n    return dispatch(\n      setNotification({\n        message: \"Set the number to generate\",\n        type: \"warning\",\n      })\n    );\n  }\n  if (!combinations) {\n    return dispatch(\n      setNotification({\n        message: \"Upload images and try again\",\n        type: \"warning\",\n      })\n    );\n  }\n  if (mintAmount > combinations - rule.length) {\n    return dispatch(\n      setNotification({\n        message: \"Cannot generate more than the possible combinations\",\n        type: \"warning\",\n      })\n    );\n  }\n  dispatch(setNftLayers([]));\n  const dnaLayers = createDna(layers);\n  const uniqueLayers = await createUniqueLayer({\n    dispatch,\n    setNotification,\n    setLoader,\n    layers: dnaLayers,\n    mintAmount,\n    rule,\n    collectionName,\n  });\n\n  const arts = await generateArt({\n    dispatch,\n    setLoader,\n    layers: uniqueLayers,\n    canvas: canvasRef.current,\n    image: getFirstLayerWithTrait(layers).traits[0].image,\n    imageQuality,\n  });\n\n  dispatch(setCurrentDnaLayers(dnaLayers));\n  dispatch(setNftLayers(parseLayers({ uniqueLayers, arts })));\n  dispatch(\n    setLayerAction({\n      type: \"generate\",\n    })\n  );\n  dispatch(\n    setNotification({\n      message: \"Done! Click on the preview button to view assets.\",\n      type: \"success\",\n    })\n  );\n  var endTime = performance.now();\n  console.log(`Call to generate collection took ${(endTime - startTime) / 1000} seconds`);\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/webcam-enable/webcamEnable.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/Capture/useTimer.js",["1739"],"import { useCallback, useState } from \"react\";\nimport interval from \"./interval\";\n\nconst use1Second = interval(100);\n\nconst useTimer = ({ seconds: initialSeconds = 0, running: initiallyRunning = false } = {}) => {\n  const [seconds, setSeconds] = useState(initialSeconds);\n  const [running, setRunning] = useState(initiallyRunning);\n  const tick = useCallback(() => (running ? setSeconds((seconds) => seconds + 10) : undefined), [running]);\n  const start = () => setRunning(true);\n  const pause = () => setRunning(false);\n  const reset = () => setSeconds(0);\n  const stop = () => {\n    pause();\n    reset();\n  };\n\n  use1Second(tick);\n\n  return { pause, reset, running, seconds, start, stop };\n};\nexport default useTimer;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/layerorders/Layer-Input/LayerInput.jsx",["1740"],"import React, { useState } from \"react\";\nimport classes from \"./LayerInput.module.css\";\n\nconst LayerInput = ({ handleAddLayer, setPrompt }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handleAddLayer(value);\n    setPrompt(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={classes.form}>\n      <input onChange={handleChange} autoFocus type=\"text\" value={value} />\n      <div className={classes.buttons}>\n        <button className={classes.add} type=\"submit\">\n          Add\n        </button>\n        <button className={classes.cancel} onClick={() => setPrompt(false)} type=\"button\">\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default LayerInput;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/menu/collection-menu.jsx",["1741","1742","1743","1744"],"import React, { useRef, useContext, useState } from \"react\";\nimport classes from \"./collection-menu.module.css\";\nimport ArtCard from \"../art-card/art-card\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { addImage } from \"../../gen-state/gen.actions\";\nimport { handleAddBlank, handleFileChange } from \"./collection-menu-script\";\nimport { ReactComponent as AddCircularIcon } from \"../../assets/icon-add.svg\";\nimport { ReactComponent as UploadIcon } from \"../../assets/icon-upload.svg\";\nimport { ReactComponent as AddIcon } from \"../../assets/icon-plus.svg\";\n\nconst CollectionMenu = ({ layer }) => {\n  const [state, setState] = useState({\n    activeCard: \"\",\n  });\n  const { activeCard } = state;\n  const { layerTitle, traits, id } = layer;\n  const { dispatch, layers, imageQuality } = useContext(GenContext);\n  const fileRef = useRef(null);\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const handleBlank = async () => {\n    let canvas = document.createElement(\"canvas\");\n    const res = await handleAddBlank({\n      layerId: id,\n      traits,\n      layerTitle,\n      canvas,\n      img: layers[0].traits[0].image,\n      imageQuality,\n    });\n    dispatch(addImage(res));\n  };\n\n  return (\n    <div className={classes.container}>\n      <section className={classes.layer}>\n        <div className={classes.heading}>\n          <h3 className={classes.title}>{layerTitle}</h3>\n          {traits.length ? (\n            <div className={classes.btnContainer}>\n              <button onClick={() => fileRef.current.click()} className={classes.upload}>\n                <UploadIcon className={classes.uploadIcon} /> Upload\n              </button>\n              <button type=\"button\" onClick={handleBlank} className={classes.addBlank}>\n                <AddIcon className={classes.addIcon} /> Add blank\n              </button>\n            </div>\n          ) : null}\n        </div>\n        {/* list of images */}\n        <div className={classes.wrapper}>\n          {traits.length ? (\n            traits.map((trait, idx) => (\n              <ArtCard\n                key={idx}\n                index={idx}\n                layerTitle={layerTitle}\n                trait={trait}\n                layerId={id}\n                setActiveCard={(activeArtCard) => handleSetState({ activeCard: activeArtCard })}\n                activeCard={activeCard}\n              />\n            ))\n          ) : (\n            <div onClick={() => fileRef.current.click()} className={classes.uploadCard}>\n              <AddCircularIcon />\n              <div>Upload images</div>\n              <div>(Image/png, max file size: 2MB per image)</div>\n              <button className={classes.uploadBtn}>\n                <UploadIcon className={classes.uploadIcon} /> Browse Files\n              </button>\n            </div>\n          )}\n        </div>\n      </section>\n\n      <input\n        onChange={(event) => dispatch(addImage(handleFileChange({ layerId: id, event, traits, layerTitle, dispatch })))}\n        ref={fileRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        name=\"avatar\"\n        id=\"avatar\"\n        accept=\"image/png\"\n        multiple\n      />\n    </div>\n  );\n};\n\nexport default CollectionMenu;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/layer/layer.jsx",["1745"],"import React, { useState, useContext } from \"react\";\nimport { setLayerAction, updateLayer } from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./layer.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport dragIcon from \"../../assets/icon-drag.svg\";\nimport { ReactComponent as EditIcon } from \"../../assets/icon-edit.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\n\nconst Layer = ({ name, trait, click, id, activeInput, setActiveInput }) => {\n  const [state, setState] = useState({\n    inputValue: \"\",\n  });\n  const { inputValue } = state;\n\n  const { dispatch } = useContext(GenContext);\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const handleRename = () => {\n    setActiveInput(\"\");\n    if (!inputValue) return;\n    dispatch(updateLayer({ layerTitle: inputValue, id }));\n    dispatch(setLayerAction({ type: \"rename\" }));\n  };\n\n  const handleEdit = (nameActive) => {\n    setActiveInput(nameActive);\n    handleSetState({ inputValue: nameActive });\n  };\n\n  return (\n    <div className={classes.item}>\n      <div className={classes._name}>\n        <div className={classes.line}>\n          <img src={dragIcon} alt=\"\" />\n        </div>\n        <div className={classes.renameWrapper}>\n          {activeInput === name ? (\n            <form onSubmit={handleRename}>\n              <input\n                className={`${classes.renameInput} ${classes.active}`}\n                type=\"text\"\n                onChange={(e) => handleSetState({ inputValue: e.target.value })}\n                value={inputValue}\n                autoFocus\n              />\n            </form>\n          ) : (\n            <div className={classes.nameHeader}>{name}</div>\n          )}\n          {activeInput === name ? (\n            <div onClick={handleRename} className={classes.renameBtn}>\n              <MarkIcon className={classes.editIcon} />\n            </div>\n          ) : (\n            <div onClick={() => handleEdit(name)} className={classes.editBtn}>\n              <EditIcon className={classes.editIcon} />\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={classes.trait}>{trait}</div>\n      <div onClick={click} className={classes.deleteBtn}>\n        <CloseIcon className={classes.closeIcon} />\n      </div>\n    </div>\n  );\n};\n\nexport default Layer;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/rulesCard/rulesCard.component.jsx",["1746","1747","1748"],"import React, { useContext, useEffect, useRef } from \"react\";\nimport { clearRule, deleteRule, promptDeleteRules, setPrompt } from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./rulesCard.module.css\";\nimport leftArrow from \"../../assets/icon-arrow-left-long.svg\";\nimport { handleImage } from \"../preview/collection-preview-script\";\n\nconst RulesCard = ({ showRule }) => {\n  const { dispatch, layers, rule, promptRules } = useContext(GenContext);\n  const canvasRef = useRef(null);\n\n  const handleClearRule = () => {\n    dispatch(setPrompt(promptDeleteRules({})));\n  };\n\n  const handleDelete = (deletRule) => {\n    dispatch(deleteRule(deletRule));\n  };\n\n  useEffect(() => {\n    if (promptRules) {\n      dispatch(clearRule());\n      showRule(false);\n      dispatch(promptDeleteRules(null));\n    }\n  }, [promptRules]);\n\n  const imageHandler = async (idx) => {\n    const canvas = canvasRef.current;\n    await handleImage({ layers, preview: rule[idx], canvas, height: 100, width: 100 });\n  };\n\n  return (\n    <div className={classes.container}>\n      <canvas className={classes.canvas} ref={canvasRef} />\n      <p>Click on a rule to show preview</p>\n      <div className={classes.wrapper}>\n        {rule.map((rl, index) => (\n          <div key={index} className={classes.conflictCard} onClick={() => imageHandler(index)}>\n            <div className={classes.content}>\n              {rl.map((r, idx) => (\n                <div key={idx} className={classes.innerContent}>\n                  <img className={classes.image} src={URL.createObjectURL(r.imageFile)} alt=\"\" />\n                  <div className={classes.description}>\n                    <div className={classes.title}>{r.layerTitle}</div>\n                    <div className={classes.text}>{r.imageName}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div onClick={() => handleDelete(rl)} className={classes.deleteRule}>\n              Delete Rule\n            </div>\n          </div>\n        ))}\n      </div>\n      {true ? (\n        <div className={classes.btnContainer}>\n          <button type=\"button\" onClick={() => showRule(false)} className={classes.closeBtn}>\n            <img src={leftArrow} alt=\"\" />\n            Go back\n          </button>\n          <button type=\"button\" onClick={handleClearRule} className={classes.deleteBtn}>\n            Delete all rules\n          </button>\n        </div>\n      ) : (\n        <div className={classes.notification}>you have not set any rule</div>\n      )}\n    </div>\n  );\n};\n\nexport default RulesCard;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/preview/collection-preview.jsx",["1749"],"import React, { useEffect, useRef, useContext } from \"react\";\nimport classes from \"./collection-preview.module.css\";\nimport { GenContext } from \"../../gen-state/gen.context\";\n// import { getImageSize } from \"../../utils\";\nimport { setPreview } from \"../../gen-state/gen.actions\";\nimport { handleImage } from \"./collection-preview-script\";\nimport assetPlaceholder from \"../../assets/asset-placeholder.png\";\n\nconst CollectionPreview = () => {\n  const { dispatch, layers, preview, imageQuality } = useContext(GenContext);\n  const canvasRef = useRef(null);\n\n  // const handleDownload = async () => {\n  //   const { width, height } = await getImageSize(layers[0].traits[0].image);\n  //   const canvas = document.createElement(\"canvas\");\n  //   await handleImage({ layers, preview, canvas, height, width });\n  //   const image = canvas.toDataURL(\"image/webp\", imageQuality);\n  //   const link = document.createElement(\"a\");\n  //   link.download = \"asset.png\";\n  //   link.href = image;\n  //   document.body.appendChild(link);\n  //   link.click();\n  //   document.body.removeChild(link);\n  // };\n\n  useEffect(() => {\n    const imageHandler = async () => {\n      const canvas = canvasRef.current;\n      await handleImage({ layers, preview, canvas, height: 200, width: 200 });\n    };\n    imageHandler();\n  }, [preview]);\n\n  useEffect(() => {\n    const newPreview = [];\n    [...layers].forEach(({ id, layerTitle }) => {\n      preview.forEach((p) => {\n        if (id === p.layerId) {\n          newPreview.push({ ...p, layerTitle });\n        }\n      });\n    });\n    dispatch(setPreview(newPreview));\n  }, [layers]);\n\n  return (\n    <div className={classes.container}>\n      <canvas style={!preview.length ? { display: \"none\" } : {}} className={classes.canvas} ref={canvasRef} />\n      {!preview.length ? (\n        <div className={classes.placeholder}>\n          <img src={assetPlaceholder} alt=\"\" />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CollectionPreview;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/details/collection-details.jsx",["1750"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./collection-details.module.css\";\n\nconst CollectionDetails = () => {\n  const { preview, layers } = useContext(GenContext);\n  const [description, setDescription] = useState([]);\n\n  useEffect(() => {\n    const result = [];\n    layers.forEach(({ layerTitle: name, traits }) => {\n      traits.forEach(({ traitTitle, Rarity }) => {\n        preview.forEach(({ layerTitle, imageName }) => {\n          if (name === layerTitle && traitTitle === imageName) {\n            result.push({ layerTitle: name, traitTitle, Rarity });\n          }\n        });\n      });\n    });\n\n    setDescription(result);\n  }, [preview, layers]);\n\n  return (\n    <div className={classes.container}>\n      <h4>Attributes</h4>\n\n      <div className={classes.content}>\n        {description.map(({ layerTitle, traitTitle, Rarity }, index) => (\n          <p key={index}>\n            <span>{`[${layerTitle}]`}</span>\n            <span>{traitTitle}</span>\n            <span>Rarity {Rarity}</span>\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CollectionDetails;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/popup/error-popup.component.jsx",["1751","1752","1753","1754","1755","1756","1757","1758","1759"],"import errorIcon from \"../../../assets/icon-error_2.svg\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport classes from \"./popup.module.css\";\n\nconst ErrorPopup = (props) => {\n  const { handleSetState, popupProps } = props;\n\n  const handleResetPopup = () => {\n    handleSetState({\n      popupProps: {\n        isError: null,\n        url: null,\n        Popup: false,\n      },\n    });\n  };\n\n  return (\n    <div className={classes.popupContainer}>\n      <CloseIcon onClick={handleResetPopup} className={classes.closeIcon} />\n      <div className={classes.imgContainer}>\n        <img src={errorIcon} alt=\"\" />\n      </div>\n      <h3 className={`${classes.heading} ${classes.error}`}>Mint Failed</h3>\n      <p className={classes.errorMsg}>{popupProps.url}</p>\n      <div className={classes.actionBtnContainer}>\n        <button onClick={handleResetPopup} className={`${classes.actionBtn} ${classes.errorBtn}`}>\n          Try Again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPopup;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/create-guide/create-guide-script.js",["1760"],"import vid1 from \"../../assets/vid/T1.mp4\";\nimport vid2 from \"../../assets/vid/T2.mp4\";\nimport vid3 from \"../../assets/vid/T3.mp4\";\nimport vid4 from \"../../assets/vid/T4.mp4\";\nimport vid5 from \"../../assets/vid/T5.mp4\";\nimport vid6 from \"../../assets/vid/T6.mp4\";\n\nexport const guide = {\n  1: {\n    vid: vid1,\n    title: \"Add layers\",\n  },\n  2: {\n    vid: vid2,\n    title: \"Upload images\",\n  },\n  3: {\n    vid: vid3,\n    title: \"Re-order layers\",\n  },\n  4: {\n    vid: vid4,\n    title: \"Set conflict rules\",\n  },\n  5: {\n    vid: vid5,\n    title: \"Input number of arts to generate\",\n  },\n  6: {\n    vid: vid6,\n    title: \"Preview and download arts\",\n  },\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/attribute-overlay/attributeOverlay.jsx",["1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780"],"import classes from \"./attributeOverlay.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\n\nconst AttributeOverlay = ({ attribute, handleSetState }) => {\n  const { file, name, description, attributes } = attribute;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.innerContainer}>\n        <div className={classes.closeBtn}>\n          <CloseIcon className={classes.closeIcon} onClick={() => handleSetState({ showAttribute: false })} />\n        </div>\n\n        <div>\n          <div className={classes.imageAndDescription}>\n            <img className={classes.image} src={URL.createObjectURL(file)} alt=\"\" />\n            <div className={classes.nameAndDescription}>\n              <div className={classes.name}>{name}</div>\n              <div className={classes.description}>{description}</div>\n            </div>\n          </div>\n          <div className={classes.attributeSection}>\n            <div className={classes.attributeHeading}>Attributes</div>\n            <div className={classes.attributeMenu}>\n              {attributes.map(({ rarity, trait_type, value }) => (\n                <div className={classes.attribute}>\n                  <div className={classes.traitTitle}>{trait_type}</div>\n                  <div>\n                    Trait: <span className={classes.traitValue}>\"{value}\"</span>\n                  </div>\n                  <div>{rarity}% have this trait</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AttributeOverlay;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Mint/popup/success-popup.component.jsx",["1781","1782","1783","1784","1785","1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1796","1797","1798","1799","1800","1801","1802"],"import successIcon from \"../../../assets/icon-success_2.svg\";\nimport linkIconAccent from \"../../../assets/icon-link-accent.svg\";\nimport linkIconWhite from \"../../../assets/icon-link-white.svg\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { useContext, useRef, useState } from \"react\";\nimport classes from \"./popup.module.css\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SuccessPopup = (props) => {\n  const clipboardRef = useRef(null);\n  const history = useHistory();\n  const { account } = useContext(GenContext);\n  const [clipboardState, setClipboardState] = useState(\"Copy\");\n\n  const {\n    handleSetState,\n    popupProps: { url },\n  } = props;\n\n  const handleCopy = (clipProps) => {\n    const { navigator, clipboard } = clipProps;\n    clipboard.select();\n    clipboard.setSelectionRange(0, 99999); /* For mobile devices */\n    navigator.clipboard.writeText(clipboard.value);\n    setClipboardState(\"Copied\");\n    setTimeout(() => {\n      setClipboardState(\"Copy\");\n    }, 650);\n  };\n\n  const handleResetPopup = () => {\n    handleSetState({\n      popupProps: {\n        isError: null,\n        url: null,\n        Popup: false,\n      },\n    });\n  };\n\n  return (\n    <div className={classes.popupContainer}>\n      <CloseIcon onClick={handleResetPopup} className={classes.closeIcon} />\n      <div className={classes.imgContainer}>\n        <img src={successIcon} alt=\"\" />\n      </div>\n      <h3 className={`${classes.heading} ${classes.success}`}>Mint Successful</h3>\n      <div className={classes.actionBtnContainer}>\n        <button\n          onClick={() => {\n            history.push(`/me/${account}`);\n          }}\n          className={`${classes.actionBtn} ${classes._1}`}\n        >\n          Go to Dashboard\n        </button>\n        <button className={`${classes.actionBtn} ${classes._2}`}>\n          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n            Block Explorer\n          </a>\n          <div className={classes.iconContainer}>\n            <img src={linkIconAccent} alt=\"\" />\n            <img src={linkIconWhite} alt=\"\" />\n          </div>\n        </button>\n      </div>\n      <div className={classes.detailsContainer}>\n        <div className={classes.tag}>Share</div>\n        <div className={classes.url}>{url}</div>\n        <button onClick={() => handleCopy({ navigator, clipboard: clipboardRef.current })} className={classes.copyBtn}>\n          {clipboardState}\n        </button>\n        <input style={{ display: \"none\" }} ref={clipboardRef} type=\"text\" defaultValue={url} />\n      </div>\n    </div>\n  );\n};\n\nexport default SuccessPopup;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/arc_config.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/history/userInput.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/NftCard/NftCard.jsx",["1803","1804"],"import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport classes from \"./NftCard.module.css\";\nimport supportedChains from \"../../../utils/supportedChains\";\nimport Copy from \"../../copy/copy\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport avatar from \"../../../assets/avatar.png\";\n\nconst NftCard = ({ nft, listed, chinPrice, useWidth, fromDashboard }) => {\n  const { Id, collection_name, name, price, image_url, chain } = nft;\n  const match = useRouteMatch();\n  const history = useHistory();\n  const breakAddress = (address = \"\", width = 6) => {\n    return address && `${address.slice(0, width)}...${address.slice(-width)}`;\n  };\n  const { account } = useContext(GenContext);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    if (!chinPrice) {\n      axios\n        .get(`https://api.coingecko.com/api/v3/simple/price?ids=${supportedChains[chain]?.id}&vs_currencies=usd`)\n        .then((res) => {\n          const value = Object.values(res?.data)[0]?.usd;\n          setTotalPrice(value * price);\n        });\n    }\n  }, []);\n\n  return (\n    <Link\n      to={\n        fromDashboard && !listed\n          ? nft.collection_name\n            ? `${match.url}/${Id}`\n            : chain\n            ? `/marketplace/1of1/preview/${chain}/${Id}`\n            : `/marketplace/1of1/preview/${Id}`\n          : nft.collection_name\n          ? `${match.url}/${Id}`\n          : chain\n          ? `/marketplace/1of1/${chain}/${Id}`\n          : `/marketplace/1of1/${Id}`\n      }\n    >\n      <div style={useWidth ? { width: useWidth } : {}} className={classes.card}>\n        <div className={classes.imageContainer}>\n          <img\n            onError={({ currentTarget }) => {\n              currentTarget.onerror = null; // prevents looping\n              currentTarget.src = image_url;\n            }}\n            src={image_url}\n            alt=\"\"\n          />\n        </div>\n        <div className={classes.cardBody}>\n          <div className={classes.collectionName}>{collection_name}</div>\n          <div className={classes.name}>{name}</div>\n          <div className={classes.chainLogo} />\n          <div className={classes.creator}>\n            <img src={avatar} alt=\"\" />\n            {!fromDashboard ? (\n              <div className={classes.creatorAddress}>\n                <div className={classes.createdBy}>Owned By</div>\n                <div className={classes.address}>{breakAddress(nft.owner)}</div>\n              </div>\n            ) : (\n              <div className={classes.createdBy}>Owned by you</div>\n            )}\n          </div>\n          <div className={classes.wrapper}>\n            <div className={classes.listPrice}>\n              <div className={classes.list}>LIST PRICE</div>\n              {price === 0 ? (\n                <div className={classes.price}>\n                  <img src={supportedChains[chain]?.icon} alt=\"\" />\n                </div>\n              ) : (\n                <div className={classes.price}>\n                  <img src={supportedChains[chain]?.icon} alt=\"\" />\n                  {parseInt(price).toFixed(2)} <span className={classes.chain}>{supportedChains[chain]?.sybmol}</span>\n                  <span className={classes.usdPrice}>\n                    ({chinPrice ? (chinPrice * price).toFixed(2) : totalPrice.toFixed(2)} USD)\n                  </span>\n                </div>\n              )}\n            </div>\n            {price === 0 ? (\n              fromDashboard ? (\n                <button\n                  type=\"button\"\n                  onClick={() => history.push(`/marketplace/1of1/preview/${chain}/${Id}`)}\n                  className={`${classes.button} ${classes.buttonSold}`}\n                >\n                  List\n                </button>\n              ) : (\n                <button type=\"button\" className={`${classes.notListed} ${classes.buttonSold}`}>\n                  Not Listed!\n                </button>\n              )\n            ) : listed ? (\n              <button type=\"button\" className={`${classes.button} ${nft.sold ? classes.buttonSold : \"\"}`}>\n                {nft.sold ? \"Sold\" : \"Buy\"}\n              </button>\n            ) : (\n              <button type=\"button\" className={`${classes.button} ${nft.sold ? classes.buttonSold : \"\"}`}>\n                {nft.sold ? \"List\" : \"Re-list\"}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default NftCard;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/history/table.jsx",["1805"],"import React from \"react\";\nimport TableRow from \"./tableRow\";\nimport classes from \"./table.module.css\";\n\nconst Table = (props) => (\n  <div className={classes.container}>\n    <table className={classes.table}>\n      <tr>\n        <th>TRANSACTION TYPE</th>\n        <th>NAME</th>\n        <th>TRANSACTION ID</th>\n        <th>TIME</th>\n        <th>UNIT PRICE</th>\n        <th>BUYER</th>\n        <th>SELLER</th>\n      </tr>\n      {props.data.map((d, i) => (\n        <TableRow\n          key={i}\n          event={d.type}\n          price={d.price}\n          quantity={1}\n          from={d.seller}\n          to={d.buyer}\n          date={d.txDate}\n          txId={d.txId}\n          chain={props.chain}\n        />\n      ))}\n    </table>\n  </div>\n);\n\nexport default Table;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/Explore/Dropdown/Dropdown.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Modals/Pricing-Modal/PaypalButton.jsx",["1806","1807","1808","1809","1810"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\n\nconst PaypalButton = ({ createOrder, createSubscription, onApprove }) => {\n  const [{ options, isResolved }] = usePayPalScriptReducer();\n\n  if (!isResolved) return <div>Loading paypal...</div>;\n\n  const oderOptions = {\n    createOrder: createOrder,\n  };\n\n  const subscriptionOptions = {\n    createSubscription: createSubscription,\n    style: {\n      label: \"subscribe\",\n    },\n  };\n\n  const buttonOptions = options.intent === \"subscription\" ? subscriptionOptions : oderOptions;\n\n  return <PayPalButtons style={{ layout: \"horizontal\" }} {...buttonOptions} onApprove={onApprove} />;\n};\n\nPaypalButton.propTypes = {\n  createOrder: PropTypes.func,\n  createSubscription: PropTypes.func,\n  onApprove: PropTypes.func.isRequired,\n};\n\nexport default PaypalButton;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/Capture/interval.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/mint-webcam/Capture/Camera/index.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/preview/collection-preview-script.js",["1811","1812","1813","1814","1815"],"export const handleImage = async ({ layers, preview, canvas, width, height }) => {\n  canvas.setAttribute(\"width\", width);\n  canvas.setAttribute(\"height\", height);\n  const ctx = canvas.getContext(\"2d\");\n  const newPreview = [];\n  [...layers].reverse().forEach(({ id, traits }) => {\n    traits.forEach(({ traitTitle, image }) => {\n      preview.forEach(({ layerId, imageName }) => {\n        if (id === layerId && traitTitle === imageName) {\n          newPreview.push(image);\n        }\n      });\n    });\n  });\n  for (const img of newPreview) {\n    const image = await new Promise((resolve) => {\n      const image = new Image();\n      image.src = URL.createObjectURL(img);\n      image.onload = () => {\n        resolve(image);\n      };\n    });\n\n    image && ctx.drawImage(image, 0, 0, width, height);\n  }\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/early-access/early-access.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Camera-Mint/CameraMint.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Join-Discord/JoinDiscord.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Docs/Docs.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Genadrop-Created-NFTs/GenadropCreatedNFTs.jsx",["1816","1817","1818"],"import React, { useEffect, useRef, useState } from \"react\";\nimport classes from \"./GenadropCreatedNFTs.module.css\";\nimport NFT1 from \"../../../assets/nft-1.png\";\nimport NFT2 from \"../../../assets/nft-2.png\";\nimport NFT3 from \"../../../assets/nft-3.png\";\nimport NFT4 from \"../../../assets/nft-4.png\";\nimport GenadropCarouselCard from \"../../Genadrop-Carousel-Card/GenadropCarouselCard\";\n\nconst cardArr = [\n  {\n    NFT: NFT1,\n    name: \"Minority x H.E.R\",\n  },\n  {\n    NFT: NFT2,\n    name: \"Minority Drop\",\n  },\n  {\n    NFT: NFT3,\n    name: \"Minority x H.E.R\",\n  },\n  {\n    NFT: NFT4,\n    name: \"Minority x H.E.R\",\n  },\n];\n\nconst GenadropCreatedNFTs = () => {\n  const cardRef = useRef(null);\n\n  const [state, setState] = useState({\n    cardWidth: 0,\n  });\n\n  const { cardWidth } = state;\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  useEffect(() => {\n    const cardWidth = cardRef.current && cardRef.current.getBoundingClientRect().width;\n    handleSetState({ cardWidth });\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.heading}>\n        NFTs created with <span>Genadrop</span>\n      </div>\n      <div className={classes.description}>Browse notable NFTs created with Genadrop NFT Creator</div>\n      <GenadropCarouselCard cardWidth={cardWidth} gap={16}>\n        {cardArr.map((card, id) => (\n          <div key={id} ref={cardRef} className={classes.card}>\n            <img src={card.NFT} alt=\"\" />\n            <div className={classes.name}>{card.name}</div>\n          </div>\n        ))}\n      </GenadropCarouselCard>\n    </div>\n  );\n};\n\nexport default GenadropCreatedNFTs;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/history/tableRow.jsx",["1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839"],"import React, { useState, useRef, useEffect } from \"react\";\nimport classes from \"./tableRow.module.css\";\nimport saleIcon from \"../../../assets/sale-icon.png\";\nimport transferIcon from \"../../../assets/mint-icon.png\";\nimport mintIcon from \"../../../assets/mint-icon.png\";\nimport Transaction from \"../../transactionDetails/TransactionDetails\";\nimport { readUserProfile } from \"../../../utils/firebase\";\n\nconst TableRow = (data) => {\n  const [state, setState] = useState({\n    showTransaction: false,\n    to: \"\",\n    from: \"\",\n    userDetails: \"\",\n  });\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n  const { showTransaction, to, from, userDetails } = state;\n\n  function breakAddress(address = \"\", width = 6) {\n    if (!address) return \"--\";\n    return `${address.slice(0, width)}...${address.slice(-width)}`;\n  }\n\n  useEffect(() => {\n    (async function getUsername() {\n      const data = await readUserProfile(to);\n\n      handleSetState({ userDetails: data });\n      readUserProfile(to).then((data) => {\n        if (data) setState({ to: data.username });\n      });\n\n      readUserProfile(from).then((data) => {\n        if (data) setState({ from: data.username });\n      });\n    })();\n  }, []);\n  const icons = [saleIcon, transferIcon, mintIcon];\n  const getDate = () => {\n    let newDate = data.date.seconds;\n    if (!newDate) {\n      newDate = data.date;\n    }\n    let now = new Date();\n    let date = new Date(newDate * 1000);\n    let diff = (now.getTime() - date.getTime()) / (1000 * 3600 * 24);\n    if (diff < 0.04) return parseInt(diff * 24 * 60) + \" mins ago\";\n    else if (diff < 1) return parseInt(diff * 24) + \" hours ago\";\n    else if (diff < 31) return parseInt(diff) + \" days ago\";\n    else if (diff < 356) return parseInt(diff / 30) + \" months ago\";\n    else return diff / 30 / 12 + \" years ago\";\n  };\n\n  const icon = () => {\n    let icon = \"\";\n    switch (data.event) {\n      case \"Sale\":\n        icon = icons[0];\n        break;\n      case \"Transfer\":\n        icon = icons[1];\n        break;\n      case \"Minting\":\n        icon = icons[2];\n        break;\n      case \"Listing\":\n        icon = icons[1];\n        break;\n      default:\n        break;\n    }\n    return icon;\n  };\n\n  const handleClick = () => {\n    handleSetState({ showTransaction: true });\n  };\n\n  const wrapperRef = useRef(null);\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          handleSetState({ showTransaction: false });\n        }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useOutsideAlerter(wrapperRef);\n  return (\n    <>\n      {showTransaction ? (\n        <div ref={wrapperRef}>\n          <Transaction data={data} date={getDate(data.date)} chain={data.chain} />\n        </div>\n      ) : null}\n      <tr className={classes.transaction} onClick={handleClick}>\n        <td>\n          <span className={classes.icon}>\n            <img src={icon()} alt=\"\" />\n          </span>\n          {data.event}\n        </td>\n        <td>{userDetails?.username ? userDetails?.username : breakAddress(data.to)}</td>\n\n        <td>{!data.txId ? \"--\" : breakAddress(data.txId)}</td>\n        <td>{getDate(data.date)}</td>\n        <td>{!data.price ? \"--\" : data.price}</td>\n        <td>{to ? to : breakAddress(data.to)}</td>\n        <td>{from ? from : breakAddress(data.from)}</td>\n      </tr>\n    </>\n  );\n};\n\nexport default TableRow;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Genadrop-Carousel-Card/GenadropCarouselCard.jsx",["1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853"],"import { useEffect, useRef, useState } from \"react\";\nimport classes from \"./GenadropCarouselCard.module.css\";\nimport iconRight from \"../../assets/icon-angle-right.svg\";\nimport iconLeft from \"../../assets/icon-angle-left.svg\";\nimport { useWheel } from \"@use-gesture/react\";\n\nconst GenadropCarouselCard = ({ children, cardWidth, gap = 16 }) => {\n  const cardContainerRef = useRef(null);\n  const wrapperRef = useRef(null);\n  const run = useRef(null);\n\n  const [state, setState] = useState({\n    wrapperWidth: 0,\n    slideNumberOfCounts: 0,\n  });\n\n  const { wrapperWidth, slideNumberOfCounts } = state;\n  const [slideActiveCount, setSlideActiveCount] = useState(0);\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  const handleSlideLeft = () => {\n    if (slideActiveCount <= 0) return;\n    setSlideActiveCount((sc) => sc - 1);\n  };\n\n  const handleSlideRight = () => {\n    if (slideActiveCount >= slideNumberOfCounts) return;\n    setSlideActiveCount((sc) => sc + 1);\n  };\n\n  const bind = useWheel(({ wheeling, movement: [x] }) => {\n    if (x > 0 && run.current) {\n      handleSlideRight();\n      run.current = false;\n    } else if (x < 0 && run.current) {\n      handleSlideLeft();\n      run.current = false;\n    }\n\n    if (!wheeling) {\n      run.current = true;\n    }\n  });\n\n  useEffect(() => {\n    cardContainerRef.current.style.transform = `translateX(-${\n      slideActiveCount * cardWidth + slideActiveCount * gap\n    }px)`;\n  }, [slideActiveCount]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      handleSetState({ wrapperWidth: wrapperRef.current && wrapperRef.current.getBoundingClientRect().width });\n    });\n  }, []);\n\n  useEffect(() => {\n    const width = wrapperRef.current && wrapperRef.current.getBoundingClientRect().width;\n    const length = children.length;\n    const slideNumberOfCounts = length - Math.floor(width / (cardWidth + gap / 1.5));\n    handleSetState({ slideNumberOfCounts });\n    if (!slideNumberOfCounts) {\n      setSlideActiveCount(0);\n    }\n  }, [wrapperWidth, children]);\n\n  return (\n    <div className={classes.container}>\n      <div ref={wrapperRef} className={classes.wrapper} {...bind()}>\n        <div style={{ gap }} ref={cardContainerRef} className={classes.cardContainer}>\n          {children}\n        </div>\n        {slideNumberOfCounts ? (\n          <>\n            <button\n              onClick={handleSlideLeft}\n              className={`${classes.ctrlBtn_left} ${slideActiveCount && classes.active}`}\n            >\n              <img src={iconLeft} alt=\"\" />\n            </button>\n            <button\n              onClick={handleSlideRight}\n              className={`${classes.ctrlBtn_right} ${slideActiveCount < slideNumberOfCounts && classes.active}`}\n            >\n              <img src={iconRight} alt=\"\" />\n            </button>\n          </>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default GenadropCarouselCard;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/transactionDetails/TransactionDetails.jsx",["1854","1855","1856","1857","1858","1859","1860","1861","1862"],"import React, { useState, useRef, useEffect } from \"react\";\nimport classes from \"./transaction.module.css\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport algoIcon from \"../../assets/icon-algo.svg\";\nimport supportedChains from \"../../utils/supportedChains\";\nimport { chainIdToParams } from \"../../utils/chainConnect\";\nconst Transaction = (data) => {\n  function breakAddress(address = \"\", width = 6) {\n    if (!address) return \"--\";\n    return `${address.slice(0, width)}...${address.slice(-width)}`;\n  }\n\n  const [state, setState] = useState({\n    explorer:\n      process.env.REACT_APP_ENV_STAGING === \"false\" ? \"https://algoexplorer.io/\" : \"https://testnet.algoexplorer.io/\",\n    isCopied: false,\n    showDrop: false,\n    clicked: \"\",\n  });\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  useEffect(() => {\n    if (chainIdToParams[data?.chain]) {\n      handleSetState({ explorer: chainIdToParams[data.chain].blockExplorerUrls });\n    }\n  });\n  const wrapperRef = useRef(null);\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          handleSetState({ showDrop: false });\n        }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  useOutsideAlerter(wrapperRef);\n\n  const { explorer, isCopied, clicked } = state;\n\n  const onCopyText = () => {\n    handleSetState({ isCopied: true });\n\n    setTimeout(() => {\n      handleSetState({ isCopied: false, showDrop: false, clicked: \"\" });\n    }, 1000);\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.title}>{data.data.event}</div>\n      <div className={classes.subTitle}>Transaction Detail Preview</div>\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td>Transaction ID</td>\n            <td\n              className={classes.txId}\n              onClick={() => {\n                handleSetState({ clicked: \"txId\" });\n              }}\n              ref={wrapperRef}\n            >\n              {breakAddress(data.data.txId)}\n              {data.data.txId && clicked == \"txId\" ? (\n                isCopied ? (\n                  <div className={classes.copied}>Copied!</div>\n                ) : (\n                  <div className={classes.clickable}>\n                    <CopyToClipboard text={data.data.txId}>\n                      <span className={classes.copy} onClick={onCopyText}>\n                        Copy\n                      </span>\n                    </CopyToClipboard>\n                    <a href={explorer + \"tx/\" + data.data.txId} target=\"_blank\">\n                      <span className={classes.explore}>Go to Explorer</span>\n                    </a>\n                  </div>\n                )\n              ) : (\n                \"\"\n              )}\n            </td>\n          </tr>\n          <tr>\n            <td>Date</td>\n            <td> {data.date}</td>\n          </tr>\n          <tr>\n            <td>From</td>\n            <td\n              className={classes.txId}\n              onClick={() => {\n                handleSetState({ clicked: \"from\" });\n              }}\n              ref={wrapperRef}\n            >\n              {breakAddress(data.data.from)}\n              {data.data.from && clicked === \"from\" ? (\n                isCopied ? (\n                  <div className={classes.copied}>Copied!</div>\n                ) : (\n                  <div className={classes.clickable}>\n                    <CopyToClipboard text={data.data.from}>\n                      <span className={classes.copy} onClick={onCopyText}>\n                        Copy\n                      </span>\n                    </CopyToClipboard>\n                    <a href={explorer + \"address/\" + data.data.from} target=\"_blank\">\n                      <span className={classes.explore}>Go to Explorer</span>\n                    </a>\n                  </div>\n                )\n              ) : (\n                \"\"\n              )}\n            </td>\n          </tr>\n          <tr>\n            <td>To</td>\n            <td\n              className={classes.txId}\n              onClick={() => {\n                handleSetState({ clicked: \"to\" });\n              }}\n              ref={wrapperRef}\n            >\n              {breakAddress(data.data.to)}\n              {data.data.to && clicked === \"to\" ? (\n                isCopied ? (\n                  <div className={classes.copied}>Copied!</div>\n                ) : (\n                  <div className={classes.clickable}>\n                    <CopyToClipboard text={data.data.to}>\n                      <span className={classes.copy} onClick={onCopyText}>\n                        Copy\n                      </span>\n                    </CopyToClipboard>\n                    <a href={explorer + \"address/\" + data.data.to} target=\"_blank\">\n                      <span className={classes.explore}>Go to Explorer</span>\n                    </a>\n                  </div>\n                )\n              ) : (\n                \"\"\n              )}\n            </td>\n          </tr>\n          {data.data.price ? (\n            <tr>\n              <td>Amount ID</td>\n              <td className={classes.icon}>\n                {\" \"}\n                {data.data.price}\n                <img src={data.chain ? supportedChains[data.chain].icon : algoIcon} alt=\"\" />{\" \"}\n              </td>\n            </tr>\n          ) : (\n            \"\"\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Transaction;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/art-card/art-card.jsx",["1863","1864","1865","1866"],"import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  addPreview,\n  removeImage,\n  removePreview,\n  setImageAction,\n  updateImage,\n  updatePreview,\n} from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport classes from \"./art-card.module.css\";\nimport checkActiveIcon from \"../../assets/icon-check-active.svg\";\nimport checkIcon from \"../../assets/icon-check.svg\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as EditIcon } from \"../../assets/icon-edit.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\n\nconst ArtCard = ({ layerTitle, trait, setActiveCard, activeCard, layerId, index }) => {\n  const [state, setState] = useState({\n    prompt: \"\",\n    inputValue: {\n      name: trait.traitTitle,\n      rarity: trait.Rarity,\n    },\n    previousValue: \"\",\n  });\n  const { prompt, inputValue, previousValue } = state;\n  const { image, traitTitle, Rarity } = trait;\n  const { dispatch, preview, isRule } = useContext(GenContext);\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const handleAddPreview = (name, imageFile) => {\n    dispatch(addPreview({ layerId, layerTitle, imageName: name, imageFile }));\n    setActiveCard(index);\n  };\n\n  const handleRemove = () => {\n    console.log(\"delete trait starts\");\n    dispatch(removePreview({ layerId, layerTitle, imageName: traitTitle }));\n    dispatch(removeImage({ layerId, layerTitle, traitTitle }));\n    dispatch(\n      setImageAction({\n        type: \"delete\",\n        value: {\n          id: layerId,\n          traitTitle,\n        },\n      })\n    );\n    console.log(\"delete trait ends\");\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    handleSetState({ inputValue: { ...inputValue, [name]: value } });\n  };\n\n  const handleRename = (e, imageFile) => {\n    e.preventDefault();\n    preview.forEach((item) => {\n      if (item.layerId === layerId && item.imageName === previousValue) {\n        dispatch(updatePreview({ layerId, layerTitle, imageName: inputValue.name, imageFile }));\n      }\n    });\n    handleSetState({ prompt: \"\" });\n    dispatch(\n      updateImage({\n        layerId,\n        layerTitle,\n        image,\n        traitTitle: inputValue.name,\n        Rarity: Number(inputValue.rarity) > 100 ? \"100\" : Number(inputValue.rarity) < 1 ? \"1\" : inputValue.rarity,\n      })\n    );\n    if (prompt === \"name\" && previousValue !== inputValue.name) {\n      dispatch(\n        setImageAction({\n          type: \"rename\",\n          value: {\n            id: layerId,\n            oldName: previousValue,\n            newName: inputValue.name,\n            image,\n          },\n        })\n      );\n    }\n  };\n\n  const handlePrompt = (value) => {\n    handleSetState({ prompt: value });\n    setActiveCard(index);\n    handleSetState({ previousValue: traitTitle });\n  };\n\n  useEffect(() => {\n    if (activeCard !== traitTitle) handleSetState({ prompt: \"\" });\n  }, [activeCard, traitTitle]);\n\n  useEffect(() => {\n    if (!preview.length) {\n      setActiveCard(-1);\n    }\n  }, [preview]);\n\n  return (\n    <div className={`${classes.container} ${activeCard === index ? classes.active : classes.inActive}`}>\n      <div className={classes.action}>\n        {!isRule ? (\n          <i />\n        ) : activeCard === index ? (\n          <img src={checkActiveIcon} alt=\"\" />\n        ) : (\n          <img src={checkIcon} alt=\"\" onClick={() => handleAddPreview(traitTitle, image)} />\n        )}\n        <CloseIcon onClick={handleRemove} className={classes.closeIcon} />\n      </div>\n      <div onClick={() => handleAddPreview(traitTitle, image)} className={classes.imageContainer}>\n        <img className={classes.image} src={URL.createObjectURL(image)} alt=\"avatar\" />\n      </div>\n      <div className={classes.details}>\n        <div>\n          {prompt !== \"name\" ? (\n            <div className={classes.inputText}>\n              <div>{traitTitle}</div>\n              <EditIcon onClick={() => handlePrompt(\"name\")} className={classes.editIcon} />\n            </div>\n          ) : (\n            <div className={classes.editInput}>\n              <form onSubmit={(e) => handleRename(e, image)}>\n                <input autoFocus type=\"text\" name=\"name\" value={inputValue.name} onChange={handleChange} />\n              </form>\n              <MarkIcon onClick={(e) => handleRename(e, image)} className={classes.editIcon} />\n            </div>\n          )}\n        </div>\n\n        <div>\n          {prompt !== \"rarity\" ? (\n            <div className={classes.inputText}>\n              <div>Rarity: {Rarity}</div>\n              <EditIcon onClick={() => handlePrompt(\"rarity\")} className={classes.editIcon} />\n            </div>\n          ) : (\n            <div className={classes.editInput}>\n              <form onSubmit={handleRename}>\n                <input\n                  autoFocus\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"100\"\n                  name=\"rarity\"\n                  value={inputValue.rarity}\n                  onChange={handleChange}\n                />\n              </form>\n              <MarkIcon className={classes.editIcon} onClick={handleRename} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ArtCard;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/error-boundary/Error.jsx",["1867","1868","1869","1870"],"import React, { useLayoutEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport wrongSvg from \"../../assets/something_wrong.svg\";\nimport classes from \"./something_wrong.module.css\";\n\nconst SomethingWentWrong = () => {\n  const history = useHistory();\n  const goHome = () => {\n    history.push(\"/\");\n    window.location.reload();\n  };\n\n  useLayoutEffect(() => {\n    let hideFooter = document.getElementById(\"hide-footer\");\n    if (hideFooter) {\n      hideFooter.style.display = \"none\";\n    }\n  }, []);\n\n  return (\n    <div className={classes[\"container\"]}>\n      <div className={classes[\"not-found\"]}>\n        <img src={wrongSvg} alt=\"\" />\n        <h1>Oops something went wrong</h1>\n        <div className={classes[\"text\"]}>\n          <span>We are working to fix it, click the refresh button to reload page.</span>\n        </div>\n      </div>\n      <div className={classes[\"button-container\"]}>\n        <div onClick={goHome} className={classes[\"home\"]}>\n          Take Me Home\n        </div>\n        <div onClick={() => window.location.reload()} className={classes[\"go-back\"]}>\n          Refresh\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SomethingWentWrong;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/FAQ/FAQ.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/footer/footer-script.js",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Orgs/Orgs.jsx",["1871","1872"],"import React from \"react\";\nimport classes from \"./Orgs.module.css\";\nimport org1 from \"../../../assets/org1.svg\";\nimport org2 from \"../../../assets/org2.svg\";\nimport org3 from \"../../../assets/org3.svg\";\nimport org4 from \"../../../assets/org4.svg\";\nimport box from \"../../../assets/box.svg\";\nimport ball from \"../../../assets/ball.svg\";\n\nconst Orgs = () => (\n  <div className={classes.container}>\n    <div className={classes.wrapper}>\n      <div className={classes.heading}>\n        Backed by the Web3&apos;s <span>Best Orgs</span>\n      </div>\n      <div className={classes.description}>\n        From the leading blockchains, creative groups, and DAOs, GenaDrop is supported by the industry’s best.\n      </div>\n      <div className={classes.orgs}>\n        <img\n          className={classes.org}\n          onClick={() => window.open(\"https://celocommunityfund.org/\", \"_blank\")}\n          src={org4}\n          alt=\"org-logo\"\n        />\n        <img\n          className={classes.org}\n          onClick={() => window.open(\"https://near.foundation/\", \"_blank\")}\n          src={org3}\n          alt=\"org-logo\"\n        />\n        <img\n          className={classes.org}\n          onClick={() => window.open(\"https://www.algorand.com/\", \"_blank\")}\n          src={org2}\n          alt=\"org-logo\"\n        />\n        <img\n          className={classes.org}\n          onClick={() => window.open(\"https://www.minorityprogrammers.com/\", \"_blank\")}\n          src={org1}\n          alt=\"org-logo\"\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default Orgs;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Review/Review.jsx",["1873","1874","1875","1876","1877"],"import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport GenadropCarouselCard from \"../../Genadrop-Carousel-Card/GenadropCarouselCard\";\nimport classes from \"./Review.module.css\";\nimport twitterIcon from \"../../../assets/twitter/icon-twitter2.svg\";\nimport { getFormattedDateTweets, twitterAPIURL } from \"./Reviews-Script\";\n\nconst reviews = [\n  \"1486289656203427845\",\n  \"1484447708668649475\",\n  \"1473516385691062273\",\n  \"1507735586190381056\",\n  \"1542292827203284998\",\n  \"1541303812979400704\",\n  \"1539289304853360644\",\n];\n\nconst Review = () => {\n  const cardRef = useRef(null);\n\n  const [state, setState] = useState({\n    cardWidth: 0,\n    tweetsData: [],\n  });\n\n  const { cardWidth, tweetsData } = state;\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  const formattedContent = (content) => {\n    return `${content.substring(0, 140)}...`;\n  };\n\n  useEffect(() => {\n    const cardWidth = cardRef.current && cardRef.current.getBoundingClientRect().width;\n    handleSetState({ cardWidth });\n  }, [tweetsData]);\n\n  useEffect(() => {\n    axios\n      .get(`https://cors-demo-app1.herokuapp.com/${twitterAPIURL(reviews)}`, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_TWITTER_ACCESS_TOKEN}`,\n        },\n      })\n      .then((data) => {\n        let tweets = data.data;\n        const attachments = {};\n        const users = {};\n        data.data.includes.users.forEach((element) => {\n          users[element.id] = {\n            id: element.id,\n            username: element.username,\n            profile_image_url: element.profile_image_url,\n            name: element.name,\n          };\n        });\n        data.data.includes.media.forEach((element) => {\n          let img;\n          if (element?.type === \"photo\") {\n            img = element?.url;\n          } else {\n            img = element.variants[0]?.url;\n          }\n          attachments[element.media_key] = {\n            media_key: element.media_key,\n            type: element?.type,\n            url: img,\n          };\n        });\n        tweets = data.data.data.map((tweet) => {\n          return {\n            id: tweet.id,\n            media: attachments[tweet?.attachments?.media_keys[0]],\n            author_id: users[tweet?.author_id],\n            created_at: tweet?.created_at,\n            text: tweet.text?.split(\"https://t.co/\")[0],\n            url: `https://twitter.com/${users[tweet?.author_id]?.username}/status/${tweet.id}`,\n            domain: \"Twitter Web App\",\n            icon: twitterIcon,\n            links: tweet.entities?.urls?.filter((link) => !link.display_url.includes(\"pic.twitter\"))[0],\n          };\n        });\n        tweets.sort(function (a, b) {\n          return new Date(b.created_at) - new Date(a.created_at);\n        });\n        handleSetState({ tweetsData: tweets });\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.heading}>\n        Keep Up To Date for <span>Early Access</span>\n      </div>\n      <div className={classes.description}>See what the buzz about GenaDrop is on twitter.</div>\n      <GenadropCarouselCard cardWidth={cardWidth} gap={16}>\n        {tweetsData.map((review) => (\n          <a href={review.url} target=\"_blank\" rel=\"noreferrer\" key={review.id} ref={cardRef} className={classes.card}>\n            <div className={classes.header}>\n              <img src={review.icon} alt=\"\" className={classes.icon} />\n              <div className={classes.date}>{getFormattedDateTweets(review.created_at)}</div>\n              <div className={classes.domain}>{review.domain}</div>\n            </div>\n            {review?.media?.type === \"photo\" && review?.media?.url ? (\n              <img src={review.media.url} alt=\"\" className={classes.banner} />\n            ) : review?.media?.url ? (\n              <video className={classes.banner} src={review.media?.url} loop />\n            ) : (\n              \"\"\n            )}\n            <div className={classes.content}>{formattedContent(review.text)}</div>\n            <div className={classes.line} />\n            <div className={classes.footer}>\n              <img className={classes.thumbnail} src={review.author_id.profile_image_url} alt=\"\" />\n              <div className={classes.wrapper}>\n                <div className={classes.name}>{review.author_id.name}</div>\n                <div className={classes.handle}>@{review.author_id.username}</div>\n              </div>\n            </div>\n          </a>\n        ))}\n      </GenadropCarouselCard>\n    </div>\n  );\n};\n\nexport default Review;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Features/Features.jsx",["1878","1879"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./Features.module.css\";\nimport { features } from \"./Feature-Script\";\nimport { ReactComponent as LinkIcon } from \"../../../assets/icon-arr-right-long.svg\";\n\nconst Features = () => {\n  useEffect(() => {\n    const cards = document.getElementsByClassName(\"features-card\");\n    const offSet = 100;\n    window.addEventListener(\"scroll\", () => {\n      for (const card of cards) {\n        const cardTop = card.getBoundingClientRect().top;\n        if (cardTop + offSet <= window.innerHeight) {\n          card.children[0].style.transform = \"translateX(0)\";\n          card.children[1].style.transform = \"translateX(0)\";\n        } else {\n          card.children[0].style.transform = \"translateX(-3em)\";\n          card.children[1].style.transform = \"translateX(3em)\";\n        }\n      }\n    });\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.heading}>\n        The All in One No Code Solution <br /> for your NFT Needs\n      </div>\n      <div className={classes.description}>\n        Create, Mint & Sell forward faster with <span>no-code</span> tool that perfectly guide you from NFT Creation to\n        Sale.\n      </div>\n      <div className={classes.wrapper}>\n        {features.map((f, idx) => (\n          <div key={idx} className={`${classes.featureContainer} ${idx % 2 !== 0 && classes.not} features-card`}>\n            <div className={classes.content}>\n              <div className={classes.fHeading}>{f.heading}</div>\n              <div className={classes.fTitle}>{f.title}</div>\n              <div className={classes.fDescription}>{f.description}</div>\n              <Link to={f.url} className={classes.fLink}>\n                <div>{f.link}</div>\n                <LinkIcon />\n              </Link>\n            </div>\n            <img className={classes.image} src={f.image} alt=\"\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Features;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Banner/Banner.jsx",["1880","1881"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./Banner.module.css\";\nimport playIcon from \"../../../assets/icon-play.svg\";\n// import Lottie from \"react-lottie\";\nimport appBanner from \"../../../assets/app-banner.svg\";\n\nconst Banner = () => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: require(\"../../../assets/lottie/data.json\"),\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.wrapper}>\n        <div className={classes.content}>\n          <div className={classes.title}>\n            The No code Art <br /> tool for NFT\n            <div className={classes.features}>\n              <div className={classes.fWrapper}>\n                <div>Creation</div>\n                <div>Minting</div>\n                <div>Marketplace</div>\n              </div>\n            </div>\n          </div>\n          <div className={classes.description}>\n            Generate all combinations from your art assets, preview and edit meta data, upload to ipfs, mint, and list\n            to multiple blockchains with <span>NO CODE</span>.\n          </div>\n          <div className={classes.btns}>\n            <Link to=\"/create\" className={classes.btn_create}>\n              Create\n            </Link>\n            <Link to=\"/marketplace\" className={classes.btn_explore}>\n              Explore\n            </Link>\n          </div>\n          <a\n            href=\"https://www.youtube.com/watch?v=wC0odzMW_9g&list=PLfkTuB2ltX12uhYARs5GbE0stptAFSacC\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className={classes.btn_video}\n          >\n            <img src={playIcon} alt=\"\" />\n            <div>Learn more about Genadrop</div>\n          </a>\n        </div>\n        <div className={classes.illustration}>\n          {/* <Lottie options={defaultOptions} height=\"100%\" width=\"100%\" /> */}\n          <img src={appBanner} alt=\"\" />\n        </div>\n        <a\n          href=\"https://www.youtube.com/watch?v=wC0odzMW_9g&list=PLfkTuB2ltX12uhYARs5GbE0stptAFSacC\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className={classes.btn_video_m}\n        >\n          <img src={playIcon} alt=\"\" />\n          <div>Learn more about Genadrop</div>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/New-Listing/NewListing.jsx",["1882","1883","1884","1885","1886"],"import React, { useContext, useEffect, useState } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport classes from \"./NewListing.module.css\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport CollectionsCard from \"../collectionsCard/collectionsCard\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport NotFound from \"../../not-found/notFound\";\nimport GenadropCarouselScreen from \"../../Genadrop-Carousel-Screen/GenadropCarouselScreen\";\nimport ChainDropdown from \"../Chain-dropdown/chainDropdown\";\n\nconst NewListing = () => {\n  const { auroraCollections, algoCollections, polygonCollections, celoCollections } = useContext(GenContext);\n  const algoCollectionsArr = algoCollections\n    ? Object.values(algoCollections).sort(\n        (collection_a, collection_b) => collection_a.createdAt[\"seconds\"] - collection_b.createdAt[\"seconds\"]\n      )\n    : [];\n\n  const [state, setState] = useState({\n    filteredCollection: [],\n    nearCollection: null,\n    allChains: null,\n    init: false,\n    filter: {\n      chain: \"All Chains\",\n    },\n  });\n\n  const { nearCollection, filter, filteredCollection, init } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const getCollectionByChain = (network = filter.chain) => {\n    switch (network.toLowerCase().replace(/ /g, \"\")) {\n      case \"allchains\":\n        return !algoCollectionsArr && !polygonCollections && !celoCollections && !nearCollection && !auroraCollections\n          ? null\n          : [\n              ...(algoCollectionsArr || []),\n              ...(polygonCollections || []),\n              ...(celoCollections || []),\n              ...(auroraCollections || []),\n              ...(nearCollection || []),\n            ];\n      case \"algorand\":\n        return algoCollectionsArr;\n      case \"polygon\":\n        return polygonCollections;\n      case \"celo\":\n        return celoCollections;\n      case \"near\":\n        return nearCollection;\n      case \"aurora\":\n        return auroraCollections;\n      default:\n        break;\n    }\n    return null;\n  };\n\n  const chainChange = (value) => {\n    handleSetState({ filter: { ...filter, chain: value } });\n    const collection = getCollectionByChain(value.toLowerCase().replace(/ /g, \"\"));\n    if (collection) {\n      handleSetState({ filteredCollection: collection });\n    } else {\n      handleSetState({ filteredCollection: null });\n    }\n    handleSetState({ init: !init });\n  };\n\n  useEffect(() => {\n    const collection = getCollectionByChain(filter.chain);\n    if (collection) {\n      handleSetState({ filteredCollection: collection });\n    } else {\n      handleSetState({ filteredCollection: null });\n    }\n  }, [algoCollections, polygonCollections, celoCollections, auroraCollections]);\n\n  useEffect(() => {\n    window.localStorage.activeCollection = null;\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.heading}>\n        <h3>What's New</h3>\n        <ChainDropdown onChainFilter={chainChange} />\n      </div>\n\n      <GenadropCarouselScreen cardWidth={16 * 20} gap={16} init={init}>\n        {filteredCollection?.length ? (\n          filteredCollection.map((collection, idx) => (\n            <CollectionsCard useWidth=\"20em\" key={idx} collection={collection} />\n          ))\n        ) : !filteredCollection ? (\n          <NotFound />\n        ) : (\n          [...new Array(4)].map((_, idx) => (\n            <div className={classes.skeleton} useWidth=\"20em\" key={idx}>\n              <Skeleton count={1} height={250} />\n              <br />\n              <Skeleton count={1} height={30} />\n              <br />\n              <Skeleton count={1} height={30} />\n            </div>\n          ))\n        )}\n      </GenadropCarouselScreen>\n    </div>\n  );\n};\n\nexport default NewListing;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Chains/Chains.jsx",["1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898","1899","1900","1901"],"import { useEffect, useRef, useState } from \"react\";\nimport GenadropCarouselCard from \"../../Genadrop-Carousel-Card/GenadropCarouselCard\";\nimport { chains } from \"./Chains-Script\";\nimport classes from \"./Chains.module.css\";\nimport { useHistory, useRouteMatch, useLocation } from \"react-router-dom\";\n\nconst Chains = () => {\n  const cardRef = useRef(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  const { url } = useRouteMatch();\n\n  const [state, setState] = useState({\n    cardWidth: 0,\n  });\n\n  const { cardWidth } = state;\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  const handleClick = (name, isComingSoon) => {\n    if (isComingSoon) return;\n    history.push(`${url}/collections/${`?chain=${name}`}`);\n  };\n\n  useEffect(() => {\n    const cardWidth = cardRef.current && cardRef.current.getBoundingClientRect().width;\n    handleSetState({ cardWidth });\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.wrapper}>\n        <div className={classes.heading}>\n          <h3>Start Exploring Now</h3>\n          <p className={classes.description}>\n            Explore/List your NFTs on the next generation of multi-chains NFT trading marketplace\n          </p>\n        </div>\n        <GenadropCarouselCard cardWidth={cardWidth} gap={16}>\n          {chains.map((chain, idx) => (\n            <div\n              onClick={() => handleClick(chain.name, chain.isComingSoon)}\n              style={{ background: chain.bg, borderColor: chain.border }}\n              key={idx}\n              ref={cardRef}\n              className={`${classes.card} ${chain.isComingSoon && classes.inActive}`}\n            >\n              <img src={chain.icon} alt=\"\" />\n              <div style={{ color: chain.color }}>{chain.name}</div>\n              {chain.isComingSoon ? (\n                <div style={{ color: chain.color }} className={classes.soon}>\n                  coming soon\n                </div>\n              ) : null}\n            </div>\n          ))}\n        </GenadropCarouselCard>\n      </div>\n    </div>\n  );\n};\n\nexport default Chains;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Banner/Banner.jsx",["1902","1903","1904","1905","1906","1907"],"import React from \"react\";\nimport { useRef, useEffect, useState } from \"react\";\nimport classes from \"./Banner.module.css\";\nimport img1 from \"../../../assets/banner-1.png\";\nimport img2 from \"../../../assets/banner-2.png\";\nimport img3 from \"../../../assets/banner-3.png\";\nimport bannerImg from \"../../../assets/banner.png\";\n\nconst Banner = () => {\n  const [image, setImage] = useState([img1, img2, img3]);\n  const [animate, setAnimate] = useState(false);\n  const [counter, setCounter] = useState(0);\n  const cardRef = useRef();\n  const bannerRef = useRef();\n\n  const handleSet = () => {\n    const img = [...image];\n    img.unshift(img.pop());\n    setImage(img);\n    setAnimate(true);\n  };\n\n  const handleClick = () => {\n    const height = bannerRef.current.getBoundingClientRect().height;\n    document.documentElement.scrollTop = height;\n  };\n\n  useEffect(() => {\n    cardRef.current.onanimationend = () => {\n      setAnimate(false);\n    };\n\n    setInterval(() => {\n      setCounter((c) => (c >= image.length - 1 ? 0 : c + 1));\n    }, 5000);\n  }, []);\n\n  useEffect(() => {\n    handleSet();\n  }, [counter]);\n\n  return (\n    <div ref={bannerRef} style={{ backgroundImage: `url(${bannerImg})` }} className={classes.container}>\n      <div className={classes.wrapper}>\n        <div className={classes.content}>\n          <div className={classes.title}>Explore Unique and Exclusive NFTs across different blockchains</div>\n          <div className={classes.description}>\n            The first NFT marketplace that enables creators to create their generative NFTs and embed licenses{\" \"}\n          </div>\n          <div onClick={handleClick} className={classes.btn}>\n            Explore\n          </div>\n        </div>\n        <div className={`${classes.cardContainer} ${animate && classes.active}`}>\n          <img src={image[0]} alt=\"\" className={classes.cardLeft} />\n          <img src={image[1]} alt=\"\" ref={cardRef} className={classes.cardCenter} />\n          <img src={image[2]} alt=\"\" className={classes.cardRight} />\n          <div className={classes.indicator}>\n            <div className={`${counter === 0 && classes.active}`}></div>\n            <div className={`${counter === 1 && classes.active}`}></div>\n            <div className={`${counter === 2 && classes.active}`}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/SingleNft/SingleNft.jsx",["1908","1909","1910","1911","1912","1913","1914","1915","1916","1917"],"import React, { useContext, useEffect } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport NftCard from \"../NftCard/NftCard\";\nimport classes from \"./SingleNft.module.css\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport NotFound from \"../../not-found/notFound\";\nimport GenadropCarouselScreen from \"../../Genadrop-Carousel-Screen/GenadropCarouselScreen\";\nimport DateFilter from \"../Date-Filter/DateFilter\";\n\nconst SingleNft = () => {\n  const { singleAlgoNfts, singleAuroraNfts, singlePolygonNfts, singleCeloNfts } = useContext(GenContext);\n  const singleAlgoNftsArr = Object.values(singleAlgoNfts);\n\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    window.localStorage.activeAlgoNft = null;\n  }, []);\n  return (\n    <div className={classes.container}>\n      <div className={classes.heading}>\n        <div className={classes.headingWrapper}>\n          <h3>1 of 1s</h3>\n          {/* <DateFilter /> */}\n        </div>\n        <button type=\"button\" onClick={() => history.push(`${url}/1of1`)}>\n          view all\n        </button>\n      </div>\n      {singleAlgoNftsArr?.length || singleAuroraNfts?.length || singlePolygonNfts?.length || singleCeloNfts?.length ? (\n        <GenadropCarouselScreen cardWidth={20 * 16} gap={16}>\n          {[\n            ...(singleAlgoNftsArr || [])\n              ?.filter((_, idx) => idx < 3)\n              .map((nft, idx) => <NftCard useWidth=\"20em\" key={idx} nft={nft} listed />),\n            ...(singleAuroraNfts || [])\n              ?.filter((_, idx) => idx < 3)\n              .map((nft, idx) => <NftCard useWidth=\"20em\" key={idx + 10} nft={nft} listed />),\n            ...(singlePolygonNfts || [])\n              ?.filter((_, idx) => idx < 3)\n              .map((nft, idx) => <NftCard useWidth=\"20em\" key={idx + 20} nft={nft} listed />),\n            ...(singleCeloNfts || [])\n              ?.filter((_, idx) => idx < 3)\n              .map((nft, idx) => <NftCard useWidth=\"20em\" key={idx + 20} nft={nft} listed />),\n          ]}\n        </GenadropCarouselScreen>\n      ) : !singleAlgoNftsArr && !singleAuroraNfts && !singlePolygonNfts && !singleCeloNfts ? (\n        <NotFound />\n      ) : (\n        <div className={classes.wrapper}>\n          {[...new Array(4)].map((_, idx) => (\n            <div key={idx}>\n              <Skeleton count={1} height={250} />\n              <br />\n              <Skeleton count={1} height={30} />\n              <br />\n              <Skeleton count={1} height={30} />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SingleNft;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/profile/profile-script.js",["1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928"],"import { setLoader, setNotification } from \"../../gen-state/gen.actions\";\nimport { writeUserProfile } from \"../../utils/firebase\";\nimport * as PS from \"./profile-script\";\n\nexport const handleValidate = (state) => {\n  const discordRegex = /^.{3,32}#[0-9]{4}$/;\n  const twitterRegex = /^[A-Za-z0-9_]{1,15}$/;\n  const instagramRegex = /^(?:[\\w][\\.]{0,1})*[\\w]/;\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  const status = {\n    isDiscord: true,\n    isEmail: true,\n    isTwitter: true,\n    isEmail: true,\n  };\n\n  if (discordRegex.test(state.discord) || !state.discord) {\n    status.isDiscord = true;\n  } else {\n    status.isDiscord = false;\n  }\n  if (emailRegex.test(state.email) || !state.email) {\n    status.isEmail = true;\n  } else {\n    status.isEmail = false;\n  }\n  if (twitterRegex.test(state.twitter) || !state.twitter) {\n    status.isTwitter = true;\n  } else {\n    status.isTwitter = false;\n  }\n  if (instagramRegex.test(state.instagram) || !state.instagram) {\n    status.isInstagram = true;\n  } else {\n    status.isInstagram = false;\n  }\n\n  return { ...status };\n};\n\nexport const getValidName = (name) => {\n  let first = name.charAt(0).toUpperCase();\n  let rest = name.substring(1);\n  return `is${first + rest}`;\n};\n\nexport const handleSave = async ({ account, state, dispatch, handleSetValidation, history }) => {\n  const validate = PS.handleValidate(state);\n  let isValid = Object.values(validate).every((i) => i === true);\n  if (isValid) {\n    dispatch(setLoader(\"saving...\"));\n    const res = await writeUserProfile(state, account);\n    if (res) {\n      dispatch(\n        setNotification({\n          message: \"Your profile has been saved\",\n          type: \"success\",\n        })\n      );\n    } else {\n      dispatch(\n        setNotification({\n          message: \"Unable to save profile data\",\n          type: \"error\",\n        })\n      );\n    }\n    dispatch(setLoader(\"\"));\n    history.goBack();\n  } else {\n    dispatch(\n      setNotification({\n        message: \"invalid input\",\n        type: \"error\",\n      })\n    );\n  }\n  handleSetValidation(validate);\n};\n\nexport const handleInputChange = ({ event, handleSetState, handleSetValidation }) => {\n  let { name, value } = event.target;\n  if (name === \"twitter\") {\n    value = value.split(\"https://twitter.com/\")[1];\n  } else if (name === \"instagram\") {\n    value = value.split(\"https://www.instagram.com/\")[1];\n  }\n  if (!value) value = \"\";\n  handleSetState({ [name]: value });\n  handleSetValidation({ [PS.getValidName(name)]: true });\n};\n\nexport const handleCancel = ({ handleSetState, history }) => {\n  handleSetState({\n    subscribe: false,\n    email: \"\",\n    twitter: \"\",\n    discord: \"\",\n    username: \"\",\n    instagram: \"\",\n  });\n  history.goBack();\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Collections/Collections.jsx",["1929","1930","1931","1932","1933","1934","1935","1936","1937","1938"],"import React, { useContext, useEffect } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport Skeleton from \"react-loading-skeleton\";\nimport classes from \"./collections.module.css\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport CollectionsCard from \"../collectionsCard/collectionsCard\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport NotFound from \"../../not-found/notFound\";\nimport GenadropCarouselScreen from \"../../Genadrop-Carousel-Screen/GenadropCarouselScreen\";\nimport DateFilter from \"../Date-Filter/DateFilter\";\n\nconst Collections = () => {\n  const { auroraCollections, algoCollections, polygonCollections, celoCollections } = useContext(GenContext);\n  const algoCollectionsArr = algoCollections ? Object.values(algoCollections) : [];\n\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    window.localStorage.activeCollection = null;\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.heading}>\n        <div className={classes.headingWrapper}>\n          <h3>Top Collections</h3>\n          {/* <DateFilter /> */}\n        </div>\n        <button type=\"button\" onClick={() => history.push(`${url}/collections`)}>\n          view all\n        </button>\n      </div>\n\n      {algoCollectionsArr?.length ||\n      auroraCollections?.length ||\n      polygonCollections?.length ||\n      celoCollections?.length ? (\n        <GenadropCarouselScreen cardWidth={16 * 20} gap={16}>\n          {[\n            ...(algoCollectionsArr || [])\n              ?.filter((_, idx) => idx < 3)\n              .map((collection, idx) => <CollectionsCard useWidth=\"20em\" key={idx} collection={collection} />),\n            ...(auroraCollections || [])\n              ?.filter((_, idx) => idx < 3)\n              .map((collection, idx) => <CollectionsCard useWidth=\"20em\" key={idx + 10} collection={collection} />),\n            ...(polygonCollections || [])\n              ?.filter((_, idx) => idx < 3)\n              .map((collection, idx) => <CollectionsCard useWidth=\"20em\" key={idx + 20} collection={collection} />),\n            ...(celoCollections || [])\n              ?.filter((_, idx) => idx < 3)\n              .map((collection, idx) => <CollectionsCard useWidth=\"20em\" key={idx + 20} collection={collection} />),\n          ]}\n        </GenadropCarouselScreen>\n      ) : !algoCollectionsArr && !auroraCollections && !polygonCollections ? (\n        <NotFound />\n      ) : (\n        <div className={classes.skeleton}>\n          {[...new Array(4)].map((_, idx) => (\n            <div key={idx}>\n              <Skeleton count={1} height={250} />\n              <br />\n              <Skeleton count={1} height={30} />\n              <br />\n              <Skeleton count={1} height={30} />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Collections;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/similarNFTs/similarNFTs.jsx",["1939","1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport NftCard from \"../Marketplace/NftCard/NftCard\";\nimport classes from \"./similarNFTs.module.css\";\nimport GenadropCarouselScreen from \"../Genadrop-Carousel-Screen/GenadropCarouselScreen\";\n\nconst SimilarNFTs = (data) => {\n  const { singleAlgoNfts, singleAuroraNfts, singlePolygonNfts } = useContext(GenContext);\n  const singleAlgoNftsArr = Object.values(singleAlgoNfts);\n\n  const cardRef = useRef(null);\n\n  const [state, setState] = useState({\n    nfts: [],\n  });\n\n  const { nfts } = state;\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  useEffect(() => {\n    const chain = data.data.chain;\n\n    if ([\"137\", \"80001\"].includes(chain)) {\n      console.log(\"CHAIN: \", chain);\n      handleSetState({ nfts: singlePolygonNfts });\n      // similarity();\n    } else if ([\"1313161554\", \"1313161555\"].includes(chain)) {\n      console.log(\"CHAIN: \", chain);\n      handleSetState({ nfts: singleAuroraNfts });\n      similarity(singleAuroraNfts);\n    } else {\n      similarity(singleAlgoNftsArr);\n    }\n\n    // similarity();\n  }, []);\n\n  const similarity = (x) => {\n    const s1 = data.data.description;\n    let current_traits = [];\n\n    data.data.properties.forEach((trait) => {\n      current_traits.push(trait.trait_type);\n    });\n\n    let nftsx = x;\n\n    nftsx?.forEach((e) => {\n      // description similarity\n      var longer = s1;\n      var shorter = e.description;\n      var s2 = e.description;\n\n      if (s1.length < s2.length) {\n        longer = s2;\n        shorter = s1;\n      }\n      var longerLength = longer.length;\n      if (longerLength == 0) {\n        e[\"similarity\"] = 1.0;\n      } else {\n        e[\"similarity\"] = (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n      }\n\n      // properties similarity\n      let nft_traits = [];\n\n      e.properties?.forEach((trait) => {\n        nft_traits.push(trait.trait_type);\n      });\n      nft_traits = nft_traits.filter((p) => current_traits.includes(p));\n      e[\"similarity\"] += nft_traits.length / current_traits.length;\n    });\n\n    // sort nfts by similarity\n    nftsx.sort(compare);\n    nftsx.reverse();\n    nftsx.shift();\n    handleSetState({ nfts: nftsx });\n  };\n\n  function editDistance(s1, s2) {\n    s1 = s1.toLowerCase();\n    s2 = s2.toLowerCase();\n\n    var costs = new Array();\n    for (var i = 0; i <= s1.length; i++) {\n      var lastValue = i;\n      for (var j = 0; j <= s2.length; j++) {\n        if (i == 0) costs[j] = j;\n        else {\n          if (j > 0) {\n            var newValue = costs[j - 1];\n            if (s1.charAt(i - 1) != s2.charAt(j - 1)) newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n            costs[j - 1] = lastValue;\n            lastValue = newValue;\n          }\n        }\n      }\n      if (i > 0) costs[s2.length] = lastValue;\n    }\n    return costs[s2.length];\n  }\n\n  function compare(a, b) {\n    if (a.similarity < b.similarity) {\n      return -1;\n    }\n    if (a.similarity > b.similarity) {\n      return 1;\n    }\n    return 0;\n  }\n\n  return (\n    <div className={classes.container}>\n      <GenadropCarouselScreen cardWidth={16 * 20} gap={16}>\n        {nfts?.map((nft, id) => (\n          <div key={id} ref={cardRef} className={classes.card}>\n            <NftCard useWidth=\"20em\" key={nft.Id} nft={nft} listed extend=\"/1of1\" />\n          </div>\n        ))}\n      </GenadropCarouselScreen>\n    </div>\n  );\n};\n\nexport default SimilarNFTs;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/wallet/wallet.jsx",["1980","1981","1982"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport classes from \"./wallet.module.css\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport userIcon from \"../../assets/icon-user.svg\";\nimport switchIcon from \"../../assets/icon-switch.svg\";\nimport copyIcon from \"../../assets/icon-copy.svg\";\nimport { ReactComponent as ChevronIcon } from \"../../assets/icon-chevron-down.svg\";\nimport { ReactComponent as DropdownIcon } from \"../../assets/icon-chevron-down.svg\";\nimport disconnectIcon from \"../../assets/icon-disconnect.svg\";\nimport WalletPopup from \"../wallet-popup/walletPopup\";\nimport supportedChains from \"../../utils/supportedChains\";\nimport {\n  setNetworkType,\n  connectWallet,\n  getConnectedChain,\n  breakAddress,\n  disconnectWallet,\n  connectWithQRCode,\n  initializeConnection,\n  initConnectWallet,\n} from \"./wallet-script\";\nimport { setSwitchWalletNotification } from \"../../gen-state/gen.actions\";\n\nfunction ConnectWallet() {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const clipboardRef = useRef();\n  const walletProviderRef = useRef(0);\n  const { dispatch, account, chainId, proposedChain, mainnet, toggleWalletPopup } = useContext(GenContext);\n\n  const [state, setState] = useState({\n    clipboardState: \"Copy Address\",\n    network: null,\n    walletConnectProvider: null,\n    connectionMethod: null,\n    isMetamask: true,\n    overrideWalletConnect: false,\n    rpc: null,\n  });\n\n  const { clipboardState, network, walletConnectProvider, overrideWalletConnect, connectionMethod, rpc, isMetamask } =\n    state;\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  const walletProps = {\n    dispatch,\n    supportedChains,\n    proposedChain,\n    mainnet,\n    chainId,\n    walletConnectProvider,\n    connectionMethod,\n    walletProviderRef,\n    rpc,\n    history,\n    pathname,\n    handleSetState,\n  };\n\n  const handleCopy = (props) => {\n    const { navigator, clipboard } = props;\n    clipboard.select();\n    clipboard.setSelectionRange(0, 99999); /* For mobile devices */\n    navigator.clipboard.writeText(clipboard.value);\n    handleSetState({ clipboardState: \"Copied\" });\n    setTimeout(() => {\n      handleSetState({ clipboardState: \"Copy Address\" });\n    }, 850);\n  };\n\n  const handleDisconnet = () => {\n    disconnectWallet(walletProps);\n  };\n\n  const handleNetworkClick = () => {\n    dispatch(setSwitchWalletNotification(true));\n  };\n\n  const handleDashboard = () => {\n    history.push(`/me/${account}`);\n  };\n\n  useEffect(() => {\n    setNetworkType(walletProps);\n  }, [chainId]);\n\n  useEffect(() => {\n    const isSupported = Object.keys(supportedChains).includes(String(proposedChain));\n    if (!isSupported) return;\n    connectWallet(walletProps);\n  }, [proposedChain, connectionMethod]);\n\n  useEffect(() => {\n    if (walletProviderRef.current >= 2 || overrideWalletConnect) {\n      handleSetState({ overrideWalletConnect: false });\n      connectWithQRCode(walletProps);\n    } else {\n      walletProviderRef.current = +1;\n    }\n  }, [walletConnectProvider, overrideWalletConnect]);\n\n  useEffect(() => {\n    initializeConnection(walletProps);\n  }, [rpc]);\n\n  const dropdown = (\n    <div className={classes.dropdownContainer}>\n      <div className={classes.dropdown}>\n        <div onClick={handleDashboard} className={classes.option}>\n          <img src={userIcon} alt=\"\" />\n          <div>View Profile</div>\n        </div>\n        <div onClick={() => initConnectWallet(walletProps)} className={classes.option}>\n          <img src={switchIcon} alt=\"\" />\n          <div>Switch network</div>\n        </div>\n        <div onClick={() => handleCopy({ navigator, clipboard: clipboardRef.current })} className={classes.option}>\n          <img src={copyIcon} alt=\"\" />\n          <div>{clipboardState}</div>\n          <input style={{ display: \"none\" }} ref={clipboardRef} type=\"text\" defaultValue={account} />\n        </div>\n        <div onClick={handleDisconnet} className={classes.option}>\n          <img src={disconnectIcon} alt=\"\" />\n          <div>Disconnect</div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const connected = (\n    <div className={classes.connectedContainer}>\n      <div className={classes.connected}>\n        <img className={classes.chain} src={getConnectedChain(chainId)} alt=\"\" />\n        <div className={classes.address}>\n          <span>{breakAddress(account)}</span>\n        </div>\n        <div className={classes.dropdownIconContainer}>\n          <DropdownIcon className={classes.dropdownIcon} />\n        </div>\n      </div>\n      {dropdown}\n    </div>\n  );\n\n  const changeNetwork = (\n    <div className={classes.networkContainer}>\n      <div className={classes.network}>\n        <div className={classes.dot} />{\" \"}\n        <div className={classes.activeNetwork}>{network === \"mainnet\" ? \"Mainnet\" : \"Testnet\"}</div>\n        <ChevronIcon className={classes.chevronIcon} />\n      </div>\n      <div className={classes.networkDropdownContainer}>\n        <div onClick={handleNetworkClick} className={classes.networkDropdown}>\n          {network === \"mainnet\" ? \"Switch to testnet\" : \"Switch to mainnet\"}\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className={`${classes.popupContainer} ${toggleWalletPopup && classes.active}`}>\n        <WalletPopup isMetamask={isMetamask} handleSetState={handleSetState} />\n      </div>\n      {account ? (\n        <div className={classes.container}>\n          {connected}\n          {changeNetwork}\n        </div>\n      ) : (\n        <div className={classes.connect} onClick={() => initConnectWallet(walletProps)}>\n          Connect Wallet\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default ConnectWallet;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Search/Search.jsx",["1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005"],"import { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport supportedChains from \"../../utils/supportedChains\";\nimport { handleSuggestions } from \"./Search-script\";\nimport classes from \"./Search.module.css\";\n\nconst Search = () => {\n  const history = useHistory();\n  const { searchContainer } = useContext(GenContext);\n  const [state, setState] = useState({\n    value: \"\",\n    suggestions: null,\n    toggleSearch: false,\n    ignoreSearch: false,\n  });\n\n  const { value, toggleSearch, ignoreSearch, suggestions } = state;\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  const handleChange = (e) => {\n    handleSetState({ value: e.target.value });\n    handleSuggestions({ handleSetState, searchContainer, value: e.target.value });\n  };\n\n  const handleToggleSearch = () => {\n    handleSetState({ toggleSearch: true });\n  };\n\n  const handleCloseSearch = () => {\n    if (ignoreSearch) return;\n    handleSetState({ value: \"\", suggestions: null, toggleSearch: false });\n  };\n\n  const handleSearch = (searchType) => {\n    handleSetState({ value: \"\", suggestions: null, toggleSearch: false });\n    history.push(`/marketplace/${searchType}${`?search=${value}`}`);\n  };\n\n  return (\n    <div className={`${classes.container} ${toggleSearch && classes.active}`}>\n      <div onClick={handleToggleSearch} className={classes.placeholder}>\n        <input type=\"text\" placeholder=\"Search collections, and 1 of 1s\" />\n      </div>\n      <div onClick={handleCloseSearch} className={classes.dropdownContainer}>\n        <div\n          onMouseOut={() => handleSetState({ ignoreSearch: false })}\n          onMouseOver={() => handleSetState({ ignoreSearch: true })}\n          className={classes.dropdown}\n        >\n          {toggleSearch && (\n            <div className={classes.searchContainer}>\n              <input\n                onChange={handleChange}\n                value={value}\n                autoFocus\n                type=\"text\"\n                placeholder=\"Search collections, and 1 of 1s\"\n              />\n              <div className={classes.hint}>\n                {!suggestions\n                  ? \"No results\"\n                  : suggestions.length\n                  ? `Showing ${suggestions.length} results`\n                  : \"No results\"}\n              </div>\n            </div>\n          )}\n          <div className={classes.suggestions}>\n            {suggestions && suggestions.length ? (\n              suggestions.map(({ imageUrl, type, name, description, chainId }, idx) => (\n                <div onClick={() => handleSearch(type)} key={idx} className={classes.suggestion}>\n                  <img className={classes.image} src={imageUrl} alt=\"\" />\n                  <div className={classes.content}>\n                    <div className={classes.name}>{name}</div>\n                    <div className={classes.description}>{description}</div>\n                    <div className={classes.type_m}>{type}</div>\n                  </div>\n                  <div className={classes.type}>{type}</div>\n                  <img className={classes.chain} src={supportedChains[chainId].icon} alt=\"\" />\n                </div>\n              ))\n            ) : suggestions ? (\n              <div>Couldn’t find any results.</div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Nft-details/collection/nft.jsx",["2006"],"import React from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport classes from \"./nft.module.css\";\nimport algoIcon from \"../../../assets/icon-algo.svg\";\nimport supportedChains from \"../../../utils/supportedChains\";\n\nconst NFT = (data) => {\n  const match = useRouteMatch();\n\n  return data.data.map((nft, idx) => {\n    let chainName = \"Algo\";\n    if (nft?.chain) {\n      chainName = supportedChains[nft?.chain].sybmol;\n    }\n    return (\n      <Link key={idx} to={`${match.url.split(\"/\").slice(0, -1).join(\"/\")}/${nft.Id}`}>\n        <div key={nft.Id} className={classes.collectionItem}>\n          <img src={nft.image_url} alt=\"\" />\n          <span className={classes.collectionName}>{nft.collection_name}</span>\n          <span className={classes.itemName}>{nft.name}</span>\n          <div className={classes.pricing}>\n            <img src={nft?.chain ? supportedChains[nft?.chain].icon : algoIcon} alt=\"\" />\n            {nft.price === 0 ? (\n              <div className={classes.itemPrice}>\n                <button type=\"button\" className={classes.sold}>\n                  Not Listed!\n                </button>\n              </div>\n            ) : (\n              <div className={classes.itemPrice}>\n                <div className={classes.section}>\n                  <div className={classes.heading}>LIST PRICE</div>\n                  <div className={classes.price}>\n                    {nft.price} <span>{chainName}</span>\n                  </div>\n                </div>\n                {nft.sold ? (\n                  <button type=\"button\" className={classes.sold}>\n                    Sold\n                  </button>\n                ) : (\n                  <button type=\"button\" className={classes.buy}>\n                    Buy\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </Link>\n    );\n  });\n};\n\nexport default NFT;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/not-found/notFound.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Chain-dropdown/chainDropdown.jsx",["2007","2008","2009","2010"],"import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport classes from \"./chainDropdown.module.css\";\nimport polygonIcon from \"../../../assets/icon-polygon.svg\";\nimport algoIcon from \"../../../assets/icon-algo.svg\";\nimport auroraIcon from \"../../../assets/icon-aurora.svg\";\nimport celoIcon from \"../../../assets/icon-celo.svg\";\nimport dropdownIcon from \"../../../assets/icon-caret-down.svg\";\nimport allChainsIcon from \"../../../assets/all-chains.svg\";\nimport supportedChains from \"../../../utils/supportedChains\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\n\nconst chainIcon = {\n  polygon: polygonIcon,\n  algorand: algoIcon,\n  aurora: auroraIcon,\n  celo: celoIcon,\n};\n\nconst ChainDropdown = ({ onChainFilter }) => {\n  const [state, setState] = useState({\n    toggleChainFilter: false,\n    chain: \"All Chains\",\n  });\n  const location = useLocation();\n  const { mainnet } = useContext(GenContext);\n  const { toggleChainFilter, chain } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  useEffect(() => {\n    const { search } = location;\n    const name = new URLSearchParams(search).get(\"chain\");\n    if (name) {\n      handleSetState({ chain: name });\n    }\n  }, []);\n\n  const chainHandler = (name) => {\n    onChainFilter(name);\n    handleSetState({ chain: name, toggleChainFilter: false });\n  };\n  return (\n    <div className={classes.chainDropdown}>\n      <div onClick={() => handleSetState({ toggleChainFilter: !toggleChainFilter })} className={classes.selectedChain}>\n        <div>\n          {chainIcon[chain.toLowerCase()] ? (\n            <img className={classes.chainImg} src={chainIcon[chain.toLowerCase()]} alt={chain} />\n          ) : (\n            <img className={classes.chainImg} src={allChainsIcon} alt={chain} />\n          )}\n          <span className={classes.chainName}>{chain}</span>\n        </div>\n        <img\n          src={dropdownIcon}\n          alt=\"dropdown-indicator\"\n          className={`${classes.dropdownIcon} ${toggleChainFilter && classes.active}`}\n        />\n      </div>\n      <div className={`${classes.dropdown} ${toggleChainFilter && classes.active}`}>\n        {[\n          <div onClick={() => chainHandler(\"All Chains\")} className={classes.chain}>\n            <img src={allChainsIcon} alt=\"All Chains\" /> <span>All Chains</span>\n          </div>,\n          ...Object.values(supportedChains)\n            .filter((chainE) => mainnet === chainE.isMainnet)\n            .map((chainE) => (\n              <div\n                key={chainE.id}\n                onClick={() => {\n                  !chainE.comingSoon ? chainHandler(chainE.chain) : {};\n                }}\n                className={`${classes.chain} ${chainE.comingSoon && classes.inActive}`}\n              >\n                {chainE.icon ? <img src={chainE.icon} alt={chainE.chain} /> : <p />} <span>{chainE.chain}</span>\n              </div>\n            )),\n        ]}\n      </div>\n    </div>\n  );\n};\n\nexport default ChainDropdown;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/collectionsCard/collectionsCard.jsx",[],"/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/page-control/pageControl.jsx",["2011","2012","2013","2014","2015","2016"],"import classes from \"../preview.module.css\";\n\nconst PageControl = ({ controProps }) => {\n  const { handleGoto, handleNext, handlePrev, currentPage, currentPageValue, paginate, handleSetState } = controProps;\n  return (\n    <div className={classes.paginate}>\n      <div onClick={handlePrev} className={classes.pageControl}>\n        prev\n      </div>\n      <div className={classes.pageCount}>\n        {currentPage} of {Object.keys(paginate).length}\n      </div>\n      <div onClick={handleNext} className={classes.pageControl}>\n        next\n      </div>\n      <div onClick={handleGoto} className={classes.pageControl}>\n        goto\n      </div>\n      <input\n        min={1}\n        type=\"number\"\n        value={currentPageValue}\n        onChange={(e) => handleSetState({ currentPageValue: e.target.value >= 1 ? e.target.value : \"\" })}\n      />\n    </div>\n  );\n};\n\nexport default PageControl;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/art-card/artCard.jsx",["2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029"],"import { handleDownload } from \"../../../utils/index2\";\nimport { addGif, handleDelete, handleDeleteAndReplace, handleDescription, handleRename } from \"../preview-script\";\nimport TextEditor from \"../text-editor\";\nimport classes from \"../preview.module.css\";\nimport { ReactComponent as CheckIcon } from \"../../../assets/check-solid.svg\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { setNotification, setLoader, setZip } from \"../../../gen-state/gen.actions\";\n\nconst ArtCard = ({ previewProps, asset }) => {\n  const { image, id, name, description, index } = asset;\n  const { gifImages, gifShow, dispatch, outputFormat, currentPlan } = previewProps;\n\n  return (\n    <div className={`${classes.card} ${gifImages.filter((e) => e.id === id).length > 0 ? classes.cardActive : \"\"}`}>\n      <img className={classes.asset} src={image} alt=\"\" />\n      <div className={classes.cardBody}>\n        <div className={classes.textWrapper}>\n          <TextEditor\n            placeholder={name}\n            submitHandler={(value) => handleRename({ ...previewProps, value, id, index })}\n          />\n        </div>\n        <textarea\n          name=\"description\"\n          value={description}\n          cols=\"30\"\n          rows=\"3\"\n          placeholder=\"description\"\n          onChange={(e) =>\n            handleDescription({\n              description: e.target.value,\n              id,\n              index,\n              dispatch,\n            })\n          }\n        />\n        <div className={classes.buttonContainer}>\n          <button\n            type=\"button\"\n            className={classes.nftDonwload}\n            onClick={() =>\n              handleDownload({\n                window,\n                dispatch,\n                currentPlan,\n                setLoader,\n                setZip,\n                setNotification,\n                value: [asset],\n                name: asset.name,\n                outputFormat,\n                single: true,\n              })\n            }\n          >\n            Download\n          </button>\n          {image.split(\",\")[0] !== \"data:image/gif;base64\" && (\n            <button type=\"button\" onClick={() => handleDeleteAndReplace({ ...previewProps, id, index })}>\n              Generate New\n            </button>\n          )}\n        </div>\n      </div>\n      {!gifShow && (\n        <div onClick={() => handleDelete({ dispatch, id })} className={classes.iconClose}>\n          <CloseIcon className={classes.closeIcon} />\n        </div>\n      )}\n      {gifShow && (\n        <div\n          onClick={() => addGif({ ...previewProps, asset })}\n          className={`${classes.iconClose} ${gifImages.filter((e) => e.id === id).length > 0 ? classes.cheked : \"\"}`}\n        >\n          <CheckIcon fill={gifImages.filter((e) => e.id === id).length > 0 ? \"#ffffff\" : \"#D1D4D8\"} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ArtCard;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/sidebar/sidebar.jsx",["2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2059","2060","2061","2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072"],"import GenadropToolTip from \"../../../components/Genadrop-Tooltip/GenadropTooltip\";\nimport { handleDownload } from \"../../../utils/index2\";\nimport { generateGif, handleCollectionDescription, handleCollectionName, handleFormatChange } from \"../preview-script\";\nimport { ReactComponent as CheckIcon } from \"../../../assets/check-solid.svg\";\nimport CaretDown from \"../../../assets/icon-caret-down.svg\";\nimport CaretUP from \"../../../assets/icon-caret-up.svg\";\nimport TextEditor from \"../text-editor\";\nimport classes from \"../preview.module.css\";\nimport { useContext, useRef } from \"react\";\nimport { setNotification, setLoader, setZip, setToggleUpgradeModal } from \"../../../gen-state/gen.actions\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\n\nconst Sidebar = ({ sidebarProps }) => {\n  const ipfsRef = useRef(null);\n  const arweaveRef = useRef(null);\n  const { currentPlan } = useContext(GenContext);\n\n  const {\n    gifShow,\n    handleSetState,\n    enableAllDescription,\n    outputFormat,\n    collectionName,\n    collectionDescription,\n    dispatch,\n    duration,\n    nftLayers,\n  } = sidebarProps;\n\n  const handleGif = () => {\n    if (currentPlan === \"free\") {\n      dispatch(setToggleUpgradeModal(true));\n    } else {\n      handleSetState({ gifShow: true });\n    }\n  };\n\n  return (\n    <aside className={`${classes.sidebar} ${gifShow && classes.sidebarActive}`}>\n      <div className={classes.collectionDetail}>\n        <div className={classes.tab}>\n          <h3>Collection Name </h3>\n        </div>\n        <div className={classes.wrapper}>\n          <TextEditor\n            placeholder={collectionName || \"\"}\n            submitHandler={(value) => handleCollectionName({ ...sidebarProps, value })}\n            invert\n          />\n        </div>\n\n        <div className={classes.tab}>\n          <h3>Collection Description </h3>\n          <div\n            onClick={() =>\n              handleSetState({\n                enableAllDescription: !enableAllDescription,\n              })\n            }\n            className={`${classes.toggleContainer}  ${enableAllDescription && classes.active}`}\n          >\n            <div className={`${classes.toggle} ${enableAllDescription && classes.active}`} />\n          </div>\n        </div>\n        <textarea\n          name=\"description\"\n          value={collectionDescription}\n          rows=\"4\"\n          placeholder=\"description\"\n          onChange={(event) => handleCollectionDescription({ ...sidebarProps, event })}\n        />\n      </div>\n      <div className={classes.actionContainer}>\n        <div className={classes.foramtWrapper}>\n          <h3>Use Format</h3>\n          <label\n            htmlFor=\"ipfs\"\n            onClick={() => handleFormatChange({ ...sidebarProps, ipfsRef, arweaveRef, val: \"ipfs\" })}\n          >\n            <input\n              ref={ipfsRef}\n              type=\"radio\"\n              name=\"format\"\n              value=\"ipfs\"\n              defaultChecked\n              className={`${classes.radioBtn} ${outputFormat === \"ipfs\" && classes.clicked}`}\n            />\n            <p>IPFS</p>\n            <GenadropToolTip\n              fill=\"white\"\n              content=\"IPFS is a peer-to-peer (p2p) storage network for storing and sharing data.\"\n            />\n          </label>\n          <label\n            htmlFor=\"arweave\"\n            onClick={() => handleFormatChange({ ...sidebarProps, ipfsRef, arweaveRef, val: \"arweave\" })}\n          >\n            <input\n              ref={arweaveRef}\n              type=\"radio\"\n              name=\"format\"\n              value=\"arweave\"\n              className={`${classes.radioBtn} ${outputFormat === \"arweave\" && classes.clicked}`}\n            />\n            <p>Arweave</p>\n          </label>\n        </div>\n        <div className={classes.btnWrapper}>\n          {!gifShow && (\n            <button onClick={handleGif} className={classes.gifButton} type=\"button\">\n              Genrate GIF\n            </button>\n          )}\n        </div>\n\n        {gifShow && (\n          <div className={classes.durationWrapper}>\n            <div className={classes.durationField}>\n              <div className={classes.durationLabel}></div>\n              <div className={classes.durationInput}>\n                <input\n                  onChange={(e) => handleSetState({ duration: e.target.valueAsNumber })}\n                  placeholder=\"set duration\"\n                  value={duration}\n                  type=\"number\"\n                />\n                <div className={classes.numberCounter}>\n                  <p style={{ opacity: isNaN(duration) || duration === \"\" ? 0 : 1 }}>Sec</p>\n                  <div className={classes.verticalLine} />\n                  <div className={classes.inputArrows}>\n                    <img\n                      onClick={() =>\n                        handleSetState({\n                          duration: duration ? duration + 1 : 1,\n                        })\n                      }\n                      src={CaretUP}\n                      alt=\"count-up\"\n                    />\n                    <img\n                      onClick={() =>\n                        handleSetState({\n                          duration: duration ? (duration - 1 <= 0 ? 0 : duration - 1) : 0,\n                        })\n                      }\n                      src={CaretDown}\n                      alt=\"count-down\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={classes.mintButtonWrapper}>\n              <button type=\"button\" onClick={() => handleSetState({ gifShow: null })} className={classes.cancelBtn}>\n                Cancel\n              </button>\n              <button type=\"button\" onClick={() => generateGif({ ...sidebarProps })} className={classes.mintBtn}>\n                <CheckIcon /> Done\n              </button>\n            </div>\n          </div>\n        )}\n        <div className={classes.btnWrapper}>\n          <button\n            type=\"button\"\n            onClick={() =>\n              handleDownload({\n                window,\n                dispatch,\n                setLoader,\n                setZip,\n                setNotification,\n                value: nftLayers,\n                name: collectionName,\n                outputFormat,\n                currentPlan,\n              })\n            }\n          >\n            Download zip\n          </button>\n        </div>\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/selected-gif-art/selectedGifArt.jsx",["2073","2074","2075","2076","2077","2078","2079","2080","2081","2082"],"import { addGif } from \"../preview-script\";\nimport classes from \"./selectedGifArt.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\n\nconst SelectedGifArt = ({ selectedProps }) => {\n  const { gifImages, gifShow } = selectedProps;\n\n  return (\n    <div className={classes.galleryGif}>\n      <div className={classes.galleryGifLine} />\n      <div className={classes.galleryGifInfo}>\n        <p>Select arts from collection</p>\n      </div>\n      <div className={classes.galleryGifslides}>\n        {gifImages.map((img, idx) => (\n          <div key={idx}>\n            {gifShow && (\n              <div onClick={() => addGif({ ...selectedProps, asset: img })} className={classes.iconClose}>\n                <CloseIcon className={classes.closeIcon} />\n              </div>\n            )}\n            <img src={img.image} alt=\"gifIMG\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedGifArt;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/gif-modal/gifModal.jsx",["2083","2084","2085","2086","2087","2088","2089","2090","2091","2092"],"import GifCard from \"../gif-card/gifCard\";\nimport classes from \"../preview.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { addAllGifs, addToCollection } from \"../preview-script\";\n\nconst GifModal = ({ modalProps }) => {\n  const { handleSetState, gifs, collectionName, toggleGuide } = modalProps;\n\n  return (\n    <div\n      onClick={() => handleSetState({ toggleGuide: false })}\n      className={`${classes.modelContainer} ${toggleGuide && classes.modelActive}`}\n    >\n      <div className={classes.guideContainer}>\n        <CloseIcon className={classes.closeIcon} onClick={() => handleSetState({ toggleGuide: false })} />\n        <div className={`${classes.imgContainer}`}>\n          <div className={`${classes.preview} ${classes.modelPreview}`}>\n            {gifs.length > 0\n              ? gifs.map((asset, index) => {\n                  return <GifCard key={index} asset={{ ...asset, index }} gifCardProps={modalProps} />;\n                })\n              : \"\"}\n          </div>\n          <div className={classes.gifAllBtn}>\n            <p\n              onClick={() =>\n                handleSetState({\n                  toggleGuide: false,\n                  gifs: [],\n                })\n              }\n            >\n              Delete all\n            </p>\n            <div\n              onClick={() =>\n                gifs.length > 1 ? addAllGifs({ ...modalProps }) : addToCollection({ ...modalProps, gif: gifs[0] })\n              }\n            >\n              Add all to {collectionName || \"collection\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GifModal;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Features/Feature-Script.js",["2093"],"import createImage from \"../../../assets/app-create.svg\";\nimport mintImage from \"../../../assets/app-mint.svg\";\nimport exploreImage from \"../../../assets/app-explore.svg\";\n\nexport const features = [\n  {\n    heading: \"CREATE\",\n    link: \"Explore how to create\",\n    url: \"/create\",\n    image: createImage,\n    title: \"No More need for copy & Paste or Uploading your NFTs all over again.\",\n    description:\n      \"Automatically Bring your NFTs to life via a simple interface, upload each assets and have genaDrop create your generative collection effortlessly.\",\n  },\n  {\n    heading: \"MINT\",\n    link: \"Explore how to Mint\",\n    url: \"/mint\",\n    image: mintImage,\n    title: \"You do not need to know all the technical terms before minting your NFTs.\",\n    description:\n      \"Follow the simple and pretty straightforward steps on the app to upload your ART and watch Genadrop do all the technical stuff. No coding knowledge required from you.\",\n  },\n  {\n    heading: \"MARKETPLACE\",\n    link: \"Buy and List NFTs\",\n    url: \"/marketplace\",\n    image: exploreImage,\n    title: \"Gone are the days of searching for the perfect Programmer to bring your ideas to life.\",\n    description:\n      \"Genadrop makes the whole process of listing your NFTs on the marketplace seamless with the auto listing feature, directly after you mint your NFTs .\",\n  },\n];\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/navbar/navbar.jsx",["2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109"],"import classes from \"./navbar.module.css\";\nimport { ReactComponent as WarnIcon } from \"../../../assets/icon-warn.svg\";\nimport { ReactComponent as BackIcon } from \"../../../assets/icon-arrow-left.svg\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Navbar = ({ navbarProps }) => {\n  const history = useHistory();\n  const { gifShow, gifs, handleSetState, mintAmount, mintInfo, combinations, rule, layers, nftLayers } = navbarProps;\n\n  return (\n    <div className={classes.container}>\n      <div onClick={() => history.goBack()} className={classes.btnContainer}>\n        <BackIcon className={classes.btnIcon} />\n      </div>\n      <div className={classes.detailsWrapper}>\n        {(gifShow || gifs.length > 0) && (\n          <div\n            onClick={() => (gifs.length > 0 ? handleSetState({ toggleGuide: true }) : \"\")}\n            className={classes.gifDetail}\n          >\n            <p>GIF</p>\n            <span>{gifs.length}</span>\n          </div>\n        )}\n        <div className={classes.detail}>\n          <span>Number of Generative Arts</span>\n          <span>{nftLayers.length}</span>\n        </div>\n        <div className={classes.detail}>\n          {mintInfo ? <WarnIcon /> : null}\n          <span>Unused Combinations</span>\n          <span>{combinations - mintAmount - rule.length || combinations - nftLayers.length}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/FAQ/FAQCard.jsx",["2110"],"import React from \"react\";\nimport classes from \"./FAQCard.module.css\";\nimport closeIcon from \"../../../assets/close-icon.svg\";\nimport openIcon from \"../../../assets/open-icon.svg\";\n\nconst FQACard = ({ dropdown, id, handleSetState, FAQ: { question, answer } }) => {\n  const handleDropdown = () => {\n    if (String(id) === dropdown) return handleSetState({ dropdown: \"\" });\n    handleSetState({ dropdown: String(id) });\n  };\n\n  return (\n    <div className={classes.container}>\n      <div onClick={handleDropdown} className={`${classes.question} ${dropdown === String(id) && classes.active}`}>\n        <p className={classes.title}>{question}</p>\n        <span>{dropdown === String(id) ? <img src={closeIcon} alt=\"\" /> : <img src={openIcon} alt=\"\" />}</span>\n      </div>\n      <div className={`${classes.answer} ${dropdown === String(id) && classes.active}`}>{answer}</div>\n    </div>\n  );\n};\n\nexport default FQACard;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Search/Search-script.js",["2111","2112"],"export const handleSuggestions = async ({ handleSetState, searchContainer, value }) => {\n  let newSearch = [];\n  let oldSearch = [];\n  value = value.trim().toLowerCase();\n\n  if (!value) {\n    handleSetState({ value: \"\", suggestions: null });\n    newSearch = [];\n    oldSearch = [];\n    return;\n  }\n\n  Object.keys(searchContainer).forEach(async (chain) => {\n    const search = new Promise((resolve) => {\n      const result = searchContainer[chain].filter(\n        (el) => el.name.toLowerCase().includes(value) || el.description.toLowerCase().includes(value)\n      );\n      resolve(result);\n    });\n    newSearch = await search;\n    handleSetState({ suggestions: [...oldSearch, ...newSearch] });\n    oldSearch = [...oldSearch, ...newSearch];\n  });\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Genadrop-Carousel-Screen/GenadropCarouselScreen.jsx",["2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128"],"import { useEffect, useRef, useState } from \"react\";\nimport classes from \"./GenadropCarouselScreen.module.css\";\nimport iconRight from \"../../assets/icon-angle-right.svg\";\nimport iconLeft from \"../../assets/icon-angle-left.svg\";\nimport { useWheel } from \"@use-gesture/react\";\n\nconst GenadropCarouselScreen = ({ children, cardWidth, gap = 16, init = true }) => {\n  const cardContainerRef = useRef(null);\n  const run = useRef(null);\n  const wrapperRef = useRef(null);\n\n  const [state, setState] = useState({\n    wrapperWidth: 0,\n    slideCount: 0,\n    scrollLength: 0,\n  });\n\n  const { wrapperWidth, slideCount, scrollLength } = state;\n  const [slideActiveCount, setSlideActiveCount] = useState(0);\n\n  const handleSetState = (payload) => {\n    setState((state) => ({ ...state, ...payload }));\n  };\n\n  const handleSlideLeft = () => {\n    if (slideActiveCount <= 0) return;\n    setSlideActiveCount((sc) => sc - 1);\n  };\n\n  const handleSlideRight = () => {\n    if (slideActiveCount >= slideCount) return;\n    setSlideActiveCount((sc) => sc + 1);\n  };\n\n  const bind = useWheel(({ wheeling, movement: [x] }) => {\n    if (x > 0 && run.current) {\n      handleSlideRight();\n      run.current = false;\n    } else if (x < 0 && run.current) {\n      handleSlideLeft();\n      run.current = false;\n    }\n\n    if (!wheeling) {\n      run.current = true;\n    }\n  });\n\n  useEffect(() => {\n    const width = wrapperRef.current && wrapperRef.current.getBoundingClientRect().width;\n    const cardsInView = Math.floor(width / (cardWidth + gap / 2));\n    const scrollLength = slideActiveCount * cardsInView * cardWidth + slideActiveCount * cardsInView * gap;\n    handleSetState({ scrollLength });\n    cardContainerRef.current.style.transform = `translateX(-${scrollLength}px)`;\n  }, [slideActiveCount]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      handleSetState({ wrapperWidth: wrapperRef.current && wrapperRef.current.getBoundingClientRect().width });\n    });\n  }, []);\n\n  const getCount = (len, view) => {\n    if (len % view === 0) {\n      return Math.floor(len / view) - 1;\n    } else {\n      return Math.floor(len / view);\n    }\n  };\n\n  useEffect(() => {\n    const width = wrapperRef.current && wrapperRef.current.getBoundingClientRect().width;\n    const cardTotalLength = children.length;\n    const cardsInView = Math.floor(width / (cardWidth + gap / 2));\n    const slideCount = getCount(cardTotalLength, cardsInView);\n    handleSetState({ slideCount });\n    if (!slideCount) {\n      setSlideActiveCount(0);\n    }\n    let res = Math.floor(Math.floor(scrollLength / (cardWidth + gap / 2)) / slideActiveCount / cardsInView);\n    if (slideActiveCount === 0) return;\n    setSlideActiveCount(res);\n  }, [wrapperWidth, children]);\n\n  useEffect(() => {\n    setSlideActiveCount(0);\n  }, [init]);\n\n  return (\n    <div className={classes.container}>\n      <div ref={wrapperRef} className={classes.wrapper} {...bind()}>\n        <div style={{ gap }} ref={cardContainerRef} className={classes.cardContainer}>\n          {children}\n        </div>\n        {slideCount ? (\n          <>\n            <button\n              onClick={handleSlideLeft}\n              className={`${classes.ctrlBtn_left} ${slideActiveCount && classes.active}`}\n            >\n              <img src={iconLeft} alt=\"\" />\n            </button>\n            <button\n              onClick={handleSlideRight}\n              className={`${classes.ctrlBtn_right} ${slideActiveCount < slideCount && classes.active}`}\n            >\n              <img src={iconRight} alt=\"\" />\n            </button>\n          </>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default GenadropCarouselScreen;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Date-Filter/DateFilter.jsx",["2129","2130","2131","2132"],"import { useState } from \"react\";\nimport classes from \"./DateFilter.module.css\";\n\nconst DateFilter = () => {\n  const [activeDuration, setActiveDuration] = useState(\"24hours\");\n\n  const handleClick = (duration) => {\n    setActiveDuration(duration);\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={`${activeDuration === \"24hours\" && classes.active}`} onClick={() => handleClick(\"24hours\")}>\n        24 Hours\n      </div>\n      <div className={`${activeDuration === \"7days\" && classes.active}`} onClick={() => handleClick(\"7days\")}>\n        7 Days\n      </div>\n      <div className={`${activeDuration === \"30days\" && classes.active}`} onClick={() => handleClick(\"30days\")}>\n        30 Days\n      </div>\n    </div>\n  );\n};\n\nexport default DateFilter;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Home/Review/Reviews-Script.js",["2133","2134","2135"],"const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nfunction getHours(d) {\n  const hours = d.getHours() == 0 ? \"12\" : d.getHours() > 12 ? d.getHours() - 12 : d.getHours();\n  const minutes = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes();\n  const ampm = d.getHours() < 12 ? \" AM\" : \" PM\";\n  const formattedTime = `${hours}:${minutes} ${ampm}`;\n  return formattedTime;\n}\nexport const getFormattedDate = (date, address = true) => {\n  const d = new Date(date);\n  const dayName = days[d.getDay()];\n  const dayMonth = d.getDate();\n  const monthName = month[d.getMonth()];\n  const yaer = d.getFullYear();\n  return address\n    ? `${dayName}, ${monthName} ${dayMonth}, ${yaer}, ${getHours(d)} UTC`\n    : `${dayName}, ${monthName} ${dayMonth}, ${yaer} | ${getHours(d)} UTC`;\n};\nexport const getFormattedDateTweets = (date, address = true) => {\n  const d = new Date(date);\n  const dayName = days[d.getDay()];\n  const dayMonth = d.getDate();\n  const monthName = month[d.getMonth()];\n  const yaer = d.getFullYear();\n  return `${getHours(d)}, ${monthName} ${dayMonth}, ${yaer}`;\n};\n\nexport const twitterAPIURL = (twitterIDs) => {\n  let ids = \"\";\n  twitterIDs.forEach((id, idx) => {\n    if (idx < twitterIDs.length - 1) {\n      ids += `${id},`;\n    } else {\n      ids += `${id}`;\n    }\n  });\n  return `https://api.twitter.com/2/tweets?ids=${ids}&tweet.fields=attachments,author_id,created_at,entities&expansions=attachments.media_keys,author_id&media.fields=alt_text,duration_ms,media_key,preview_image_url,type,url,variants&user.fields=name,profile_image_url,username`;\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/Marketplace/Chains/Chains-Script.js",["2136"],"import algoIcon from \"../../../assets/icon-algo.svg\";\nimport auroraIcon from \"../../../assets/icon-aurora.svg\";\nimport celoIcon from \"../../../assets/icon-celo.svg\";\nimport polygonIcon from \"../../../assets/icon-polygon.svg\";\nimport nearIcon from \"../../../assets/icon-near.svg\";\nimport solanaIcon from \"../../../assets/icon-solana.svg\";\nimport allChains from \"../../../assets/all-chains.svg\";\n\nexport const chains = [\n  {\n    name: \"All Chains\",\n    icon: allChains,\n    color: \"#009987\",\n    border: \"#009987\",\n    bg: \"#FFFFFF\",\n    isComingSoon: false,\n  },\n  {\n    name: \"Algorand\",\n    icon: algoIcon,\n    color: \"white\",\n    border: \"transparent\",\n    bg: \"#245EC7\",\n    isComingSoon: false,\n  },\n  {\n    name: \"Polygon\",\n    icon: polygonIcon,\n    color: \"black\",\n    border: \"transparent\",\n    bg: \"#EEE6FA\",\n    isComingSoon: false,\n  },\n  {\n    name: \"Celo\",\n    icon: celoIcon,\n    color: \"#000000\",\n    border: \"transparent\",\n    bg: \"#FFEA94\",\n    isComingSoon: false,\n  },\n  {\n    name: \"Aurora\",\n    icon: auroraIcon,\n    color: \"white\",\n    border: \"transparent\",\n    bg: \"#6CD34B\",\n    isComingSoon: false,\n  },\n  {\n    name: \"Near\",\n    icon: nearIcon,\n    color: \"#000000\",\n    border: \"transparent\",\n    bg: \"#E1EBF5\",\n    isComingSoon: true,\n  },\n  {\n    name: \"Solana\",\n    icon: solanaIcon,\n    color: \"#FFFFFF\",\n    border: \"transparent\",\n    bg: \"#000000\",\n    isComingSoon: true,\n  },\n];\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/components/wallet-popup/walletPopup.jsx",["2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2149","2150","2151","2152","2153","2154","2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167"],"import classes from \"./walletPopup.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport metamaskIcon from \"../../assets/icon-metamask.svg\";\nimport walletConnectIcon from \"../../assets/icon-wallet-connect.svg\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { setProposedChain, setToggleWalletPopup } from \"../../gen-state/gen.actions\";\nimport supportedChains from \"../../utils/supportedChains\";\n\nconst WalletPopup = ({ handleSetState }) => {\n  const { dispatch, mainnet, connectFromMint } = useContext(GenContext);\n  const [showMoreOptions, setShowMoreOptions] = useState(false);\n  const [showConnectionMethods, setConnectionMethods] = useState(false);\n  const [activeChain, setActiveChain] = useState(null);\n  const [showMetamask, setMetamask] = useState(true);\n\n  let connectOptions = [];\n  for (let key in supportedChains) {\n    if (key !== \"4160\") {\n      connectOptions.push(supportedChains[key]);\n    }\n  }\n  connectOptions.unshift(supportedChains[4160]);\n\n  const handleChain = (chainId, isComingSoon = undefined) => {\n    if (isComingSoon) return;\n    if (chainId === 4160) {\n      setMetamask(false);\n    } else {\n      setMetamask(true);\n    }\n    setActiveChain(chainId);\n    setConnectionMethods(true);\n  };\n\n  const handleProposedChain = async () => {\n    dispatch(setProposedChain(activeChain));\n    dispatch(setToggleWalletPopup(false));\n    setConnectionMethods(false);\n  };\n\n  const handleMetamask = async () => {\n    handleSetState({ connectionMethod: \"metamask\" });\n    handleProposedChain();\n  };\n\n  const handleWalletConnect = async () => {\n    handleSetState({ connectionMethod: \"walletConnect\" });\n    handleProposedChain();\n  };\n\n  useEffect(() => {\n    setShowMoreOptions(false);\n    setConnectionMethods(false);\n  }, []);\n\n  useEffect(() => {\n    if (!connectFromMint.chainId) return;\n    dispatch(setToggleWalletPopup(true));\n    handleChain(connectFromMint.chainId, connectFromMint.isComingSoon);\n  }, [connectFromMint]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.card}>\n        <div className={classes.iconContainer}>\n          <CloseIcon\n            onClick={() => {\n              dispatch(setToggleWalletPopup(false));\n              setShowMoreOptions(false);\n              setConnectionMethods(false);\n            }}\n            className={classes.closeIcon}\n          />\n        </div>\n\n        <div className={classes.heading}>\n          <h3>{showConnectionMethods ? \"Connect Wallets\" : \"Link Wallets\"}</h3>\n          <p>\n            {showConnectionMethods\n              ? \"Connect with one of our available wallet providers.\"\n              : \"Select any of our supported blockchain to connect your wallet.\"}{\" \"}\n          </p>\n        </div>\n\n        <div className={classes.wrapper}>\n          <div className={`${classes.chains} ${showConnectionMethods && classes.active}`}>\n            {connectOptions\n              .filter((chain) => mainnet === chain.isMainnet)\n              .filter((_, idx) => showMoreOptions || idx <= 3)\n              .map((chain, idx) => (\n                <div\n                  onClick={() => handleChain(chain.networkId, chain.comingSoon)}\n                  key={idx}\n                  className={`${classes.chain} ${chain.comingSoon && classes.comingSoon}`}\n                >\n                  <img src={chain.icon} alt=\"\" />\n                  <div className={classes.name}>\n                    <h4>\n                      {chain.label} {chain.comingSoon ? <span>Coming soon</span> : \"\"}\n                    </h4>\n                    <p className={classes.action}>connect to your {chain.name} wallet</p>\n                  </div>\n                </div>\n              ))}\n            <div className={classes.viewBtnContainer}>\n              <div className={classes.viewBtn} onClick={() => setShowMoreOptions(!showMoreOptions)}>\n                View {showMoreOptions ? \"less\" : \"more\"} options\n              </div>\n            </div>\n          </div>\n          <div className={`${classes.connectionMethods} ${showConnectionMethods && classes.active}`}>\n            <div\n              onClick={handleMetamask}\n              className={`${classes.connectionMethod} ${classes.metamask} ${showMetamask && classes.active}`}\n            >\n              <img src={metamaskIcon} alt=\"\" />\n              <h3>MetaMask</h3>\n              <p>Connect to you MetaMask Wallet</p>\n            </div>\n            <div onClick={handleWalletConnect} className={classes.connectionMethod}>\n              <img src={walletConnectIcon} alt=\"\" />\n              <h3>WalletConnect</h3>\n              <p>Scan with WalletConnect to connect</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletPopup;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/preview-script.js",["2168","2169","2170","2171","2172","2173","2174","2175","2176"],"import axios from \"axios\";\nimport {\n  addDescription,\n  promptDeleteAsset,\n  renameAsset,\n  setCollectionDescription,\n  setCollectionName,\n  setLoader,\n  setMintInfo,\n  setNftLayers,\n  setNotification,\n  setOutputFormat,\n  setPrompt,\n} from \"../../gen-state/gen.actions\";\nimport { getDefaultName, handleImage } from \"../../utils\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const isUnique = (attributes, attr, rule) => {\n  const parseAttrToRule = attr.map((p) => ({\n    layerTitle: p.trait_type,\n    imageName: p.value,\n  }));\n  const att_str = JSON.stringify(attr);\n  for (const _attr of attributes) {\n    const _attr_str = JSON.stringify(_attr);\n    if (_attr_str === att_str) return false;\n  }\n  let result;\n  for (const rl of rule) {\n    result = rl.every((el) => {\n      let singleRule = {\n        layerTitle: el.layerTitle,\n        imageName: el.imageName,\n      };\n      if (JSON.stringify(parseAttrToRule).includes(JSON.stringify(singleRule))) {\n        return true;\n      }\n      return false;\n    });\n    if (result === true) return false;\n  }\n  return true;\n};\n\nexport const createUniqueLayer = async (props) => {\n  const {\n    dispatch,\n    setLoader,\n    layers,\n    rule,\n    nftLayers,\n    collectionName,\n    collectionDescription,\n    index,\n    currentPage,\n    id,\n  } = props;\n  const newLayersCopy = [...nftLayers];\n  let newAttributes = [];\n  let uniqueIndex = 1;\n  const prevAttributes = newLayersCopy.map(({ attributes }) => attributes);\n\n  const uniqueCall = (resolve) => {\n    setTimeout(() => {\n      dispatch(setLoader(`removing ${uniqueIndex} duplicates`));\n      const attribute = [];\n      layers.forEach(({ layerTitle, traits }) => {\n        const randNum = Math.floor(Math.random() * traits.length);\n        const { traitTitle, Rarity, image } = traits[randNum];\n        attribute.push({\n          trait_type: layerTitle,\n          value: traitTitle.replace(\".png\", \"\"),\n          rarity: Rarity,\n          image,\n        });\n      });\n      if (isUnique(prevAttributes, attribute, rule)) {\n        newAttributes = [...attribute];\n      } else {\n        uniqueIndex += 1;\n      }\n      resolve();\n    }, 0);\n  };\n  for (let i = 0; i < uniqueIndex; i += 1) {\n    const promise = new Promise(uniqueCall);\n    // eslint-disable-next-line no-await-in-loop\n    await promise;\n  }\n\n  dispatch(setLoader(\"\"));\n  return {\n    id,\n    name: `${collectionName} ${getDefaultName(index + 1 + (currentPage * 20 - 20))}`.trim(),\n    description: collectionDescription,\n    image: \"image\",\n    attributes: newAttributes,\n  };\n};\n\nexport const generateArt = async (props) => {\n  const { layer, canvas, image, imageQuality } = props;\n  const images = [];\n  layer.attributes.forEach((attr) => {\n    images.push(attr.image);\n  });\n  await handleImage({ images, canvas, image });\n  const imageUrl = canvas.toDataURL(\"image/webp\", imageQuality);\n  return { id: layer.id, imageUrl };\n};\n\nexport const handleDeleteAndReplace = async (deleteAndReplaceProps) => {\n  const {\n    id,\n    index,\n    currentPage,\n    currentDnaLayers,\n    dispatch,\n    combinations,\n    rule,\n    mintAmount,\n    collectionName,\n    collectionDescription,\n    imageQuality,\n    layers,\n    nftLayers,\n    canvas,\n  } = deleteAndReplaceProps;\n\n  if (!currentDnaLayers)\n    return dispatch(\n      setNotification({\n        type: \"error\",\n        message: \"Sorry! you need to generate a new collection to use this feature\",\n      })\n    );\n  if (!(combinations - rule.length - mintAmount)) {\n    dispatch(setMintInfo(\"  cannot generate asset from 0 combination\"));\n  } else {\n    dispatch(setLoader(\"generating...\"));\n    dispatch(setMintInfo(\"\"));\n    const uniqueLayer = await createUniqueLayer({\n      dispatch,\n      setLoader,\n      collectionName,\n      collectionDescription,\n      index,\n      currentPage,\n      layers: currentDnaLayers,\n      rule,\n      nftLayers,\n      id,\n      mintAmount,\n    });\n    const art = await generateArt({\n      dispatch,\n      setLoader,\n      layer: uniqueLayer,\n      canvas,\n      image: layers[0].traits[0].image,\n      imageQuality,\n    });\n    const newLayers = nftLayers.map((asset) => {\n      if (asset.id === uniqueLayer.id) {\n        let attributes = uniqueLayer.attributes;\n        attributes = attributes.map(({ image, ...otherAttrProps }) => ({ ...otherAttrProps }));\n        return { ...uniqueLayer, attributes, image: art.imageUrl };\n      }\n      return asset;\n    });\n    dispatch(setLoader(\"\"));\n    dispatch(setNftLayers(newLayers));\n  }\n};\n\nexport const generateGif = (generateGifProps) => {\n  const { duration, gifImages, gifs, collectionName, handleSetState, dispatch } = generateGifProps;\n\n  if (duration < 0 || !duration) {\n    dispatch(\n      setNotification({\n        message: \"please enter a valid duration.\",\n        type: \"error\",\n      })\n    );\n    return;\n  }\n  if (gifImages.length < 2) {\n    dispatch(\n      setNotification({\n        message: \"please select the images.\",\n        type: \"error\",\n      })\n    );\n    return;\n  }\n  const urls = gifImages.map((img) => img.image);\n  const attributes = [];\n  gifImages.map((img) => {\n    return img.attributes.map((attribute) => {\n      attributes.push(attribute);\n      return attribute;\n    });\n  });\n  dispatch(setLoader(\"generating...\"));\n\n  axios.post(`https://gif-generator-api.herokuapp.com/`, { urls, duration }).then((res) => {\n    dispatch(setLoader(\"\"));\n    handleSetState({\n      gifs: [\n        ...gifs,\n        {\n          id: uuid(),\n          attributes,\n          description: \"\",\n          image: res.data.data,\n          name: `${collectionName} ${getDefaultName(gifs.length + 1)}`.trim(),\n        },\n      ],\n    });\n    handleSetState({ gifShow: false, toggleGuide: true, gifImages: [], duration: \"\" });\n    dispatch(setLoader(\"\"));\n  });\n};\n\nexport const addToCollection = (addToCollectionProps) => {\n  const { gif, gifs, nftLayers, collectionName, handleSetState, dispatch } = addToCollectionProps;\n  console.log({ gifs, nftLayers });\n  const updatedGifs = gifs.filter((img) => gif.id !== img.id);\n  const newLayers = [gif, ...nftLayers].map((asset, idx) => ({\n    ...asset,\n    name:\n      asset.name === `${collectionName} ${getDefaultName(idx)}`.trim() ||\n      asset.name === `${collectionName} ${getDefaultName(gifs.indexOf(gif) + 1)}`.trim()\n        ? `${collectionName} ${getDefaultName(idx + 1)}`.trim()\n        : asset.name,\n  }));\n  dispatch(setNftLayers(newLayers));\n  dispatch(\n    setNotification({\n      message: \"added to the collection.\",\n      type: \"success\",\n    })\n  );\n  handleSetState({ gifs: updatedGifs });\n};\n\nexport const addGif = (addGifProps) => {\n  const { asset, gifImages, handleSetState } = addGifProps;\n  if (gifImages.filter((e) => e.id === asset.id).length > 0) {\n    const newImgs = gifImages.filter((e) => e.id !== asset.id);\n    handleSetState({ gifImages: newImgs });\n  } else {\n    handleSetState({ gifImages: [...gifImages, asset] });\n  }\n};\n\nexport const addAllGifs = (addGifProps) => {\n  const { gifs, nftLayers, collectionName, handleSetState, dispatch } = addGifProps;\n\n  const newLayers = [...gifs, ...nftLayers].map((asset, idx) => ({\n    ...asset,\n    name:\n      asset.name === `${collectionName} ${getDefaultName(idx + 1 - gifs.length)}`.trim()\n        ? `${collectionName} ${getDefaultName(idx + 1)}`.trim()\n        : asset.name,\n  }));\n  dispatch(setNftLayers(newLayers));\n  dispatch(\n    setNotification({\n      message: \"added to the collection.\",\n      type: \"success\",\n    })\n  );\n  handleSetState({\n    toggleGuide: false,\n    gifs: [],\n  });\n};\n\nexport const handleFormatChange = (formatProps) => {\n  const { val, dispatch, ipfsRef, arweaveRef } = formatProps;\n  if (val === \"ipfs\") {\n    ipfsRef.current.checked = true;\n    dispatch(setOutputFormat(\"ipfs\"));\n  } else if (val === \"arweave\") {\n    arweaveRef.current.checked = true;\n    dispatch(setOutputFormat(\"arweave\"));\n  }\n};\n\nexport const handleCollectionDescription = (descriptionProps) => {\n  const { event, enableAllDescription, nftLayers, dispatch } = descriptionProps;\n  if (enableAllDescription) {\n    const newLayers = nftLayers.map((asset) => ({\n      ...asset,\n      description: event.target.value,\n    }));\n    dispatch(setNftLayers(newLayers));\n  }\n  dispatch(setCollectionDescription(event.target.value));\n};\n\nexport const handleRename = (renameProps) => {\n  const { id, value, index, dispatch } = renameProps;\n  if (!value) {\n    dispatch(\n      renameAsset({\n        id,\n        name: `${collectionName} ${getDefaultName(index + 1)}`.trim(),\n      })\n    );\n  } else {\n    dispatch(renameAsset({ id, name: value }));\n  }\n};\n\nexport const handleCollectionName = async (collectionNameProps) => {\n  const { value, nftLayers, dispatch } = collectionNameProps;\n  dispatch(setCollectionName(value));\n  const newLayers = nftLayers.map((asset, idx) => ({\n    ...asset,\n    name: `${value} ${getDefaultName(idx + 1)}`.trim(),\n  }));\n  dispatch(setNftLayers(newLayers));\n};\n\nexport const handleDelete = ({ dispatch, id }) => {\n  dispatch(setPrompt(promptDeleteAsset(id)));\n};\n\nexport const handleDescription = ({ dispatch, id, description }) => {\n  dispatch(addDescription({ id, description }));\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/index2.js",["2177","2178"],"/* eslint-disable no-await-in-loop */\nimport fileDownload from \"js-file-download\";\nimport JSZip from \"jszip\";\nimport { setToggleUpgradeModal } from \"../gen-state/gen.actions\";\n\nexport const getAweaveFormat = async (nftLayers, dispatch, setLoader) => {\n  const clone = [];\n  for (let i = 0; i < nftLayers.length; i += 1) {\n    const promise = new Promise((resolve) => {\n      setTimeout(() => {\n        dispatch(\n          setLoader(\n            `getting metadata ready for download\n${i + 1} of ${nftLayers.length}`\n          )\n        );\n        const fileType =\n          nftLayers[i].image.split(\";base64\")[0].split(\"image/\")[1] === \"webp\"\n            ? \"png\"\n            : nftLayers[i].image.split(\";base64\")[0].split(\"image/\")[1];\n        clone.push({\n          name: nftLayers[i].name,\n          image: `${nftLayers[i].name}.${fileType}`,\n          description: nftLayers[i].description,\n          attributes: nftLayers[i].attributes,\n          symbol: \"\",\n          seller_fee_basis_points: \"\",\n          external_url: \"\",\n          collection: {\n            name: nftLayers[i].name,\n            family: \"\",\n          },\n          properties: {\n            creators: [\n              {\n                address: \"\",\n                share: 100,\n              },\n            ],\n          },\n        });\n        resolve();\n      }, 0);\n    });\n    await promise;\n  }\n  dispatch(setLoader(\"\"));\n  return clone;\n};\n\nexport const getIpfsFormat = async (nftLayers, dispatch, setLoader) => {\n  const clone = [];\n  for (let i = 0; i < nftLayers.length; i += 1) {\n    const promise = new Promise((resolve) => {\n      setTimeout(() => {\n        dispatch(\n          setLoader(\n            `getting metadata ready for download\n${i + 1} of ${nftLayers.length}`\n          )\n        );\n        const fileType =\n          nftLayers[i].image.split(\";base64\")[0].split(\"image/\")[1] === \"webp\"\n            ? \"png\"\n            : nftLayers[i].image.split(\";base64\")[0].split(\"image/\")[1];\n        clone.push({\n          name: nftLayers[i].name,\n          image: `${nftLayers[i].name}.${fileType}`,\n          description: nftLayers[i].description,\n          attributes: nftLayers[i].attributes,\n        });\n        resolve();\n      }, 0);\n    });\n    await promise;\n  }\n  dispatch(setLoader(\"\"));\n  return clone;\n};\n\nexport const paginate = (input, count) => {\n  const countPerPage = count;\n  const numberOfPages = Math.ceil(input.length / countPerPage);\n  let startIndex = 0;\n  let endIndex = startIndex + countPerPage;\n  const paginateObj = {};\n  for (let i = 1; i <= numberOfPages; i += 1) {\n    paginateObj[i] = input.slice(startIndex, endIndex);\n    startIndex = endIndex;\n    endIndex = startIndex + countPerPage;\n  }\n  return paginateObj;\n};\n\nconst downloadCallback = async (props) => {\n  const { value, name, outputFormat, dispatch, setLoader, setZip, id } = props;\n  const zip = new JSZip();\n  if (outputFormat.toLowerCase() === \"arweave\") {\n    const aweave = await getAweaveFormat(value, dispatch, setLoader, id);\n    aweave.forEach((data) => {\n      zip.file(`${data.name}.json`, JSON.stringify(data, null, \"\\t\"));\n    });\n  } else {\n    zip.file(\"metadata.json\", JSON.stringify(await getIpfsFormat(value, dispatch, setLoader, id), null, \"\\t\"));\n  }\n  for (let i = 0; i < value.length; i += 1) {\n    const promise = new Promise((resolve) => {\n      setTimeout(() => {\n        dispatch(\n          setLoader(\n            `getting assets ready for download\n${i + 1} of ${value.length}`\n          )\n        );\n        let base64String;\n        if (value[i].image.includes(\"data:image/gif\")) {\n          base64String = value[i].image.replace(\"data:image/gif;base64,\", \"\");\n          zip.file(`${value[i].name}.gif`, base64String, { base64: true });\n        } else {\n          base64String = value[i].image.replace(\"data:image/webp;base64,\", \"\");\n          zip.file(`${value[i].name}.png`, base64String, { base64: true });\n        }\n        resolve();\n      }, 0);\n    });\n    await promise;\n  }\n  dispatch(setLoader(\"zipping....\"));\n  const content = await zip.generateAsync({ type: \"blob\" });\n\n  dispatch(\n    setZip({\n      name,\n      file: content,\n    })\n  );\n  fileDownload(content, `${name}.zip`);\n  dispatch(setLoader(\"\"));\n};\n\n// eslint-disable-next-line consistent-return\nexport const handleDownload = async (input) => {\n  const { value, dispatch, setZip, setNotification, name, currentPlan } = input;\n  if (currentPlan === \"free\") {\n    dispatch(setToggleUpgradeModal(true));\n    return;\n  }\n  if (!name) {\n    return dispatch(\n      setNotification({\n        message: \"please, name your collection and try again.\",\n        type: \"warning\",\n      })\n    );\n  }\n  const paginated = paginate(value, 1000);\n  const index = Object.keys(paginated).length;\n  dispatch(\n    setNotification({\n      message: `your asset will be downloaded in ${index} ${index === 1 ? \"batch\" : \"batches\"}`,\n      type: \"default\",\n    })\n  );\n  for (let i = 1; i <= index; i += 1) {\n    await downloadCallback({ ...input, id: i, value: paginated[i], setZip });\n  }\n  dispatch(\n    setNotification({\n      message: \"downloaded successfully\",\n      type: \"success\",\n    })\n  );\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(\"zip file loaded\");\n    }, 0);\n  });\n};\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/text-editor.jsx",["2179"],"import React, { useState } from \"react\";\nimport classes from \"./text-editor.module.css\";\nimport { ReactComponent as EditIcon } from \"../../assets/icon-edit.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\n\nconst TextEditor = ({ placeholder, submitHandler, invert }) => {\n  const [state, setState] = useState({\n    value: \"\",\n    editor: false,\n  });\n\n  const { value, editor } = state;\n\n  const handleSetState = (payload) => {\n    setState((states) => ({ ...states, ...payload }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitHandler(value);\n    handleSetState({ editor: false, value: \"\" });\n  };\n\n  return (\n    <div className={`${classes.container} ${invert && classes.invert}`}>\n      {editor ? (\n        <form onSubmit={handleSubmit}>\n          <input autoFocus type=\"text\" value={value} onChange={(e) => handleSetState({ value: e.target.value })} />\n          <button type=\"submit\">\n            <MarkIcon className={classes.editIcon} />\n          </button>\n        </form>\n      ) : (\n        <div>\n          <p>{placeholder}</p>\n          <button type=\"button\" onClick={() => handleSetState({ editor: true, value: placeholder })}>\n            <EditIcon className={classes.editIcon} />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextEditor;\n","/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/pages/preview/gif-card/gifCard.jsx",["2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192"],"import { handleDownload } from \"../../../utils/index2\";\nimport { addToCollection, handleDescription, handleRename } from \"../preview-script\";\nimport TextEditor from \"../text-editor\";\nimport classes from \"../preview.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { setNotification, setLoader, setZip } from \"../../../gen-state/gen.actions\";\n\nconst GifCard = ({ gifCardProps, asset }) => {\n  const { image, id, name, description, index } = asset;\n  const { dispatch, outputFormat, collectionName } = gifCardProps;\n\n  return (\n    <div key={id} className={classes.card}>\n      <img className={classes.asset} src={image} alt=\"\" />\n      <div className={classes.cardBody}>\n        <div className={classes.textWrapper}>\n          <TextEditor\n            placeholder={name}\n            submitHandler={(value) => handleRename({ ...gifCardProps, value, id, index })}\n          />\n        </div>\n        <textarea\n          name=\"description\"\n          value={description}\n          cols=\"30\"\n          rows=\"3\"\n          placeholder=\"description\"\n          onChange={(e) =>\n            handleDescription({\n              value: e.target.value,\n              id,\n              index,\n            })\n          }\n        />\n        <div className={classes.buttonContainer}>\n          <button\n            type=\"button\"\n            onClick={() =>\n              handleDownload({\n                window,\n                dispatch,\n                setLoader,\n                setZip,\n                setNotification,\n                value: [asset],\n                name: asset.name,\n                outputFormat,\n                single: true,\n              })\n            }\n          >\n            Download\n          </button>\n          <button type=\"button\" onClick={() => addToCollection({ ...gifCardProps, gif: asset })}>\n            Add to {collectionName || \"collection\"}\n          </button>\n        </div>\n      </div>\n      <div\n        onClick={() =>\n          handleSetState({\n            gifs: gifs.filter((gif) => gif.id !== id),\n          })\n        }\n        className={classes.iconClose}\n      >\n        <CloseIcon className={classes.closeIcon} />\n      </div>\n    </div>\n  );\n};\n\nexport default GifCard;\n",{"ruleId":"2193","severity":1,"message":"2194","line":1,"column":1,"nodeType":"2195","endLine":1,"endColumn":41},{"ruleId":"2193","severity":1,"message":"2194","line":2,"column":1,"nodeType":"2195","endLine":2,"endColumn":34},{"ruleId":"2193","severity":1,"message":"2194","line":3,"column":1,"nodeType":"2195","endLine":3,"endColumn":22},{"ruleId":"2193","severity":1,"message":"2194","line":4,"column":1,"nodeType":"2195","endLine":4,"endColumn":50},{"ruleId":"2193","severity":1,"message":"2194","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":25},{"ruleId":"2193","severity":1,"message":"2194","line":6,"column":1,"nodeType":"2195","endLine":6,"endColumn":58},{"ruleId":"2193","severity":1,"message":"2194","line":7,"column":1,"nodeType":"2195","endLine":7,"endColumn":47},{"ruleId":"2196","replacedBy":"2197"},{"ruleId":"2198","replacedBy":"2199"},{"ruleId":"2200","replacedBy":"2201"},{"ruleId":"2202","replacedBy":"2203"},{"ruleId":"2204","replacedBy":"2205"},{"ruleId":"2206","severity":1,"message":"2207","line":72,"column":14,"nodeType":"2208","messageId":"2209","endLine":132,"endColumn":8},{"ruleId":"2210","severity":1,"message":"2211","line":86,"column":3,"nodeType":"2208","messageId":"2212","endLine":86,"endColumn":14},{"ruleId":"2213","severity":1,"message":"2214","line":94,"column":28,"nodeType":"2215","messageId":"2216","endLine":94,"endColumn":49},{"ruleId":"2217","severity":1,"message":"2218","line":7,"column":7,"nodeType":"2219","messageId":"2220","endLine":7,"endColumn":8},{"ruleId":"2221","severity":1,"message":"2222","line":6,"column":1,"nodeType":"2195","endLine":6,"endColumn":57,"fix":"2223"},{"ruleId":"2221","severity":1,"message":"2224","line":21,"column":1,"nodeType":"2195","endLine":21,"endColumn":47,"fix":"2225"},{"ruleId":"2221","severity":1,"message":"2226","line":25,"column":1,"nodeType":"2195","endLine":25,"endColumn":47,"fix":"2227"},{"ruleId":"2228","severity":1,"message":"2229","line":35,"column":5,"nodeType":"2230","messageId":"2212","endLine":35,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":52,"column":7,"nodeType":"2230","messageId":"2212","endLine":52,"endColumn":18},{"ruleId":"2228","severity":1,"message":"2229","line":58,"column":5,"nodeType":"2230","messageId":"2212","endLine":58,"endColumn":16},{"ruleId":"2231","severity":1,"message":"2232","line":61,"column":11,"nodeType":"2219","messageId":"2233","endLine":61,"endColumn":19},{"ruleId":"2228","severity":1,"message":"2229","line":71,"column":5,"nodeType":"2230","messageId":"2212","endLine":71,"endColumn":16},{"ruleId":"2234","severity":1,"message":"2235","line":84,"column":31,"nodeType":"2236","messageId":"2237","endLine":84,"endColumn":33},{"ruleId":"2231","severity":1,"message":"2232","line":93,"column":15,"nodeType":"2219","messageId":"2233","endLine":93,"endColumn":23},{"ruleId":"2228","severity":1,"message":"2229","line":102,"column":9,"nodeType":"2230","messageId":"2212","endLine":102,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":115,"column":5,"nodeType":"2240","messageId":"2241","endLine":115,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":116,"column":7,"nodeType":"2240","messageId":"2241","endLine":116,"endColumn":82},{"ruleId":"2238","severity":1,"message":"2239","line":117,"column":9,"nodeType":"2240","messageId":"2241","endLine":117,"endColumn":55},{"ruleId":"2238","severity":1,"message":"2239","line":118,"column":9,"nodeType":"2240","messageId":"2241","endLine":118,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":121,"column":9,"nodeType":"2240","messageId":"2241","endLine":121,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":122,"column":11,"nodeType":"2240","messageId":"2241","endLine":122,"endColumn":44},{"ruleId":"2238","severity":1,"message":"2239","line":123,"column":13,"nodeType":"2240","messageId":"2241","endLine":123,"endColumn":17},{"ruleId":"2238","severity":1,"message":"2239","line":124,"column":13,"nodeType":"2240","messageId":"2241","endLine":124,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":125,"column":15,"nodeType":"2240","messageId":"2241","endLine":125,"endColumn":19},{"ruleId":"2242","severity":1,"message":"2243","line":126,"column":15,"nodeType":"2244","messageId":"2245","endLine":126,"endColumn":65},{"ruleId":"2238","severity":1,"message":"2239","line":126,"column":15,"nodeType":"2240","messageId":"2241","endLine":126,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":129,"column":15,"nodeType":"2240","messageId":"2241","endLine":129,"endColumn":57},{"ruleId":"2238","severity":1,"message":"2239","line":132,"column":21,"nodeType":"2240","messageId":"2241","endLine":132,"endColumn":116},{"ruleId":"2246","severity":1,"message":"2247","line":132,"column":31,"nodeType":"2219","messageId":"2248","endLine":132,"endColumn":34},{"ruleId":"2238","severity":1,"message":"2239","line":133,"column":23,"nodeType":"2240","messageId":"2241","endLine":133,"endColumn":66},{"ruleId":"2246","severity":1,"message":"2247","line":133,"column":33,"nodeType":"2219","messageId":"2248","endLine":133,"endColumn":36},{"ruleId":"2238","severity":1,"message":"2239","line":134,"column":25,"nodeType":"2240","messageId":"2241","endLine":134,"endColumn":57},{"ruleId":"2238","severity":1,"message":"2239","line":135,"column":27,"nodeType":"2240","messageId":"2241","endLine":135,"endColumn":57},{"ruleId":"2238","severity":1,"message":"2239","line":136,"column":29,"nodeType":"2240","messageId":"2241","endLine":136,"endColumn":63},{"ruleId":"2238","severity":1,"message":"2239","line":137,"column":29,"nodeType":"2240","messageId":"2241","endLine":137,"endColumn":63},{"ruleId":"2238","severity":1,"message":"2239","line":139,"column":27,"nodeType":"2240","messageId":"2241","endLine":139,"endColumn":67},{"ruleId":"2238","severity":1,"message":"2239","line":141,"column":25,"nodeType":"2240","messageId":"2241","endLine":141,"endColumn":57},{"ruleId":"2238","severity":1,"message":"2239","line":142,"column":27,"nodeType":"2240","messageId":"2241","endLine":145,"endColumn":28},{"ruleId":"2238","severity":1,"message":"2239","line":146,"column":34,"nodeType":"2240","messageId":"2241","endLine":146,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":148,"column":27,"nodeType":"2240","messageId":"2241","endLine":148,"endColumn":110},{"ruleId":"2238","severity":1,"message":"2239","line":149,"column":36,"nodeType":"2240","messageId":"2241","endLine":149,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":151,"column":27,"nodeType":"2240","messageId":"2241","endLine":151,"endColumn":110},{"ruleId":"2238","severity":1,"message":"2239","line":152,"column":29,"nodeType":"2240","messageId":"2241","endLine":154,"endColumn":31},{"ruleId":"2238","severity":1,"message":"2239","line":158,"column":23,"nodeType":"2240","messageId":"2241","endLine":158,"endColumn":109},{"ruleId":"2238","severity":1,"message":"2239","line":159,"column":25,"nodeType":"2240","messageId":"2241","endLine":159,"endColumn":55},{"ruleId":"2238","severity":1,"message":"2239","line":160,"column":27,"nodeType":"2240","messageId":"2241","endLine":160,"endColumn":58},{"ruleId":"2238","severity":1,"message":"2239","line":161,"column":27,"nodeType":"2240","messageId":"2241","endLine":161,"endColumn":59},{"ruleId":"2238","severity":1,"message":"2239","line":163,"column":25,"nodeType":"2240","messageId":"2241","endLine":163,"endColumn":59},{"ruleId":"2231","severity":1,"message":"2249","line":164,"column":90,"nodeType":"2219","messageId":"2233","endLine":164,"endColumn":93},{"ruleId":"2238","severity":1,"message":"2239","line":165,"column":29,"nodeType":"2240","messageId":"2241","endLine":165,"endColumn":72},{"ruleId":"2246","severity":1,"message":"2247","line":165,"column":39,"nodeType":"2219","messageId":"2248","endLine":165,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":167,"column":33,"nodeType":"2240","messageId":"2241","endLine":167,"endColumn":74},{"ruleId":"2238","severity":1,"message":"2239","line":169,"column":33,"nodeType":"2240","messageId":"2241","endLine":169,"endColumn":76},{"ruleId":"2238","severity":1,"message":"2239","line":171,"column":31,"nodeType":"2240","messageId":"2241","endLine":171,"endColumn":68},{"ruleId":"2238","severity":1,"message":"2239","line":183,"column":15,"nodeType":"2240","messageId":"2241","endLine":183,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":184,"column":17,"nodeType":"2240","messageId":"2241","endLine":184,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":185,"column":17,"nodeType":"2240","messageId":"2241","endLine":185,"endColumn":23},{"ruleId":"2238","severity":1,"message":"2239","line":186,"column":17,"nodeType":"2240","messageId":"2241","endLine":186,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":187,"column":17,"nodeType":"2240","messageId":"2241","endLine":187,"endColumn":23},{"ruleId":"2238","severity":1,"message":"2239","line":188,"column":17,"nodeType":"2240","messageId":"2241","endLine":188,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":194,"column":9,"nodeType":"2240","messageId":"2241","endLine":194,"endColumn":22},{"ruleId":"2221","severity":1,"message":"2250","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":45,"fix":"2251"},{"ruleId":"2252","severity":1,"message":"2253","line":5,"column":37,"nodeType":"2254","endLine":5,"endColumn":44,"fix":"2255"},{"ruleId":"2221","severity":1,"message":"2256","line":7,"column":1,"nodeType":"2195","endLine":7,"endColumn":47,"fix":"2257"},{"ruleId":"2221","severity":1,"message":"2250","line":8,"column":1,"nodeType":"2195","endLine":8,"endColumn":36,"fix":"2258"},{"ruleId":"2252","severity":1,"message":"2253","line":8,"column":28,"nodeType":"2254","endLine":8,"endColumn":35},{"ruleId":"2231","severity":1,"message":"2259","line":19,"column":23,"nodeType":"2219","messageId":"2233","endLine":19,"endColumn":27},{"ruleId":"2231","severity":1,"message":"2260","line":19,"column":29,"nodeType":"2219","messageId":"2233","endLine":19,"endColumn":34},{"ruleId":"2231","severity":1,"message":"2259","line":44,"column":34,"nodeType":"2219","messageId":"2233","endLine":44,"endColumn":38},{"ruleId":"2261","severity":1,"message":"2262","line":45,"column":9,"nodeType":"2219","messageId":"2263","endLine":45,"endColumn":15,"fix":"2264"},{"ruleId":"2261","severity":1,"message":"2265","line":52,"column":9,"nodeType":"2219","messageId":"2263","endLine":52,"endColumn":21,"fix":"2266"},{"ruleId":"2234","severity":1,"message":"2235","line":61,"column":16,"nodeType":"2236","messageId":"2237","endLine":61,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":69,"column":5,"nodeType":"2240","messageId":"2241","endLine":69,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":70,"column":22,"nodeType":"2240","messageId":"2241","endLine":70,"endColumn":88},{"ruleId":"2238","severity":1,"message":"2239","line":71,"column":7,"nodeType":"2240","messageId":"2241","endLine":71,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":72,"column":9,"nodeType":"2240","messageId":"2241","endLine":72,"endColumn":13},{"ruleId":"2238","severity":1,"message":"2239","line":73,"column":9,"nodeType":"2240","messageId":"2241","endLine":73,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":76,"column":7,"nodeType":"2240","messageId":"2241","endLine":76,"endColumn":41},{"ruleId":"2231","severity":1,"message":"2259","line":77,"column":36,"nodeType":"2219","messageId":"2233","endLine":77,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":78,"column":11,"nodeType":"2240","messageId":"2241","endLine":78,"endColumn":54},{"ruleId":"2246","severity":1,"message":"2247","line":78,"column":21,"nodeType":"2219","messageId":"2248","endLine":78,"endColumn":24},{"ruleId":"2238","severity":1,"message":"2239","line":79,"column":34,"nodeType":"2240","messageId":"2241","endLine":79,"endColumn":64},{"ruleId":"2238","severity":1,"message":"2239","line":80,"column":13,"nodeType":"2240","messageId":"2241","endLine":80,"endColumn":43},{"ruleId":"2238","severity":1,"message":"2239","line":81,"column":15,"nodeType":"2240","messageId":"2241","endLine":81,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":82,"column":15,"nodeType":"2240","messageId":"2241","endLine":82,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":83,"column":15,"nodeType":"2240","messageId":"2241","endLine":83,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":84,"column":15,"nodeType":"2240","messageId":"2241","endLine":84,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":85,"column":15,"nodeType":"2240","messageId":"2241","endLine":85,"endColumn":49},{"ruleId":"2231","severity":1,"message":"2267","line":86,"column":58,"nodeType":"2219","messageId":"2233","endLine":86,"endColumn":61},{"ruleId":"2238","severity":1,"message":"2239","line":87,"column":19,"nodeType":"2240","messageId":"2241","endLine":87,"endColumn":62},{"ruleId":"2246","severity":1,"message":"2247","line":87,"column":29,"nodeType":"2219","messageId":"2248","endLine":87,"endColumn":32},{"ruleId":"2238","severity":1,"message":"2239","line":89,"column":23,"nodeType":"2240","messageId":"2241","endLine":89,"endColumn":64},{"ruleId":"2238","severity":1,"message":"2239","line":91,"column":23,"nodeType":"2240","messageId":"2241","endLine":91,"endColumn":66},{"ruleId":"2238","severity":1,"message":"2239","line":93,"column":21,"nodeType":"2240","messageId":"2241","endLine":93,"endColumn":58},{"ruleId":"2238","severity":1,"message":"2239","line":98,"column":17,"nodeType":"2240","messageId":"2241","endLine":98,"endColumn":120},{"ruleId":"2238","severity":1,"message":"2239","line":102,"column":17,"nodeType":"2240","messageId":"2241","endLine":102,"endColumn":80},{"ruleId":"2238","severity":1,"message":"2239","line":104,"column":17,"nodeType":"2240","messageId":"2241","endLine":107,"endColumn":18},{"ruleId":"2231","severity":1,"message":"2268","line":69,"column":13,"nodeType":"2219","messageId":"2233","endLine":69,"endColumn":23},{"ruleId":"2246","severity":1,"message":"2247","line":173,"column":27,"nodeType":"2219","messageId":"2248","endLine":173,"endColumn":30},{"ruleId":"2269","severity":1,"message":"2270","line":69,"column":5,"nodeType":"2219","messageId":"2271","endLine":69,"endColumn":10},{"ruleId":"2272","severity":1,"message":"2273","line":132,"column":52,"nodeType":"2274","messageId":"2275","endLine":132,"endColumn":75},{"ruleId":"2276","severity":1,"message":"2277","line":132,"column":65,"nodeType":"2254","messageId":"2278","endLine":132,"endColumn":74,"fix":"2279"},{"ruleId":"2272","severity":1,"message":"2273","line":132,"column":78,"nodeType":"2274","messageId":"2275","endLine":132,"endColumn":101},{"ruleId":"2276","severity":1,"message":"2277","line":132,"column":91,"nodeType":"2254","messageId":"2278","endLine":132,"endColumn":100,"fix":"2280"},{"ruleId":"2272","severity":1,"message":"2273","line":134,"column":52,"nodeType":"2274","messageId":"2275","endLine":134,"endColumn":64},{"ruleId":"2272","severity":1,"message":"2273","line":134,"column":67,"nodeType":"2274","messageId":"2275","endLine":134,"endColumn":79},{"ruleId":"2272","severity":1,"message":"2273","line":138,"column":52,"nodeType":"2274","messageId":"2275","endLine":138,"endColumn":75},{"ruleId":"2276","severity":1,"message":"2277","line":138,"column":65,"nodeType":"2254","messageId":"2278","endLine":138,"endColumn":74,"fix":"2281"},{"ruleId":"2272","severity":1,"message":"2273","line":138,"column":78,"nodeType":"2274","messageId":"2275","endLine":138,"endColumn":101},{"ruleId":"2276","severity":1,"message":"2277","line":138,"column":91,"nodeType":"2254","messageId":"2278","endLine":138,"endColumn":100,"fix":"2282"},{"ruleId":"2272","severity":1,"message":"2273","line":140,"column":52,"nodeType":"2274","messageId":"2275","endLine":140,"endColumn":64},{"ruleId":"2272","severity":1,"message":"2273","line":140,"column":67,"nodeType":"2274","messageId":"2275","endLine":140,"endColumn":79},{"ruleId":"2246","severity":1,"message":"2247","line":194,"column":37,"nodeType":"2219","messageId":"2248","endLine":194,"endColumn":40},{"ruleId":"2228","severity":1,"message":"2229","line":128,"column":7,"nodeType":"2230","messageId":"2212","endLine":128,"endColumn":18},{"ruleId":"2246","severity":1,"message":"2247","line":145,"column":40,"nodeType":"2219","messageId":"2248","endLine":145,"endColumn":45},{"ruleId":"2217","severity":1,"message":"2283","line":14,"column":3,"nodeType":"2219","messageId":"2220","endLine":14,"endColumn":16},{"ruleId":"2221","severity":1,"message":"2284","line":19,"column":1,"nodeType":"2195","endLine":19,"endColumn":33,"fix":"2285"},{"ruleId":"2217","severity":1,"message":"2286","line":28,"column":10,"nodeType":"2219","messageId":"2220","endLine":28,"endColumn":20},{"ruleId":"2217","severity":1,"message":"2287","line":28,"column":22,"nodeType":"2219","messageId":"2220","endLine":28,"endColumn":35},{"ruleId":"2217","severity":1,"message":"2288","line":29,"column":10,"nodeType":"2219","messageId":"2220","endLine":29,"endColumn":22},{"ruleId":"2217","severity":1,"message":"2289","line":30,"column":10,"nodeType":"2219","messageId":"2220","endLine":30,"endColumn":25},{"ruleId":"2217","severity":1,"message":"2290","line":66,"column":5,"nodeType":"2219","messageId":"2220","endLine":66,"endColumn":23},{"ruleId":"2217","severity":1,"message":"2291","line":67,"column":5,"nodeType":"2219","messageId":"2220","endLine":67,"endColumn":20},{"ruleId":"2217","severity":1,"message":"2292","line":68,"column":5,"nodeType":"2219","messageId":"2220","endLine":68,"endColumn":13},{"ruleId":"2293","severity":1,"message":"2294","line":86,"column":19,"nodeType":"2295","messageId":"2212","endLine":86,"endColumn":21},{"ruleId":"2293","severity":1,"message":"2296","line":102,"column":19,"nodeType":"2295","messageId":"2212","endLine":102,"endColumn":21},{"ruleId":"2231","severity":1,"message":"2297","line":104,"column":15,"nodeType":"2219","messageId":"2233","endLine":104,"endColumn":28},{"ruleId":"2293","severity":1,"message":"2296","line":118,"column":19,"nodeType":"2295","messageId":"2212","endLine":118,"endColumn":21},{"ruleId":"2246","severity":1,"message":"2247","line":280,"column":41,"nodeType":"2219","messageId":"2248","endLine":280,"endColumn":44},{"ruleId":"2246","severity":1,"message":"2247","line":286,"column":33,"nodeType":"2219","messageId":"2248","endLine":286,"endColumn":36},{"ruleId":"2246","severity":1,"message":"2247","line":292,"column":33,"nodeType":"2219","messageId":"2248","endLine":292,"endColumn":36},{"ruleId":"2269","severity":1,"message":"2270","line":66,"column":5,"nodeType":"2219","messageId":"2271","endLine":66,"endColumn":10},{"ruleId":"2293","severity":1,"message":"2294","line":123,"column":27,"nodeType":"2295","messageId":"2212","endLine":123,"endColumn":29},{"ruleId":"2272","severity":1,"message":"2273","line":129,"column":52,"nodeType":"2274","messageId":"2275","endLine":129,"endColumn":75},{"ruleId":"2276","severity":1,"message":"2277","line":129,"column":65,"nodeType":"2254","messageId":"2278","endLine":129,"endColumn":74,"fix":"2298"},{"ruleId":"2272","severity":1,"message":"2273","line":129,"column":78,"nodeType":"2274","messageId":"2275","endLine":129,"endColumn":101},{"ruleId":"2276","severity":1,"message":"2277","line":129,"column":91,"nodeType":"2254","messageId":"2278","endLine":129,"endColumn":100,"fix":"2299"},{"ruleId":"2272","severity":1,"message":"2273","line":131,"column":52,"nodeType":"2274","messageId":"2275","endLine":131,"endColumn":64},{"ruleId":"2272","severity":1,"message":"2273","line":131,"column":67,"nodeType":"2274","messageId":"2275","endLine":131,"endColumn":79},{"ruleId":"2272","severity":1,"message":"2273","line":135,"column":52,"nodeType":"2274","messageId":"2275","endLine":135,"endColumn":75},{"ruleId":"2276","severity":1,"message":"2277","line":135,"column":65,"nodeType":"2254","messageId":"2278","endLine":135,"endColumn":74,"fix":"2300"},{"ruleId":"2272","severity":1,"message":"2273","line":135,"column":78,"nodeType":"2274","messageId":"2275","endLine":135,"endColumn":101},{"ruleId":"2276","severity":1,"message":"2277","line":135,"column":91,"nodeType":"2254","messageId":"2278","endLine":135,"endColumn":100,"fix":"2301"},{"ruleId":"2272","severity":1,"message":"2273","line":137,"column":52,"nodeType":"2274","messageId":"2275","endLine":137,"endColumn":64},{"ruleId":"2272","severity":1,"message":"2273","line":137,"column":67,"nodeType":"2274","messageId":"2275","endLine":137,"endColumn":79},{"ruleId":"2217","severity":1,"message":"2302","line":14,"column":8,"nodeType":"2219","messageId":"2220","endLine":14,"endColumn":18},{"ruleId":"2217","severity":1,"message":"2303","line":23,"column":24,"nodeType":"2219","messageId":"2220","endLine":23,"endColumn":28},{"ruleId":"2217","severity":1,"message":"2304","line":3,"column":25,"nodeType":"2219","messageId":"2220","endLine":3,"endColumn":29},{"ruleId":"2217","severity":1,"message":"2305","line":5,"column":38,"nodeType":"2219","messageId":"2220","endLine":5,"endColumn":53},{"ruleId":"2217","severity":1,"message":"2306","line":7,"column":40,"nodeType":"2219","messageId":"2220","endLine":7,"endColumn":48},{"ruleId":"2217","severity":1,"message":"2288","line":8,"column":10,"nodeType":"2219","messageId":"2220","endLine":8,"endColumn":22},{"ruleId":"2217","severity":1,"message":"2287","line":9,"column":10,"nodeType":"2219","messageId":"2220","endLine":9,"endColumn":23},{"ruleId":"2221","severity":1,"message":"2307","line":10,"column":1,"nodeType":"2195","endLine":10,"endColumn":33,"fix":"2308"},{"ruleId":"2217","severity":1,"message":"2309","line":10,"column":10,"nodeType":"2219","messageId":"2220","endLine":10,"endColumn":16},{"ruleId":"2217","severity":1,"message":"2310","line":11,"column":8,"nodeType":"2219","messageId":"2220","endLine":11,"endColumn":16},{"ruleId":"2217","severity":1,"message":"2311","line":15,"column":3,"nodeType":"2219","messageId":"2220","endLine":15,"endColumn":19},{"ruleId":"2217","severity":1,"message":"2312","line":16,"column":3,"nodeType":"2219","messageId":"2220","endLine":16,"endColumn":22},{"ruleId":"2221","severity":1,"message":"2313","line":21,"column":1,"nodeType":"2195","endLine":21,"endColumn":27,"fix":"2314"},{"ruleId":"2217","severity":1,"message":"2315","line":40,"column":41,"nodeType":"2219","messageId":"2220","endLine":40,"endColumn":46},{"ruleId":"2217","severity":1,"message":"2316","line":40,"column":48,"nodeType":"2219","messageId":"2220","endLine":40,"endColumn":57},{"ruleId":"2234","severity":1,"message":"2317","line":49,"column":28,"nodeType":"2236","messageId":"2237","endLine":49,"endColumn":30},{"ruleId":"2231","severity":1,"message":"2318","line":62,"column":13,"nodeType":"2219","messageId":"2233","endLine":62,"endColumn":20},{"ruleId":"2231","severity":1,"message":"2318","line":74,"column":13,"nodeType":"2219","messageId":"2233","endLine":74,"endColumn":20},{"ruleId":"2228","severity":1,"message":"2229","line":86,"column":7,"nodeType":"2230","messageId":"2212","endLine":86,"endColumn":18},{"ruleId":"2234","severity":1,"message":"2319","line":107,"column":21,"nodeType":"2320","messageId":"2237","endLine":107,"endColumn":38},{"ruleId":"2228","severity":1,"message":"2229","line":161,"column":5,"nodeType":"2230","messageId":"2212","endLine":161,"endColumn":16},{"ruleId":"2217","severity":1,"message":"2321","line":13,"column":68,"nodeType":"2219","messageId":"2220","endLine":13,"endColumn":79},{"ruleId":"2231","severity":1,"message":"2322","line":99,"column":13,"nodeType":"2219","messageId":"2233","endLine":99,"endColumn":23},{"ruleId":"2323","severity":1,"message":"2324","line":103,"column":27,"nodeType":"2236","messageId":"2325","endLine":103,"endColumn":29},{"ruleId":"2323","severity":1,"message":"2324","line":138,"column":30,"nodeType":"2236","messageId":"2325","endLine":138,"endColumn":32},{"ruleId":"2246","severity":1,"message":"2247","line":209,"column":19,"nodeType":"2219","messageId":"2248","endLine":209,"endColumn":22},{"ruleId":"2293","severity":1,"message":"2294","line":297,"column":31,"nodeType":"2295","messageId":"2212","endLine":297,"endColumn":33},{"ruleId":"2326","severity":1,"message":"2327","line":298,"column":15,"nodeType":"2240","messageId":"2328","endLine":298,"endColumn":20,"fix":"2329"},{"ruleId":"2242","severity":1,"message":"2243","line":315,"column":19,"nodeType":"2244","messageId":"2245","endLine":320,"endColumn":28},{"ruleId":"2242","severity":1,"message":"2243","line":324,"column":19,"nodeType":"2244","messageId":"2245","endLine":326,"endColumn":28},{"ruleId":"2242","severity":1,"message":"2243","line":334,"column":23,"nodeType":"2244","messageId":"2245","endLine":336,"endColumn":32},{"ruleId":"2242","severity":1,"message":"2243","line":340,"column":23,"nodeType":"2244","messageId":"2245","endLine":342,"endColumn":32},{"ruleId":"2242","severity":1,"message":"2243","line":348,"column":23,"nodeType":"2244","messageId":"2245","endLine":351,"endColumn":32},{"ruleId":"2246","severity":1,"message":"2247","line":451,"column":25,"nodeType":"2219","messageId":"2248","endLine":451,"endColumn":28},{"ruleId":"2246","severity":1,"message":"2247","line":464,"column":23,"nodeType":"2219","messageId":"2248","endLine":464,"endColumn":26},{"ruleId":"2246","severity":1,"message":"2247","line":17,"column":25,"nodeType":"2219","messageId":"2248","endLine":17,"endColumn":28},{"ruleId":"2228","severity":1,"message":"2229","line":10,"column":5,"nodeType":"2230","messageId":"2212","endLine":10,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":24,"column":5,"nodeType":"2230","messageId":"2212","endLine":24,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":32,"column":5,"nodeType":"2240","messageId":"2241","endLine":32,"endColumn":75},{"ruleId":"2238","severity":1,"message":"2239","line":33,"column":7,"nodeType":"2240","messageId":"2241","endLine":33,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":34,"column":9,"nodeType":"2240","messageId":"2241","endLine":34,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":35,"column":9,"nodeType":"2240","messageId":"2241","endLine":35,"endColumn":41},{"ruleId":"2242","severity":1,"message":"2243","line":36,"column":11,"nodeType":"2244","messageId":"2245","endLine":38,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":36,"column":11,"nodeType":"2240","messageId":"2241","endLine":36,"endColumn":69},{"ruleId":"2242","severity":1,"message":"2243","line":39,"column":11,"nodeType":"2244","messageId":"2245","endLine":41,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":39,"column":11,"nodeType":"2240","messageId":"2241","endLine":39,"endColumn":69},{"ruleId":"2261","severity":1,"message":"2330","line":38,"column":9,"nodeType":"2219","messageId":"2263","endLine":38,"endColumn":16,"fix":"2331"},{"ruleId":"2231","severity":1,"message":"2332","line":38,"column":9,"nodeType":"2219","messageId":"2233","endLine":38,"endColumn":16},{"ruleId":"2217","severity":1,"message":"2333","line":15,"column":8,"nodeType":"2219","messageId":"2220","endLine":15,"endColumn":18},{"ruleId":"2217","severity":1,"message":"2289","line":24,"column":22,"nodeType":"2219","messageId":"2220","endLine":24,"endColumn":37},{"ruleId":"2217","severity":1,"message":"2334","line":70,"column":9,"nodeType":"2219","messageId":"2220","endLine":70,"endColumn":18},{"ruleId":"2217","severity":1,"message":"2335","line":88,"column":12,"nodeType":"2219","messageId":"2220","endLine":88,"endColumn":29},{"ruleId":"2231","severity":1,"message":"2336","line":111,"column":9,"nodeType":"2219","messageId":"2233","endLine":111,"endColumn":19},{"ruleId":"2323","severity":1,"message":"2324","line":122,"column":27,"nodeType":"2236","messageId":"2325","endLine":122,"endColumn":29},{"ruleId":"2228","severity":1,"message":"2229","line":139,"column":5,"nodeType":"2230","messageId":"2212","endLine":139,"endColumn":16},{"ruleId":"2234","severity":1,"message":"2337","line":161,"column":29,"nodeType":"2338","messageId":"2339","endLine":161,"endColumn":53},{"ruleId":"2228","severity":1,"message":"2229","line":169,"column":9,"nodeType":"2230","messageId":"2212","endLine":169,"endColumn":20},{"ruleId":"2246","severity":1,"message":"2247","line":255,"column":21,"nodeType":"2219","messageId":"2248","endLine":255,"endColumn":24},{"ruleId":"2246","severity":1,"message":"2247","line":260,"column":22,"nodeType":"2219","messageId":"2248","endLine":260,"endColumn":25},{"ruleId":"2242","severity":1,"message":"2243","line":339,"column":19,"nodeType":"2244","messageId":"2245","endLine":344,"endColumn":28},{"ruleId":"2242","severity":1,"message":"2243","line":346,"column":19,"nodeType":"2244","messageId":"2245","endLine":348,"endColumn":28},{"ruleId":"2242","severity":1,"message":"2243","line":355,"column":21,"nodeType":"2244","messageId":"2245","endLine":357,"endColumn":30},{"ruleId":"2242","severity":1,"message":"2243","line":362,"column":23,"nodeType":"2244","messageId":"2245","endLine":364,"endColumn":32},{"ruleId":"2217","severity":1,"message":"2340","line":1,"column":29,"nodeType":"2219","messageId":"2220","endLine":1,"endColumn":38},{"ruleId":"2217","severity":1,"message":"2341","line":1,"column":40,"nodeType":"2219","messageId":"2220","endLine":1,"endColumn":48},{"ruleId":"2342","severity":1,"message":"2343","line":18,"column":14,"nodeType":"2254","messageId":"2344"},{"ruleId":"2217","severity":1,"message":"2345","line":2,"column":8,"nodeType":"2219","messageId":"2220","endLine":2,"endColumn":15},{"ruleId":"2228","severity":1,"message":"2229","line":22,"column":5,"nodeType":"2230","messageId":"2212","endLine":22,"endColumn":16},{"ruleId":"2221","severity":1,"message":"2346","line":6,"column":1,"nodeType":"2195","endLine":6,"endColumn":36,"fix":"2347"},{"ruleId":"2238","severity":1,"message":"2239","line":24,"column":5,"nodeType":"2240","messageId":"2241","endLine":24,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":25,"column":7,"nodeType":"2240","messageId":"2241","endLine":25,"endColumn":50},{"ruleId":"2238","severity":1,"message":"2239","line":26,"column":9,"nodeType":"2240","messageId":"2241","endLine":26,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":27,"column":9,"nodeType":"2240","messageId":"2241","endLine":27,"endColumn":44},{"ruleId":"2238","severity":1,"message":"2239","line":28,"column":100,"nodeType":"2240","messageId":"2241","endLine":28,"endColumn":106},{"ruleId":"2238","severity":1,"message":"2239","line":29,"column":50,"nodeType":"2240","messageId":"2241","endLine":29,"endColumn":56},{"ruleId":"2238","severity":1,"message":"2239","line":29,"column":82,"nodeType":"2240","messageId":"2241","endLine":29,"endColumn":88},{"ruleId":"2238","severity":1,"message":"2239","line":30,"column":19,"nodeType":"2240","messageId":"2241","endLine":30,"endColumn":25},{"ruleId":"2238","severity":1,"message":"2239","line":33,"column":9,"nodeType":"2240","messageId":"2241","endLine":33,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":34,"column":11,"nodeType":"2240","messageId":"2241","endLine":34,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":35,"column":11,"nodeType":"2240","messageId":"2241","endLine":35,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":39,"column":7,"nodeType":"2240","messageId":"2241","endLine":39,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":40,"column":9,"nodeType":"2240","messageId":"2241","endLine":40,"endColumn":66},{"ruleId":"2238","severity":1,"message":"2239","line":41,"column":11,"nodeType":"2240","messageId":"2241","endLine":41,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":42,"column":13,"nodeType":"2240","messageId":"2241","endLine":42,"endColumn":48},{"ruleId":"2238","severity":1,"message":"2239","line":44,"column":11,"nodeType":"2240","messageId":"2241","endLine":44,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":45,"column":11,"nodeType":"2240","messageId":"2241","endLine":45,"endColumn":46},{"ruleId":"2242","severity":1,"message":"2243","line":50,"column":11,"nodeType":"2244","messageId":"2245","endLine":52,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":50,"column":11,"nodeType":"2240","messageId":"2241","endLine":50,"endColumn":84},{"ruleId":"2238","severity":1,"message":"2239","line":55,"column":9,"nodeType":"2240","messageId":"2241","endLine":55,"endColumn":61},{"ruleId":"2238","severity":1,"message":"2239","line":56,"column":11,"nodeType":"2240","messageId":"2241","endLine":56,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":57,"column":13,"nodeType":"2240","messageId":"2241","endLine":57,"endColumn":43},{"ruleId":"2238","severity":1,"message":"2239","line":59,"column":11,"nodeType":"2240","messageId":"2241","endLine":59,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":60,"column":11,"nodeType":"2240","messageId":"2241","endLine":60,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":64,"column":11,"nodeType":"2240","messageId":"2241","endLine":64,"endColumn":92},{"ruleId":"2221","severity":1,"message":"2348","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":45,"fix":"2349"},{"ruleId":"2252","severity":1,"message":"2253","line":5,"column":37,"nodeType":"2254","endLine":5,"endColumn":44,"fix":"2350"},{"ruleId":"2221","severity":1,"message":"2348","line":8,"column":1,"nodeType":"2195","endLine":8,"endColumn":36,"fix":"2351"},{"ruleId":"2252","severity":1,"message":"2253","line":8,"column":28,"nodeType":"2254","endLine":8,"endColumn":35},{"ruleId":"2221","severity":1,"message":"2352","line":18,"column":1,"nodeType":"2195","endLine":18,"endColumn":47,"fix":"2353"},{"ruleId":"2221","severity":1,"message":"2348","line":25,"column":1,"nodeType":"2195","endLine":25,"endColumn":32,"fix":"2354"},{"ruleId":"2252","severity":1,"message":"2253","line":25,"column":24,"nodeType":"2254","endLine":25,"endColumn":31},{"ruleId":"2228","severity":1,"message":"2229","line":66,"column":9,"nodeType":"2230","messageId":"2212","endLine":66,"endColumn":20},{"ruleId":"2261","severity":1,"message":"2355","line":73,"column":9,"nodeType":"2219","messageId":"2263","endLine":73,"endColumn":14,"fix":"2356"},{"ruleId":"2238","severity":1,"message":"2239","line":82,"column":5,"nodeType":"2240","messageId":"2241","endLine":82,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":83,"column":7,"nodeType":"2240","messageId":"2241","endLine":83,"endColumn":35},{"ruleId":"2238","severity":1,"message":"2239","line":84,"column":7,"nodeType":"2240","messageId":"2241","endLine":84,"endColumn":21},{"ruleId":"2238","severity":1,"message":"2239","line":85,"column":7,"nodeType":"2240","messageId":"2241","endLine":85,"endColumn":30},{"ruleId":"2238","severity":1,"message":"2239","line":86,"column":7,"nodeType":"2240","messageId":"2241","endLine":86,"endColumn":68},{"ruleId":"2238","severity":1,"message":"2239","line":87,"column":7,"nodeType":"2240","messageId":"2241","endLine":87,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":88,"column":9,"nodeType":"2240","messageId":"2241","endLine":91,"endColumn":10},{"ruleId":"2238","severity":1,"message":"2239","line":94,"column":9,"nodeType":"2240","messageId":"2241","endLine":94,"endColumn":89},{"ruleId":"2357","severity":1,"message":"2358","line":95,"column":11,"nodeType":"2240","endLine":99,"endColumn":12},{"ruleId":"2357","severity":1,"message":"2359","line":95,"column":11,"nodeType":"2240","endLine":99,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":95,"column":11,"nodeType":"2240","messageId":"2241","endLine":99,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":100,"column":13,"nodeType":"2240","messageId":"2241","endLine":100,"endColumn":27},{"ruleId":"2238","severity":1,"message":"2239","line":101,"column":13,"nodeType":"2240","messageId":"2241","endLine":101,"endColumn":62},{"ruleId":"2238","severity":1,"message":"2239","line":102,"column":15,"nodeType":"2240","messageId":"2241","endLine":107,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":111,"column":13,"nodeType":"2240","messageId":"2241","endLine":115,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":116,"column":13,"nodeType":"2240","messageId":"2241","endLine":116,"endColumn":60},{"ruleId":"2238","severity":1,"message":"2239","line":117,"column":15,"nodeType":"2240","messageId":"2241","endLine":117,"endColumn":64},{"ruleId":"2238","severity":1,"message":"2239","line":121,"column":13,"nodeType":"2240","messageId":"2241","endLine":121,"endColumn":71},{"ruleId":"2238","severity":1,"message":"2239","line":122,"column":15,"nodeType":"2240","messageId":"2241","endLine":122,"endColumn":56},{"ruleId":"2238","severity":1,"message":"2239","line":123,"column":15,"nodeType":"2240","messageId":"2241","endLine":123,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":126,"column":13,"nodeType":"2240","messageId":"2241","endLine":126,"endColumn":28},{"ruleId":"2238","severity":1,"message":"2239","line":129,"column":9,"nodeType":"2240","messageId":"2241","endLine":129,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":130,"column":11,"nodeType":"2240","messageId":"2241","endLine":130,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":131,"column":37,"nodeType":"2240","messageId":"2241","endLine":131,"endColumn":65},{"ruleId":"2238","severity":1,"message":"2239","line":132,"column":11,"nodeType":"2240","messageId":"2241","endLine":132,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":135,"column":7,"nodeType":"2240","messageId":"2241","endLine":135,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":136,"column":9,"nodeType":"2240","messageId":"2241","endLine":136,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":137,"column":11,"nodeType":"2240","messageId":"2241","endLine":137,"endColumn":26},{"ruleId":"2238","severity":1,"message":"2239","line":138,"column":11,"nodeType":"2240","messageId":"2241","endLine":138,"endColumn":33},{"ruleId":"2238","severity":1,"message":"2239","line":140,"column":9,"nodeType":"2240","messageId":"2241","endLine":140,"endColumn":34},{"ruleId":"2221","severity":1,"message":"2360","line":18,"column":1,"nodeType":"2195","endLine":18,"endColumn":35,"fix":"2361"},{"ruleId":"2221","severity":1,"message":"2362","line":21,"column":1,"nodeType":"2195","endLine":21,"endColumn":47,"fix":"2363"},{"ruleId":"2364","severity":1,"message":"2365","line":29,"column":7,"nodeType":"2366","messageId":"2367","endLine":29,"endColumn":48,"fix":"2368"},{"ruleId":"2261","severity":1,"message":"2369","line":29,"column":7,"nodeType":"2219","messageId":"2263","endLine":29,"endColumn":15,"fix":"2370"},{"ruleId":"2231","severity":1,"message":"2371","line":35,"column":25,"nodeType":"2219","messageId":"2233","endLine":35,"endColumn":39},{"ruleId":"2231","severity":1,"message":"2372","line":35,"column":60,"nodeType":"2219","messageId":"2233","endLine":35,"endColumn":69},{"ruleId":"2231","severity":1,"message":"2373","line":35,"column":71,"nodeType":"2219","messageId":"2233","endLine":35,"endColumn":83},{"ruleId":"2231","severity":1,"message":"2374","line":35,"column":85,"nodeType":"2219","messageId":"2233","endLine":35,"endColumn":96},{"ruleId":"2375","severity":1,"message":"2376","line":39,"column":5,"nodeType":"2338","messageId":"2377","endLine":39,"endColumn":12,"fix":"2378"},{"ruleId":"2261","severity":1,"message":"2379","line":56,"column":9,"nodeType":"2219","messageId":"2263","endLine":56,"endColumn":11,"fix":"2380"},{"ruleId":"2234","severity":1,"message":"2381","line":76,"column":7,"nodeType":"2338","messageId":"2339","endLine":76,"endColumn":38},{"ruleId":"2231","severity":1,"message":"2371","line":89,"column":11,"nodeType":"2219","messageId":"2233","endLine":89,"endColumn":25},{"ruleId":"2231","severity":1,"message":"2372","line":90,"column":11,"nodeType":"2219","messageId":"2233","endLine":90,"endColumn":20},{"ruleId":"2231","severity":1,"message":"2382","line":91,"column":11,"nodeType":"2219","messageId":"2233","endLine":91,"endColumn":22},{"ruleId":"2231","severity":1,"message":"2373","line":92,"column":11,"nodeType":"2219","messageId":"2233","endLine":92,"endColumn":23},{"ruleId":"2231","severity":1,"message":"2374","line":94,"column":11,"nodeType":"2219","messageId":"2233","endLine":94,"endColumn":22},{"ruleId":"2261","severity":1,"message":"2379","line":96,"column":13,"nodeType":"2219","messageId":"2263","endLine":96,"endColumn":15,"fix":"2383"},{"ruleId":"2384","severity":1,"message":"2385","line":106,"column":16,"nodeType":"2386","messageId":"2212","endLine":110,"endColumn":10,"fix":"2387"},{"ruleId":"2388","severity":1,"message":"2389","line":111,"column":49,"nodeType":"2390","messageId":"2391","endLine":111,"endColumn":75,"fix":"2392"},{"ruleId":"2238","severity":1,"message":"2239","line":133,"column":5,"nodeType":"2240","messageId":"2241","endLine":133,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":134,"column":7,"nodeType":"2240","messageId":"2241","endLine":134,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":135,"column":9,"nodeType":"2240","messageId":"2241","endLine":135,"endColumn":56},{"ruleId":"2238","severity":1,"message":"2239","line":136,"column":9,"nodeType":"2240","messageId":"2241","endLine":136,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":137,"column":9,"nodeType":"2240","messageId":"2241","endLine":137,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":141,"column":9,"nodeType":"2240","messageId":"2241","endLine":141,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":142,"column":11,"nodeType":"2240","messageId":"2241","endLine":142,"endColumn":111},{"ruleId":"2242","severity":1,"message":"2243","line":143,"column":11,"nodeType":"2244","messageId":"2245","endLine":145,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":143,"column":11,"nodeType":"2240","messageId":"2241","endLine":143,"endColumn":85},{"ruleId":"2221","severity":1,"message":"2393","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":47,"fix":"2394"},{"ruleId":"2234","severity":1,"message":"2235","line":12,"column":16,"nodeType":"2236","messageId":"2237","endLine":12,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":21,"column":5,"nodeType":"2240","messageId":"2241","endLine":21,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":22,"column":7,"nodeType":"2240","messageId":"2241","endLine":22,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":23,"column":9,"nodeType":"2240","messageId":"2241","endLine":23,"endColumn":54},{"ruleId":"2238","severity":1,"message":"2239","line":24,"column":9,"nodeType":"2240","messageId":"2241","endLine":24,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":25,"column":9,"nodeType":"2240","messageId":"2241","endLine":25,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":26,"column":9,"nodeType":"2240","messageId":"2241","endLine":26,"endColumn":47},{"ruleId":"2242","severity":1,"message":"2243","line":27,"column":11,"nodeType":"2244","messageId":"2245","endLine":29,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":27,"column":11,"nodeType":"2240","messageId":"2241","endLine":27,"endColumn":101},{"ruleId":"2242","severity":1,"message":"2243","line":30,"column":11,"nodeType":"2244","messageId":"2245","endLine":32,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":30,"column":11,"nodeType":"2240","messageId":"2241","endLine":30,"endColumn":85},{"ruleId":"2261","severity":1,"message":"2395","line":110,"column":9,"nodeType":"2219","messageId":"2263","endLine":110,"endColumn":17,"fix":"2396"},{"ruleId":"2261","severity":1,"message":"2397","line":111,"column":11,"nodeType":"2219","messageId":"2263","endLine":111,"endColumn":16,"fix":"2398"},{"ruleId":"2261","severity":1,"message":"2399","line":117,"column":9,"nodeType":"2219","messageId":"2263","endLine":117,"endColumn":17,"fix":"2400"},{"ruleId":"2217","severity":1,"message":"2401","line":130,"column":39,"nodeType":"2219","messageId":"2220","endLine":130,"endColumn":40},{"ruleId":"2217","severity":1,"message":"2402","line":131,"column":38,"nodeType":"2219","messageId":"2220","endLine":131,"endColumn":39},{"ruleId":"2217","severity":1,"message":"2289","line":22,"column":10,"nodeType":"2219","messageId":"2220","endLine":22,"endColumn":25},{"ruleId":"2217","severity":1,"message":"2403","line":28,"column":11,"nodeType":"2219","messageId":"2220","endLine":28,"endColumn":13},{"ruleId":"2217","severity":1,"message":"2404","line":28,"column":15,"nodeType":"2219","messageId":"2220","endLine":28,"endColumn":30},{"ruleId":"2217","severity":1,"message":"2405","line":28,"column":32,"nodeType":"2219","messageId":"2220","endLine":28,"endColumn":36},{"ruleId":"2217","severity":1,"message":"2406","line":28,"column":38,"nodeType":"2219","messageId":"2220","endLine":28,"endColumn":43},{"ruleId":"2217","severity":1,"message":"2316","line":28,"column":45,"nodeType":"2219","messageId":"2220","endLine":28,"endColumn":54},{"ruleId":"2217","severity":1,"message":"2315","line":28,"column":56,"nodeType":"2219","messageId":"2220","endLine":28,"endColumn":61},{"ruleId":"2217","severity":1,"message":"2407","line":48,"column":5,"nodeType":"2219","messageId":"2220","endLine":48,"endColumn":16},{"ruleId":"2217","severity":1,"message":"2408","line":50,"column":5,"nodeType":"2219","messageId":"2220","endLine":50,"endColumn":14},{"ruleId":"2217","severity":1,"message":"2409","line":52,"column":5,"nodeType":"2219","messageId":"2220","endLine":52,"endColumn":14},{"ruleId":"2217","severity":1,"message":"2410","line":58,"column":9,"nodeType":"2219","messageId":"2220","endLine":58,"endColumn":17},{"ruleId":"2217","severity":1,"message":"2334","line":68,"column":9,"nodeType":"2219","messageId":"2220","endLine":68,"endColumn":18},{"ruleId":"2261","severity":1,"message":"2411","line":110,"column":9,"nodeType":"2219","messageId":"2263","endLine":110,"endColumn":19,"fix":"2412"},{"ruleId":"2231","severity":1,"message":"2413","line":110,"column":9,"nodeType":"2219","messageId":"2233","endLine":110,"endColumn":19},{"ruleId":"2323","severity":1,"message":"2324","line":115,"column":27,"nodeType":"2236","messageId":"2325","endLine":115,"endColumn":29},{"ruleId":"2234","severity":1,"message":"2414","line":129,"column":21,"nodeType":"2320","messageId":"2237","endLine":129,"endColumn":34},{"ruleId":"2228","severity":1,"message":"2229","line":159,"column":9,"nodeType":"2230","messageId":"2212","endLine":159,"endColumn":20},{"ruleId":"2261","severity":1,"message":"2415","line":169,"column":13,"nodeType":"2219","messageId":"2263","endLine":169,"endColumn":18,"fix":"2416"},{"ruleId":"2246","severity":1,"message":"2247","line":235,"column":21,"nodeType":"2219","messageId":"2248","endLine":235,"endColumn":24},{"ruleId":"2246","severity":1,"message":"2247","line":240,"column":22,"nodeType":"2219","messageId":"2248","endLine":240,"endColumn":25},{"ruleId":"2417","severity":1,"message":"2418","line":297,"column":26,"nodeType":"2219","messageId":"2419","endLine":297,"endColumn":31},{"ruleId":"2420","severity":1,"message":"2421","line":304,"column":17,"nodeType":"2240","endLine":304,"endColumn":71},{"ruleId":"2242","severity":1,"message":"2243","line":305,"column":17,"nodeType":"2244","messageId":"2245","endLine":305,"endColumn":63},{"ruleId":"2217","severity":1,"message":"2422","line":5,"column":10,"nodeType":"2219","messageId":"2220","endLine":5,"endColumn":29},{"ruleId":"2217","severity":1,"message":"2305","line":5,"column":59,"nodeType":"2219","messageId":"2220","endLine":5,"endColumn":74},{"ruleId":"2221","severity":1,"message":"2423","line":8,"column":1,"nodeType":"2195","endLine":8,"endColumn":33,"fix":"2424"},{"ruleId":"2217","severity":1,"message":"2309","line":8,"column":10,"nodeType":"2219","messageId":"2220","endLine":8,"endColumn":16},{"ruleId":"2217","severity":1,"message":"2311","line":15,"column":3,"nodeType":"2219","messageId":"2220","endLine":15,"endColumn":19},{"ruleId":"2217","severity":1,"message":"2312","line":16,"column":3,"nodeType":"2219","messageId":"2220","endLine":16,"endColumn":22},{"ruleId":"2217","severity":1,"message":"2292","line":21,"column":29,"nodeType":"2219","messageId":"2220","endLine":21,"endColumn":37},{"ruleId":"2217","severity":1,"message":"2425","line":26,"column":11,"nodeType":"2219","messageId":"2220","endLine":26,"endColumn":21},{"ruleId":"2221","severity":1,"message":"2426","line":3,"column":1,"nodeType":"2195","endLine":3,"endColumn":46,"fix":"2427"},{"ruleId":"2221","severity":1,"message":"2428","line":16,"column":1,"nodeType":"2195","endLine":16,"endColumn":47,"fix":"2429"},{"ruleId":"2228","severity":1,"message":"2229","line":25,"column":5,"nodeType":"2230","messageId":"2212","endLine":25,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":38,"column":5,"nodeType":"2230","messageId":"2212","endLine":38,"endColumn":16},{"ruleId":"2430","severity":1,"message":"2431","line":44,"column":5,"nodeType":"2219","messageId":"2432","endLine":44,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":52,"column":5,"nodeType":"2240","messageId":"2241","endLine":52,"endColumn":85},{"ruleId":"2238","severity":1,"message":"2239","line":53,"column":7,"nodeType":"2240","messageId":"2241","endLine":53,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":54,"column":9,"nodeType":"2240","messageId":"2241","endLine":54,"endColumn":76},{"ruleId":"2238","severity":1,"message":"2239","line":55,"column":11,"nodeType":"2240","messageId":"2241","endLine":55,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":56,"column":13,"nodeType":"2240","messageId":"2241","endLine":56,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":57,"column":13,"nodeType":"2240","messageId":"2241","endLine":57,"endColumn":47},{"ruleId":"2238","severity":1,"message":"2239","line":58,"column":13,"nodeType":"2240","messageId":"2241","endLine":58,"endColumn":47},{"ruleId":"2238","severity":1,"message":"2239","line":59,"column":13,"nodeType":"2240","messageId":"2241","endLine":59,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":62,"column":9,"nodeType":"2240","messageId":"2241","endLine":62,"endColumn":73},{"ruleId":"2238","severity":1,"message":"2239","line":63,"column":9,"nodeType":"2240","messageId":"2241","endLine":63,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":64,"column":11,"nodeType":"2240","messageId":"2241","endLine":64,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":65,"column":11,"nodeType":"2240","messageId":"2241","endLine":65,"endColumn":53},{"ruleId":"2238","severity":1,"message":"2239","line":68,"column":17,"nodeType":"2240","messageId":"2241","endLine":68,"endColumn":60},{"ruleId":"2246","severity":1,"message":"2247","line":68,"column":27,"nodeType":"2219","messageId":"2248","endLine":68,"endColumn":30},{"ruleId":"2238","severity":1,"message":"2239","line":69,"column":19,"nodeType":"2240","messageId":"2241","endLine":69,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":70,"column":21,"nodeType":"2240","messageId":"2241","endLine":70,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":73,"column":19,"nodeType":"2240","messageId":"2241","endLine":73,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":74,"column":21,"nodeType":"2240","messageId":"2241","endLine":74,"endColumn":121},{"ruleId":"2242","severity":1,"message":"2243","line":81,"column":11,"nodeType":"2244","messageId":"2245","endLine":81,"endColumn":65},{"ruleId":"2238","severity":1,"message":"2239","line":81,"column":11,"nodeType":"2240","messageId":"2241","endLine":81,"endColumn":42},{"ruleId":"2217","severity":1,"message":"2433","line":2,"column":8,"nodeType":"2219","messageId":"2220","endLine":2,"endColumn":13},{"ruleId":"2434","severity":1,"message":"2435","line":118,"column":5,"nodeType":"2436","messageId":"2437","endLine":122,"endColumn":6},{"ruleId":"2228","severity":1,"message":"2229","line":144,"column":5,"nodeType":"2230","messageId":"2212","endLine":144,"endColumn":16},{"ruleId":"2234","severity":1,"message":"2235","line":151,"column":22,"nodeType":"2236","messageId":"2237","endLine":151,"endColumn":24},{"ruleId":"2234","severity":1,"message":"2235","line":227,"column":32,"nodeType":"2236","messageId":"2237","endLine":227,"endColumn":34},{"ruleId":"2228","severity":1,"message":"2229","line":232,"column":5,"nodeType":"2230","messageId":"2212","endLine":232,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":244,"column":5,"nodeType":"2230","messageId":"2212","endLine":244,"endColumn":16},{"ruleId":"2438","severity":1,"message":"2439","line":244,"column":17,"nodeType":"2295","messageId":"2440","endLine":244,"endColumn":45,"fix":"2441"},{"ruleId":"2442","severity":1,"message":"2443","line":245,"column":1,"nodeType":null,"messageId":"2444","endLine":246,"endColumn":1,"fix":"2445"},{"ruleId":"2442","severity":1,"message":"2446","line":256,"column":1,"nodeType":null,"messageId":"2444","endLine":256,"endColumn":4,"fix":"2447"},{"ruleId":"2442","severity":1,"message":"2448","line":279,"column":7,"nodeType":null,"messageId":"2444","endLine":282,"endColumn":7,"fix":"2449"},{"ruleId":"2228","severity":1,"message":"2229","line":292,"column":7,"nodeType":"2230","messageId":"2212","endLine":292,"endColumn":18},{"ruleId":"2438","severity":1,"message":"2439","line":292,"column":19,"nodeType":"2295","messageId":"2440","endLine":292,"endColumn":45,"fix":"2450"},{"ruleId":"2228","severity":1,"message":"2229","line":293,"column":7,"nodeType":"2230","messageId":"2212","endLine":293,"endColumn":18},{"ruleId":"2438","severity":1,"message":"2439","line":293,"column":19,"nodeType":"2295","messageId":"2440","endLine":293,"endColumn":55,"fix":"2451"},{"ruleId":"2442","severity":1,"message":"2452","line":306,"column":1,"nodeType":null,"messageId":"2444","endLine":307,"endColumn":1,"fix":"2453"},{"ruleId":"2442","severity":1,"message":"2454","line":316,"column":6,"nodeType":null,"messageId":"2444","endLine":318,"endColumn":1,"fix":"2455"},{"ruleId":"2246","severity":1,"message":"2247","line":360,"column":30,"nodeType":"2219","messageId":"2248","endLine":360,"endColumn":33},{"ruleId":"2456","severity":1,"message":"2457","line":366,"column":19,"nodeType":"2240","endLine":366,"endColumn":116},{"ruleId":"2246","severity":1,"message":"2247","line":439,"column":34,"nodeType":"2219","messageId":"2248","endLine":439,"endColumn":39},{"ruleId":"2246","severity":1,"message":"2247","line":455,"column":65,"nodeType":"2219","messageId":"2248","endLine":455,"endColumn":68},{"ruleId":"2246","severity":1,"message":"2247","line":467,"column":38,"nodeType":"2219","messageId":"2248","endLine":467,"endColumn":41},{"ruleId":"2246","severity":1,"message":"2247","line":522,"column":32,"nodeType":"2219","messageId":"2248","endLine":522,"endColumn":35},{"ruleId":"2458","severity":1,"message":"2459","line":563,"column":1,"nodeType":"2460","messageId":"2461","endLine":577,"endColumn":2},{"ruleId":"2221","severity":1,"message":"2462","line":2,"column":1,"nodeType":"2195","endLine":2,"endColumn":36,"fix":"2463"},{"ruleId":"2221","severity":1,"message":"2464","line":10,"column":1,"nodeType":"2195","endLine":10,"endColumn":47,"fix":"2465"},{"ruleId":"2238","severity":1,"message":"2239","line":15,"column":22,"nodeType":"2240","messageId":"2241","endLine":15,"endColumn":37},{"ruleId":"2238","severity":1,"message":"2239","line":15,"column":39,"nodeType":"2240","messageId":"2241","endLine":15,"endColumn":54},{"ruleId":"2261","severity":1,"message":"2466","line":18,"column":9,"nodeType":"2219","messageId":"2263","endLine":18,"endColumn":15,"fix":"2467"},{"ruleId":"2261","severity":1,"message":"2468","line":25,"column":9,"nodeType":"2219","messageId":"2263","endLine":25,"endColumn":21,"fix":"2469"},{"ruleId":"2238","severity":1,"message":"2239","line":41,"column":5,"nodeType":"2240","messageId":"2241","endLine":41,"endColumn":85},{"ruleId":"2238","severity":1,"message":"2239","line":42,"column":7,"nodeType":"2240","messageId":"2241","endLine":42,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":43,"column":9,"nodeType":"2240","messageId":"2241","endLine":43,"endColumn":73},{"ruleId":"2238","severity":1,"message":"2239","line":44,"column":9,"nodeType":"2240","messageId":"2241","endLine":44,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":46,"column":13,"nodeType":"2240","messageId":"2241","endLine":46,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":47,"column":28,"nodeType":"2240","messageId":"2241","endLine":47,"endColumn":61},{"ruleId":"2238","severity":1,"message":"2239","line":48,"column":28,"nodeType":"2240","messageId":"2241","endLine":48,"endColumn":34},{"ruleId":"2238","severity":1,"message":"2239","line":52,"column":13,"nodeType":"2240","messageId":"2241","endLine":52,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":54,"column":15,"nodeType":"2240","messageId":"2241","endLine":54,"endColumn":21},{"ruleId":"2238","severity":1,"message":"2239","line":58,"column":11,"nodeType":"2240","messageId":"2241","endLine":58,"endColumn":58},{"ruleId":"2238","severity":1,"message":"2239","line":59,"column":11,"nodeType":"2240","messageId":"2241","endLine":59,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":60,"column":11,"nodeType":"2240","messageId":"2241","endLine":60,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":62,"column":15,"nodeType":"2240","messageId":"2241","endLine":62,"endColumn":55},{"ruleId":"2246","severity":1,"message":"2247","line":62,"column":25,"nodeType":"2219","messageId":"2248","endLine":62,"endColumn":28},{"ruleId":"2238","severity":1,"message":"2239","line":64,"column":17,"nodeType":"2240","messageId":"2241","endLine":64,"endColumn":22},{"ruleId":"2242","severity":1,"message":"2243","line":68,"column":11,"nodeType":"2244","messageId":"2245","endLine":68,"endColumn":59},{"ruleId":"2238","severity":1,"message":"2239","line":68,"column":11,"nodeType":"2240","messageId":"2241","endLine":68,"endColumn":43},{"ruleId":"2217","severity":1,"message":"2470","line":10,"column":8,"nodeType":"2219","messageId":"2220","endLine":10,"endColumn":14},{"ruleId":"2231","severity":1,"message":"2471","line":39,"column":15,"nodeType":"2219","messageId":"2233","endLine":39,"endColumn":20},{"ruleId":"2228","severity":1,"message":"2229","line":119,"column":5,"nodeType":"2230","messageId":"2212","endLine":119,"endColumn":16},{"ruleId":"2217","severity":1,"message":"2472","line":22,"column":3,"nodeType":"2219","messageId":"2220","endLine":22,"endColumn":26},{"ruleId":"2221","severity":1,"message":"2473","line":44,"column":1,"nodeType":"2195","endLine":44,"endColumn":33,"fix":"2474"},{"ruleId":"2231","severity":1,"message":"2475","line":172,"column":35,"nodeType":"2219","messageId":"2233","endLine":172,"endColumn":39},{"ruleId":"2231","severity":1,"message":"2476","line":260,"column":34,"nodeType":"2219","messageId":"2233","endLine":260,"endColumn":38},{"ruleId":"2384","severity":1,"message":"2385","line":9,"column":14,"nodeType":"2460","messageId":"2212","endLine":11,"endColumn":8,"fix":"2477"},{"ruleId":"2234","severity":1,"message":"2317","line":19,"column":92,"nodeType":"2236","messageId":"2237","endLine":19,"endColumn":94},{"ruleId":"2217","severity":1,"message":"2478","line":59,"column":45,"nodeType":"2219","messageId":"2220","endLine":59,"endColumn":48},{"ruleId":"2228","severity":1,"message":"2229","line":64,"column":9,"nodeType":"2230","messageId":"2212","endLine":64,"endColumn":20},{"ruleId":"2217","severity":1,"message":"2478","line":74,"column":48,"nodeType":"2219","messageId":"2220","endLine":74,"endColumn":51},{"ruleId":"2228","severity":1,"message":"2229","line":78,"column":11,"nodeType":"2230","messageId":"2212","endLine":78,"endColumn":22},{"ruleId":"2228","severity":1,"message":"2229","line":81,"column":11,"nodeType":"2230","messageId":"2212","endLine":81,"endColumn":22},{"ruleId":"2228","severity":1,"message":"2229","line":86,"column":5,"nodeType":"2230","messageId":"2212","endLine":86,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":97,"column":7,"nodeType":"2230","messageId":"2212","endLine":97,"endColumn":18},{"ruleId":"2228","severity":1,"message":"2229","line":104,"column":7,"nodeType":"2230","messageId":"2212","endLine":104,"endColumn":18},{"ruleId":"2430","severity":1,"message":"2479","line":111,"column":23,"nodeType":"2219","messageId":"2432","endLine":111,"endColumn":37},{"ruleId":"2480","severity":1,"message":"2481","line":112,"column":5,"nodeType":"2482","messageId":"2483","endLine":112,"endColumn":67},{"ruleId":"2430","severity":1,"message":"2484","line":112,"column":19,"nodeType":"2219","messageId":"2432","endLine":112,"endColumn":37},{"ruleId":"2430","severity":1,"message":"2485","line":113,"column":30,"nodeType":"2219","messageId":"2432","endLine":113,"endColumn":41},{"ruleId":"2430","severity":1,"message":"2486","line":115,"column":13,"nodeType":"2219","messageId":"2432","endLine":115,"endColumn":28},{"ruleId":"2228","severity":1,"message":"2229","line":123,"column":5,"nodeType":"2230","messageId":"2212","endLine":123,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":133,"column":7,"nodeType":"2230","messageId":"2212","endLine":133,"endColumn":18},{"ruleId":"2231","severity":1,"message":"2487","line":148,"column":27,"nodeType":"2219","messageId":"2233","endLine":148,"endColumn":30},{"ruleId":"2228","severity":1,"message":"2229","line":152,"column":9,"nodeType":"2230","messageId":"2212","endLine":152,"endColumn":20},{"ruleId":"2231","severity":1,"message":"2487","line":167,"column":27,"nodeType":"2219","messageId":"2233","endLine":167,"endColumn":30},{"ruleId":"2228","severity":1,"message":"2229","line":171,"column":9,"nodeType":"2230","messageId":"2212","endLine":171,"endColumn":20},{"ruleId":"2234","severity":1,"message":"2317","line":177,"column":53,"nodeType":"2236","messageId":"2237","endLine":177,"endColumn":55},{"ruleId":"2231","severity":1,"message":"2488","line":182,"column":28,"nodeType":"2219","messageId":"2233","endLine":182,"endColumn":31},{"ruleId":"2234","severity":1,"message":"2317","line":189,"column":71,"nodeType":"2236","messageId":"2237","endLine":189,"endColumn":73},{"ruleId":"2384","severity":1,"message":"2385","line":195,"column":12,"nodeType":"2460","messageId":"2212","endLine":197,"endColumn":6,"fix":"2489"},{"ruleId":"2228","severity":1,"message":"2229","line":196,"column":7,"nodeType":"2230","messageId":"2212","endLine":196,"endColumn":18},{"ruleId":"2234","severity":1,"message":"2317","line":201,"column":63,"nodeType":"2236","messageId":"2237","endLine":201,"endColumn":65},{"ruleId":"2384","severity":1,"message":"2385","line":207,"column":12,"nodeType":"2460","messageId":"2212","endLine":209,"endColumn":6,"fix":"2490"},{"ruleId":"2228","severity":1,"message":"2229","line":208,"column":7,"nodeType":"2230","messageId":"2212","endLine":208,"endColumn":18},{"ruleId":"2234","severity":1,"message":"2317","line":213,"column":62,"nodeType":"2236","messageId":"2237","endLine":213,"endColumn":64},{"ruleId":"2384","severity":1,"message":"2385","line":219,"column":12,"nodeType":"2460","messageId":"2212","endLine":221,"endColumn":6,"fix":"2491"},{"ruleId":"2228","severity":1,"message":"2229","line":220,"column":7,"nodeType":"2230","messageId":"2212","endLine":220,"endColumn":18},{"ruleId":"2234","severity":1,"message":"2317","line":225,"column":66,"nodeType":"2236","messageId":"2237","endLine":225,"endColumn":68},{"ruleId":"2384","severity":1,"message":"2385","line":231,"column":12,"nodeType":"2460","messageId":"2212","endLine":233,"endColumn":6,"fix":"2492"},{"ruleId":"2228","severity":1,"message":"2229","line":232,"column":7,"nodeType":"2230","messageId":"2212","endLine":232,"endColumn":18},{"ruleId":"2234","severity":1,"message":"2317","line":237,"column":63,"nodeType":"2236","messageId":"2237","endLine":237,"endColumn":65},{"ruleId":"2234","severity":1,"message":"2317","line":246,"column":39,"nodeType":"2236","messageId":"2237","endLine":246,"endColumn":41},{"ruleId":"2261","severity":1,"message":"2493","line":248,"column":15,"nodeType":"2219","messageId":"2263","endLine":248,"endColumn":19,"fix":"2494"},{"ruleId":"2364","severity":1,"message":"2495","line":254,"column":13,"nodeType":"2496","messageId":"2367","endLine":254,"endColumn":50},{"ruleId":"2228","severity":1,"message":"2229","line":257,"column":13,"nodeType":"2230","messageId":"2212","endLine":257,"endColumn":24},{"ruleId":"2497","severity":1,"message":"2498","line":269,"column":12,"nodeType":"2499","messageId":"2500","endLine":269,"endColumn":78},{"ruleId":"2231","severity":1,"message":"2487","line":269,"column":49,"nodeType":"2219","messageId":"2233","endLine":269,"endColumn":52},{"ruleId":"2497","severity":1,"message":"2498","line":269,"column":57,"nodeType":"2499","messageId":"2500","endLine":269,"endColumn":76},{"ruleId":"2234","severity":1,"message":"2317","line":273,"column":66,"nodeType":"2236","messageId":"2237","endLine":273,"endColumn":68},{"ruleId":"2234","severity":1,"message":"2317","line":280,"column":37,"nodeType":"2236","messageId":"2237","endLine":280,"endColumn":39},{"ruleId":"2261","severity":1,"message":"2493","line":282,"column":13,"nodeType":"2219","messageId":"2263","endLine":282,"endColumn":17,"fix":"2501"},{"ruleId":"2228","severity":1,"message":"2229","line":292,"column":11,"nodeType":"2230","messageId":"2212","endLine":292,"endColumn":22},{"ruleId":"2497","severity":1,"message":"2498","line":308,"column":75,"nodeType":"2499","messageId":"2500","endLine":308,"endColumn":112},{"ruleId":"2261","severity":1,"message":"2502","line":321,"column":7,"nodeType":"2219","messageId":"2263","endLine":321,"endColumn":15,"fix":"2503"},{"ruleId":"2228","severity":1,"message":"2229","line":334,"column":3,"nodeType":"2230","messageId":"2212","endLine":334,"endColumn":14},{"ruleId":"2228","severity":1,"message":"2229","line":345,"column":5,"nodeType":"2230","messageId":"2212","endLine":345,"endColumn":16},{"ruleId":"2430","severity":1,"message":"2504","line":361,"column":19,"nodeType":"2219","messageId":"2432","endLine":361,"endColumn":34},{"ruleId":"2261","severity":1,"message":"2505","line":366,"column":11,"nodeType":"2219","messageId":"2263","endLine":366,"endColumn":20,"fix":"2506"},{"ruleId":"2430","severity":1,"message":"2507","line":368,"column":22,"nodeType":"2219","messageId":"2432","endLine":368,"endColumn":40},{"ruleId":"2261","severity":1,"message":"2508","line":369,"column":11,"nodeType":"2219","messageId":"2263","endLine":369,"endColumn":18,"fix":"2509"},{"ruleId":"2228","severity":1,"message":"2229","line":370,"column":7,"nodeType":"2230","messageId":"2212","endLine":370,"endColumn":18},{"ruleId":"2261","severity":1,"message":"2510","line":376,"column":13,"nodeType":"2219","messageId":"2263","endLine":376,"endColumn":23,"fix":"2511"},{"ruleId":"2430","severity":1,"message":"2512","line":377,"column":20,"nodeType":"2219","messageId":"2432","endLine":377,"endColumn":34},{"ruleId":"2228","severity":1,"message":"2229","line":379,"column":9,"nodeType":"2230","messageId":"2212","endLine":379,"endColumn":20},{"ruleId":"2228","severity":1,"message":"2229","line":390,"column":5,"nodeType":"2230","messageId":"2212","endLine":390,"endColumn":16},{"ruleId":"2434","severity":1,"message":"2513","line":400,"column":7,"nodeType":"2514","messageId":"2437","endLine":405,"endColumn":8},{"ruleId":"2261","severity":1,"message":"2515","line":400,"column":16,"nodeType":"2219","messageId":"2263","endLine":400,"endColumn":17,"fix":"2516"},{"ruleId":"2517","severity":1,"message":"2518","line":422,"column":23,"nodeType":"2236","messageId":"2519","endLine":422,"endColumn":65},{"ruleId":"2261","severity":1,"message":"2397","line":427,"column":9,"nodeType":"2219","messageId":"2263","endLine":427,"endColumn":14,"fix":"2520"},{"ruleId":"2261","severity":1,"message":"2521","line":428,"column":13,"nodeType":"2219","messageId":"2263","endLine":428,"endColumn":19,"fix":"2522"},{"ruleId":"2434","severity":1,"message":"2513","line":430,"column":7,"nodeType":"2514","messageId":"2437","endLine":435,"endColumn":8},{"ruleId":"2261","severity":1,"message":"2523","line":430,"column":18,"nodeType":"2219","messageId":"2263","endLine":430,"endColumn":28,"fix":"2524"},{"ruleId":"2261","severity":1,"message":"2525","line":430,"column":30,"nodeType":"2219","messageId":"2263","endLine":430,"endColumn":35,"fix":"2526"},{"ruleId":"2527","severity":1,"message":"2528","line":1,"column":1,"nodeType":"2529","endLine":155,"endColumn":3},{"ruleId":"2530","severity":1,"message":"2531","line":18,"column":5,"nodeType":"2532","messageId":"2533","endLine":18,"endColumn":35,"fix":"2534"},{"ruleId":"2535","severity":1,"message":"2536","line":20,"column":21,"nodeType":"2320","messageId":"2537","endLine":20,"endColumn":30},{"ruleId":"2535","severity":1,"message":"2536","line":23,"column":22,"nodeType":"2320","messageId":"2537","endLine":23,"endColumn":31},{"ruleId":"2538","severity":1,"message":"2539","line":24,"column":7,"nodeType":"2540","messageId":"2541","endLine":24,"endColumn":31},{"ruleId":"2497","severity":1,"message":"2498","line":41,"column":18,"nodeType":"2499","messageId":"2500","endLine":41,"endColumn":35},{"ruleId":"2497","severity":1,"message":"2498","line":91,"column":14,"nodeType":"2499","messageId":"2500","endLine":91,"endColumn":31},{"ruleId":"2497","severity":1,"message":"2498","line":123,"column":18,"nodeType":"2499","messageId":"2500","endLine":123,"endColumn":35},{"ruleId":"2480","severity":1,"message":"2481","line":27,"column":3,"nodeType":"2482","messageId":"2483","endLine":35,"endColumn":8},{"ruleId":"2228","severity":1,"message":"2229","line":15,"column":7,"nodeType":"2230","messageId":"2212","endLine":15,"endColumn":18},{"ruleId":"2228","severity":1,"message":"2229","line":48,"column":7,"nodeType":"2230","messageId":"2212","endLine":48,"endColumn":18},{"ruleId":"2217","severity":1,"message":"2542","line":2,"column":43,"nodeType":"2219","messageId":"2220","endLine":2,"endColumn":62},{"ruleId":"2252","severity":1,"message":"2543","line":2,"column":70,"nodeType":"2254","endLine":2,"endColumn":83,"fix":"2544"},{"ruleId":"2221","severity":1,"message":"2545","line":3,"column":1,"nodeType":"2195","endLine":3,"endColumn":35,"fix":"2546"},{"ruleId":"2252","severity":1,"message":"2543","line":4,"column":25,"nodeType":"2254","endLine":4,"endColumn":38},{"ruleId":"2261","severity":1,"message":"2547","line":12,"column":7,"nodeType":"2219","messageId":"2263","endLine":12,"endColumn":20,"fix":"2548"},{"ruleId":"2276","severity":1,"message":"2549","line":96,"column":66,"nodeType":"2254","messageId":"2278","endLine":96,"endColumn":75,"fix":"2550"},{"ruleId":"2276","severity":1,"message":"2551","line":103,"column":58,"nodeType":"2254","messageId":"2278","endLine":103,"endColumn":66,"fix":"2552"},{"ruleId":"2276","severity":1,"message":"2553","line":104,"column":60,"nodeType":"2254","messageId":"2278","endLine":104,"endColumn":70,"fix":"2554"},{"ruleId":"2276","severity":1,"message":"2555","line":112,"column":58,"nodeType":"2254","messageId":"2278","endLine":112,"endColumn":66,"fix":"2556"},{"ruleId":"2276","severity":1,"message":"2557","line":113,"column":57,"nodeType":"2254","messageId":"2278","endLine":113,"endColumn":64,"fix":"2558"},{"ruleId":"2276","severity":1,"message":"2559","line":121,"column":57,"nodeType":"2254","messageId":"2278","endLine":121,"endColumn":64,"fix":"2560"},{"ruleId":"2276","severity":1,"message":"2561","line":122,"column":60,"nodeType":"2254","messageId":"2278","endLine":122,"endColumn":70,"fix":"2562"},{"ruleId":"2217","severity":1,"message":"2563","line":3,"column":10,"nodeType":"2219","messageId":"2220","endLine":3,"endColumn":30},{"ruleId":"2564","severity":1,"message":"2565","line":7,"column":28,"nodeType":"2566","messageId":"2567","endLine":7,"endColumn":31},{"ruleId":"2228","severity":1,"message":"2229","line":51,"column":5,"nodeType":"2230","messageId":"2212","endLine":51,"endColumn":18},{"ruleId":"2221","severity":1,"message":"2568","line":3,"column":1,"nodeType":"2195","endLine":3,"endColumn":36,"fix":"2569"},{"ruleId":"2221","severity":1,"message":"2570","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":47,"fix":"2571"},{"ruleId":"2238","severity":1,"message":"2239","line":23,"column":5,"nodeType":"2240","messageId":"2241","endLine":23,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":24,"column":7,"nodeType":"2240","messageId":"2241","endLine":24,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":25,"column":9,"nodeType":"2240","messageId":"2241","endLine":25,"endColumn":13},{"ruleId":"2238","severity":1,"message":"2239","line":26,"column":9,"nodeType":"2240","messageId":"2241","endLine":26,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":27,"column":11,"nodeType":"2240","messageId":"2241","endLine":27,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":28,"column":11,"nodeType":"2240","messageId":"2241","endLine":28,"endColumn":48},{"ruleId":"2238","severity":1,"message":"2239","line":29,"column":13,"nodeType":"2240","messageId":"2241","endLine":29,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":30,"column":13,"nodeType":"2240","messageId":"2241","endLine":30,"endColumn":18},{"ruleId":"2242","severity":1,"message":"2243","line":32,"column":11,"nodeType":"2244","messageId":"2245","endLine":34,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":32,"column":11,"nodeType":"2240","messageId":"2241","endLine":32,"endColumn":74},{"ruleId":"2242","severity":1,"message":"2243","line":35,"column":11,"nodeType":"2244","messageId":"2245","endLine":37,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":35,"column":11,"nodeType":"2240","messageId":"2241","endLine":35,"endColumn":72},{"ruleId":"2252","severity":1,"message":"2572","line":4,"column":29,"nodeType":"2254","endLine":4,"endColumn":49,"fix":"2573"},{"ruleId":"2217","severity":1,"message":"2574","line":5,"column":10,"nodeType":"2219","messageId":"2220","endLine":5,"endColumn":15},{"ruleId":"2217","severity":1,"message":"2575","line":5,"column":17,"nodeType":"2219","messageId":"2220","endLine":5,"endColumn":22},{"ruleId":"2217","severity":1,"message":"2576","line":5,"column":24,"nodeType":"2219","messageId":"2220","endLine":5,"endColumn":31},{"ruleId":"2252","severity":1,"message":"2572","line":5,"column":39,"nodeType":"2254","endLine":5,"endColumn":59},{"ruleId":"2564","severity":1,"message":"2565","line":84,"column":45,"nodeType":"2566","messageId":"2567","endLine":84,"endColumn":48},{"ruleId":"2228","severity":1,"message":"2229","line":111,"column":7,"nodeType":"2230","messageId":"2212","endLine":111,"endColumn":20},{"ruleId":"2261","severity":1,"message":"2577","line":125,"column":9,"nodeType":"2219","messageId":"2263","endLine":125,"endColumn":14,"fix":"2578"},{"ruleId":"2217","severity":1,"message":"2579","line":125,"column":9,"nodeType":"2219","messageId":"2220","endLine":125,"endColumn":14},{"ruleId":"2228","severity":1,"message":"2229","line":209,"column":5,"nodeType":"2230","messageId":"2212","endLine":209,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":259,"column":5,"nodeType":"2230","messageId":"2212","endLine":259,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":274,"column":5,"nodeType":"2230","messageId":"2212","endLine":274,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":296,"column":3,"nodeType":"2230","messageId":"2212","endLine":296,"endColumn":14},{"ruleId":"2228","severity":1,"message":"2229","line":330,"column":5,"nodeType":"2230","messageId":"2212","endLine":330,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":337,"column":5,"nodeType":"2230","messageId":"2212","endLine":337,"endColumn":16},{"ruleId":"2252","severity":1,"message":"2253","line":1,"column":26,"nodeType":"2254","endLine":1,"endColumn":33,"fix":"2580"},{"ruleId":"2252","severity":1,"message":"2253","line":2,"column":39,"nodeType":"2254","endLine":2,"endColumn":46},{"ruleId":"2269","severity":1,"message":"2581","line":18,"column":5,"nodeType":"2219","messageId":"2271","endLine":18,"endColumn":9},{"ruleId":"2238","severity":1,"message":"2239","line":34,"column":5,"nodeType":"2240","messageId":"2241","endLine":34,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":36,"column":9,"nodeType":"2240","messageId":"2241","endLine":36,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":37,"column":11,"nodeType":"2240","messageId":"2241","endLine":43,"endColumn":13},{"ruleId":"2238","severity":1,"message":"2239","line":44,"column":28,"nodeType":"2240","messageId":"2241","endLine":44,"endColumn":65},{"ruleId":"2238","severity":1,"message":"2239","line":47,"column":9,"nodeType":"2240","messageId":"2241","endLine":47,"endColumn":64},{"ruleId":"2221","severity":1,"message":"2582","line":1,"column":1,"nodeType":"2195","endLine":1,"endColumn":49,"fix":"2583"},{"ruleId":"2221","severity":1,"message":"2584","line":2,"column":1,"nodeType":"2195","endLine":2,"endColumn":78,"fix":"2585"},{"ruleId":"2535","severity":1,"message":"2536","line":95,"column":13,"nodeType":"2320","messageId":"2537","endLine":95,"endColumn":22},{"ruleId":"2217","severity":1,"message":"2586","line":95,"column":23,"nodeType":"2219","messageId":"2220","endLine":95,"endColumn":30},{"ruleId":"2430","severity":1,"message":"2587","line":97,"column":9,"nodeType":"2219","messageId":"2432","endLine":97,"endColumn":20},{"ruleId":"2228","severity":1,"message":"2229","line":100,"column":9,"nodeType":"2230","messageId":"2212","endLine":100,"endColumn":20},{"ruleId":"2430","severity":1,"message":"2431","line":102,"column":9,"nodeType":"2219","messageId":"2432","endLine":102,"endColumn":20},{"ruleId":"2276","severity":1,"message":"2588","line":107,"column":22,"nodeType":"2254","messageId":"2278","endLine":107,"endColumn":28,"fix":"2589"},{"ruleId":"2590","severity":1,"message":"2591","line":107,"column":32,"nodeType":"2592","messageId":"2593","endLine":107,"endColumn":81,"fix":"2594"},{"ruleId":"2228","severity":1,"message":"2229","line":114,"column":5,"nodeType":"2230","messageId":"2212","endLine":114,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":128,"column":5,"nodeType":"2230","messageId":"2212","endLine":128,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":130,"column":5,"nodeType":"2230","messageId":"2212","endLine":130,"endColumn":16},{"ruleId":"2595","severity":1,"message":"2596","line":135,"column":20,"nodeType":"2540","messageId":"2212","endLine":135,"endColumn":38},{"ruleId":"2430","severity":1,"message":"2431","line":139,"column":5,"nodeType":"2219","messageId":"2432","endLine":139,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":147,"column":5,"nodeType":"2240","messageId":"2241","endLine":147,"endColumn":71},{"ruleId":"2238","severity":1,"message":"2239","line":148,"column":7,"nodeType":"2240","messageId":"2241","endLine":148,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":149,"column":9,"nodeType":"2240","messageId":"2241","endLine":149,"endColumn":73},{"ruleId":"2238","severity":1,"message":"2239","line":150,"column":9,"nodeType":"2240","messageId":"2241","endLine":150,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":151,"column":11,"nodeType":"2240","messageId":"2241","endLine":151,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":152,"column":11,"nodeType":"2240","messageId":"2241","endLine":152,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":153,"column":13,"nodeType":"2240","messageId":"2241","endLine":153,"endColumn":66},{"ruleId":"2238","severity":1,"message":"2239","line":154,"column":15,"nodeType":"2240","messageId":"2241","endLine":154,"endColumn":93},{"ruleId":"2238","severity":1,"message":"2239","line":156,"column":13,"nodeType":"2240","messageId":"2241","endLine":156,"endColumn":77},{"ruleId":"2238","severity":1,"message":"2239","line":157,"column":15,"nodeType":"2240","messageId":"2241","endLine":157,"endColumn":60},{"ruleId":"2231","severity":1,"message":"2597","line":13,"column":19,"nodeType":"2219","messageId":"2233","endLine":13,"endColumn":26},{"ruleId":"2261","severity":1,"message":"2598","line":14,"column":13,"nodeType":"2219","messageId":"2263","endLine":14,"endColumn":28,"fix":"2599"},{"ruleId":"2261","severity":1,"message":"2600","line":15,"column":13,"nodeType":"2219","messageId":"2263","endLine":15,"endColumn":18,"fix":"2601"},{"ruleId":"2238","severity":1,"message":"2239","line":24,"column":5,"nodeType":"2240","messageId":"2241","endLine":24,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":25,"column":7,"nodeType":"2240","messageId":"2241","endLine":25,"endColumn":20},{"ruleId":"2217","severity":1,"message":"2602","line":8,"column":3,"nodeType":"2219","messageId":"2220","endLine":8,"endColumn":19},{"ruleId":"2442","severity":1,"message":"2603","line":10,"column":29,"nodeType":null,"messageId":"2604","endLine":10,"endColumn":29,"fix":"2605"},{"ruleId":"2228","severity":1,"message":"2229","line":44,"column":5,"nodeType":"2230","messageId":"2212","endLine":44,"endColumn":18},{"ruleId":"2217","severity":1,"message":"2606","line":53,"column":65,"nodeType":"2219","messageId":"2220","endLine":53,"endColumn":77},{"ruleId":"2228","severity":1,"message":"2229","line":83,"column":5,"nodeType":"2230","messageId":"2212","endLine":83,"endColumn":18},{"ruleId":"2221","severity":1,"message":"2607","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":47,"fix":"2608"},{"ruleId":"2221","severity":1,"message":"2609","line":6,"column":1,"nodeType":"2195","endLine":6,"endColumn":36,"fix":"2610"},{"ruleId":"2238","severity":1,"message":"2239","line":28,"column":5,"nodeType":"2240","messageId":"2241","endLine":28,"endColumn":75},{"ruleId":"2238","severity":1,"message":"2239","line":29,"column":7,"nodeType":"2240","messageId":"2241","endLine":29,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":30,"column":9,"nodeType":"2240","messageId":"2241","endLine":30,"endColumn":39},{"ruleId":"2238","severity":1,"message":"2239","line":32,"column":11,"nodeType":"2240","messageId":"2241","endLine":32,"endColumn":67},{"ruleId":"2238","severity":1,"message":"2239","line":33,"column":13,"nodeType":"2240","messageId":"2241","endLine":33,"endColumn":53},{"ruleId":"2238","severity":1,"message":"2239","line":34,"column":13,"nodeType":"2240","messageId":"2241","endLine":34,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":37,"column":9,"nodeType":"2240","messageId":"2241","endLine":37,"endColumn":89},{"ruleId":"2238","severity":1,"message":"2239","line":38,"column":11,"nodeType":"2240","messageId":"2241","endLine":38,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":39,"column":11,"nodeType":"2240","messageId":"2241","endLine":39,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":41,"column":9,"nodeType":"2240","messageId":"2241","endLine":41,"endColumn":64},{"ruleId":"2238","severity":1,"message":"2239","line":42,"column":11,"nodeType":"2240","messageId":"2241","endLine":42,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":43,"column":11,"nodeType":"2240","messageId":"2241","endLine":43,"endColumn":16},{"ruleId":"2434","severity":1,"message":"2513","line":92,"column":5,"nodeType":"2514","messageId":"2437","endLine":98,"endColumn":6},{"ruleId":"2261","severity":1,"message":"2611","line":92,"column":14,"nodeType":"2219","messageId":"2263","endLine":92,"endColumn":16,"fix":"2612"},{"ruleId":"2231","severity":1,"message":"2613","line":108,"column":13,"nodeType":"2219","messageId":"2233","endLine":108,"endColumn":18},{"ruleId":"2456","severity":1,"message":"2457","line":148,"column":13,"nodeType":"2240","endLine":148,"endColumn":85},{"ruleId":"2456","severity":1,"message":"2457","line":156,"column":13,"nodeType":"2240","endLine":156,"endColumn":85},{"ruleId":"2456","severity":1,"message":"2457","line":161,"column":15,"nodeType":"2240","endLine":161,"endColumn":92},{"ruleId":"2456","severity":1,"message":"2457","line":162,"column":15,"nodeType":"2240","endLine":162,"endColumn":92},{"ruleId":"2456","severity":1,"message":"2457","line":163,"column":15,"nodeType":"2240","endLine":163,"endColumn":92},{"ruleId":"2456","severity":1,"message":"2457","line":164,"column":15,"nodeType":"2240","endLine":164,"endColumn":92},{"ruleId":"2456","severity":1,"message":"2457","line":165,"column":15,"nodeType":"2240","endLine":165,"endColumn":92},{"ruleId":"2456","severity":1,"message":"2457","line":166,"column":15,"nodeType":"2240","endLine":166,"endColumn":92},{"ruleId":"2456","severity":1,"message":"2457","line":174,"column":13,"nodeType":"2240","endLine":174,"endColumn":92},{"ruleId":"2456","severity":1,"message":"2457","line":181,"column":13,"nodeType":"2240","endLine":181,"endColumn":96},{"ruleId":"2246","severity":1,"message":"2247","line":188,"column":25,"nodeType":"2219","messageId":"2248","endLine":188,"endColumn":28},{"ruleId":"2221","severity":1,"message":"2614","line":1,"column":1,"nodeType":"2195","endLine":1,"endColumn":56,"fix":"2615"},{"ruleId":"2252","severity":1,"message":"2253","line":2,"column":37,"nodeType":"2254","endLine":2,"endColumn":44,"fix":"2616"},{"ruleId":"2252","severity":1,"message":"2253","line":3,"column":28,"nodeType":"2254","endLine":3,"endColumn":35},{"ruleId":"2234","severity":1,"message":"2235","line":19,"column":27,"nodeType":"2236","messageId":"2237","endLine":19,"endColumn":29},{"ruleId":"2430","severity":1,"message":"2431","line":28,"column":5,"nodeType":"2219","messageId":"2432","endLine":28,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":45,"column":5,"nodeType":"2240","messageId":"2241","endLine":45,"endColumn":92},{"ruleId":"2238","severity":1,"message":"2239","line":46,"column":7,"nodeType":"2240","messageId":"2241","endLine":46,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":48,"column":9,"nodeType":"2240","messageId":"2241","endLine":48,"endColumn":66},{"ruleId":"2238","severity":1,"message":"2239","line":49,"column":11,"nodeType":"2240","messageId":"2241","endLine":49,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":50,"column":11,"nodeType":"2240","messageId":"2241","endLine":50,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":51,"column":11,"nodeType":"2240","messageId":"2241","endLine":51,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":52,"column":75,"nodeType":"2240","messageId":"2241","endLine":52,"endColumn":81},{"ruleId":"2238","severity":1,"message":"2239","line":55,"column":11,"nodeType":"2240","messageId":"2241","endLine":55,"endColumn":82},{"ruleId":"2238","severity":1,"message":"2239","line":56,"column":13,"nodeType":"2240","messageId":"2241","endLine":56,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":57,"column":13,"nodeType":"2240","messageId":"2241","endLine":57,"endColumn":105},{"ruleId":"2238","severity":1,"message":"2239","line":59,"column":11,"nodeType":"2240","messageId":"2241","endLine":59,"endColumn":80},{"ruleId":"2242","severity":1,"message":"2243","line":60,"column":11,"nodeType":"2244","messageId":"2245","endLine":62,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":60,"column":11,"nodeType":"2240","messageId":"2241","endLine":60,"endColumn":87},{"ruleId":"2242","severity":1,"message":"2243","line":127,"column":17,"nodeType":"2244","messageId":"2245","endLine":127,"endColumn":72},{"ruleId":"2246","severity":1,"message":"2247","line":135,"column":33,"nodeType":"2219","messageId":"2248","endLine":135,"endColumn":36},{"ruleId":"2246","severity":1,"message":"2247","line":142,"column":32,"nodeType":"2219","messageId":"2248","endLine":142,"endColumn":35},{"ruleId":"2231","severity":1,"message":"2617","line":152,"column":49,"nodeType":"2219","messageId":"2233","endLine":152,"endColumn":52},{"ruleId":"2246","severity":1,"message":"2247","line":154,"column":36,"nodeType":"2219","messageId":"2248","endLine":154,"endColumn":39},{"ruleId":"2217","severity":1,"message":"2618","line":25,"column":68,"nodeType":"2219","messageId":"2220","endLine":25,"endColumn":72},{"ruleId":"2217","severity":1,"message":"2619","line":79,"column":10,"nodeType":"2219","messageId":"2220","endLine":79,"endColumn":25},{"ruleId":"2217","severity":1,"message":"2620","line":92,"column":5,"nodeType":"2219","messageId":"2220","endLine":92,"endColumn":16},{"ruleId":"2231","severity":1,"message":"2621","line":97,"column":15,"nodeType":"2219","messageId":"2233","endLine":97,"endColumn":20},{"ruleId":"2217","severity":1,"message":"2622","line":102,"column":9,"nodeType":"2219","messageId":"2220","endLine":102,"endColumn":14},{"ruleId":"2217","severity":1,"message":"2623","line":103,"column":9,"nodeType":"2219","messageId":"2220","endLine":103,"endColumn":25},{"ruleId":"2217","severity":1,"message":"2624","line":143,"column":9,"nodeType":"2219","messageId":"2220","endLine":143,"endColumn":20},{"ruleId":"2564","severity":1,"message":"2565","line":156,"column":42,"nodeType":"2566","messageId":"2567","endLine":156,"endColumn":45},{"ruleId":"2564","severity":1,"message":"2565","line":167,"column":46,"nodeType":"2566","messageId":"2567","endLine":167,"endColumn":49},{"ruleId":"2535","severity":1,"message":"2536","line":183,"column":21,"nodeType":"2320","messageId":"2537","endLine":183,"endColumn":30},{"ruleId":"2535","severity":1,"message":"2536","line":212,"column":22,"nodeType":"2320","messageId":"2537","endLine":212,"endColumn":31},{"ruleId":"2228","severity":1,"message":"2229","line":213,"column":7,"nodeType":"2230","messageId":"2212","endLine":213,"endColumn":18},{"ruleId":"2228","severity":1,"message":"2229","line":244,"column":11,"nodeType":"2230","messageId":"2212","endLine":244,"endColumn":24},{"ruleId":"2228","severity":1,"message":"2229","line":245,"column":11,"nodeType":"2230","messageId":"2212","endLine":245,"endColumn":24},{"ruleId":"2456","severity":1,"message":"2457","line":372,"column":13,"nodeType":"2240","endLine":372,"endColumn":105},{"ruleId":"2238","severity":1,"message":"2239","line":26,"column":5,"nodeType":"2240","messageId":"2241","endLine":26,"endColumn":100},{"ruleId":"2238","severity":1,"message":"2239","line":27,"column":7,"nodeType":"2240","messageId":"2241","endLine":27,"endColumn":37},{"ruleId":"2238","severity":1,"message":"2239","line":28,"column":9,"nodeType":"2240","messageId":"2241","endLine":28,"endColumn":73},{"ruleId":"2238","severity":1,"message":"2239","line":29,"column":9,"nodeType":"2240","messageId":"2241","endLine":29,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":30,"column":48,"nodeType":"2240","messageId":"2241","endLine":30,"endColumn":54},{"ruleId":"2238","severity":1,"message":"2239","line":32,"column":9,"nodeType":"2240","messageId":"2241","endLine":32,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":33,"column":9,"nodeType":"2240","messageId":"2241","endLine":33,"endColumn":67},{"ruleId":"2238","severity":1,"message":"2239","line":34,"column":11,"nodeType":"2240","messageId":"2241","endLine":34,"endColumn":25},{"ruleId":"2238","severity":1,"message":"2239","line":35,"column":11,"nodeType":"2240","messageId":"2241","endLine":35,"endColumn":16},{"ruleId":"2252","severity":1,"message":"2253","line":1,"column":54,"nodeType":"2254","endLine":1,"endColumn":61},{"ruleId":"2221","severity":1,"message":"2625","line":8,"column":1,"nodeType":"2195","endLine":8,"endColumn":34,"fix":"2626"},{"ruleId":"2252","severity":1,"message":"2253","line":8,"column":26,"nodeType":"2254","endLine":8,"endColumn":33},{"ruleId":"2221","severity":1,"message":"2627","line":9,"column":1,"nodeType":"2195","endLine":9,"endColumn":41,"fix":"2628"},{"ruleId":"2231","severity":1,"message":"2629","line":47,"column":15,"nodeType":"2219","messageId":"2233","endLine":47,"endColumn":20},{"ruleId":"2364","severity":1,"message":"2365","line":78,"column":9,"nodeType":"2366","messageId":"2367","endLine":78,"endColumn":46,"fix":"2630"},{"ruleId":"2517","severity":1,"message":"2518","line":132,"column":24,"nodeType":"2236","messageId":"2519","endLine":132,"endColumn":67},{"ruleId":"2631","severity":1,"message":"2632","line":135,"column":24,"nodeType":"2633","messageId":"2634","endLine":135,"endColumn":36,"fix":"2635"},{"ruleId":"2217","severity":1,"message":"2636","line":2,"column":3,"nodeType":"2219","messageId":"2220","endLine":2,"endColumn":29},{"ruleId":"2217","severity":1,"message":"2637","line":10,"column":3,"nodeType":"2219","messageId":"2220","endLine":10,"endColumn":21},{"ruleId":"2323","severity":1,"message":"2324","line":28,"column":24,"nodeType":"2236","messageId":"2325","endLine":28,"endColumn":26},{"ruleId":"2234","severity":1,"message":"2638","line":32,"column":3,"nodeType":"2338","messageId":"2339","endLine":32,"endColumn":40},{"ruleId":"2234","severity":1,"message":"2638","line":40,"column":3,"nodeType":"2338","messageId":"2339","endLine":40,"endColumn":14},{"ruleId":"2234","severity":1,"message":"2638","line":47,"column":3,"nodeType":"2338","messageId":"2339","endLine":47,"endColumn":27},{"ruleId":"2234","severity":1,"message":"2638","line":55,"column":3,"nodeType":"2338","messageId":"2339","endLine":55,"endColumn":14},{"ruleId":"2234","severity":1,"message":"2638","line":62,"column":3,"nodeType":"2338","messageId":"2339","endLine":62,"endColumn":28},{"ruleId":"2234","severity":1,"message":"2638","line":69,"column":3,"nodeType":"2338","messageId":"2339","endLine":69,"endColumn":17},{"ruleId":"2234","severity":1,"message":"2638","line":76,"column":3,"nodeType":"2338","messageId":"2339","endLine":76,"endColumn":17},{"ruleId":"2323","severity":1,"message":"2324","line":87,"column":24,"nodeType":"2236","messageId":"2325","endLine":87,"endColumn":26},{"ruleId":"2234","severity":1,"message":"2638","line":91,"column":3,"nodeType":"2338","messageId":"2339","endLine":91,"endColumn":39},{"ruleId":"2228","severity":1,"message":"2229","line":96,"column":3,"nodeType":"2230","messageId":"2212","endLine":96,"endColumn":14},{"ruleId":"2323","severity":1,"message":"2324","line":103,"column":24,"nodeType":"2236","messageId":"2325","endLine":103,"endColumn":26},{"ruleId":"2234","severity":1,"message":"2638","line":107,"column":3,"nodeType":"2338","messageId":"2339","endLine":107,"endColumn":37},{"ruleId":"2252","severity":1,"message":"2253","line":1,"column":26,"nodeType":"2254","endLine":1,"endColumn":33,"fix":"2639"},{"ruleId":"2252","severity":1,"message":"2253","line":2,"column":27,"nodeType":"2254","endLine":2,"endColumn":34},{"ruleId":"2252","severity":1,"message":"2253","line":3,"column":28,"nodeType":"2254","endLine":3,"endColumn":35},{"ruleId":"2430","severity":1,"message":"2431","line":27,"column":5,"nodeType":"2219","messageId":"2432","endLine":27,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":43,"column":5,"nodeType":"2240","messageId":"2241","endLine":43,"endColumn":73},{"ruleId":"2238","severity":1,"message":"2239","line":44,"column":7,"nodeType":"2240","messageId":"2241","endLine":44,"endColumn":72},{"ruleId":"2238","severity":1,"message":"2239","line":45,"column":7,"nodeType":"2240","messageId":"2241","endLine":45,"endColumn":38},{"ruleId":"2238","severity":1,"message":"2239","line":46,"column":7,"nodeType":"2240","messageId":"2241","endLine":46,"endColumn":44},{"ruleId":"2238","severity":1,"message":"2239","line":49,"column":7,"nodeType":"2240","messageId":"2241","endLine":49,"endColumn":37},{"ruleId":"2238","severity":1,"message":"2239","line":50,"column":9,"nodeType":"2240","messageId":"2241","endLine":50,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":51,"column":9,"nodeType":"2240","messageId":"2241","endLine":51,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":53,"column":7,"nodeType":"2240","messageId":"2241","endLine":53,"endColumn":37},{"ruleId":"2238","severity":1,"message":"2239","line":54,"column":9,"nodeType":"2240","messageId":"2241","endLine":54,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":55,"column":9,"nodeType":"2240","messageId":"2241","endLine":55,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":57,"column":7,"nodeType":"2240","messageId":"2241","endLine":57,"endColumn":37},{"ruleId":"2238","severity":1,"message":"2239","line":58,"column":9,"nodeType":"2240","messageId":"2241","endLine":58,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":59,"column":9,"nodeType":"2240","messageId":"2241","endLine":59,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":61,"column":7,"nodeType":"2240","messageId":"2241","endLine":61,"endColumn":67},{"ruleId":"2217","severity":1,"message":"2640","line":25,"column":24,"nodeType":"2219","messageId":"2220","endLine":25,"endColumn":37},{"ruleId":"2480","severity":1,"message":"2481","line":77,"column":5,"nodeType":"2482","messageId":"2483","endLine":77,"endColumn":49},{"ruleId":"2641","severity":1,"message":"2642","line":119,"column":17,"nodeType":"2643","endLine":119,"endColumn":26},{"ruleId":"2246","severity":1,"message":"2247","line":160,"column":37,"nodeType":"2219","messageId":"2248","endLine":160,"endColumn":42},{"ruleId":"2293","severity":1,"message":"2296","line":41,"column":17,"nodeType":"2295","messageId":"2212","endLine":41,"endColumn":19},{"ruleId":"2293","severity":1,"message":"2296","line":49,"column":17,"nodeType":"2295","messageId":"2212","endLine":49,"endColumn":19},{"ruleId":"2293","severity":1,"message":"2296","line":58,"column":17,"nodeType":"2295","messageId":"2212","endLine":58,"endColumn":19},{"ruleId":"2293","severity":1,"message":"2296","line":66,"column":17,"nodeType":"2295","messageId":"2212","endLine":66,"endColumn":19},{"ruleId":"2293","severity":1,"message":"2296","line":74,"column":17,"nodeType":"2295","messageId":"2212","endLine":74,"endColumn":19},{"ruleId":"2293","severity":1,"message":"2296","line":83,"column":17,"nodeType":"2295","messageId":"2212","endLine":83,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2645","line":17,"column":1,"nodeType":"2195","endLine":17,"endColumn":39},{"ruleId":"2234","severity":1,"message":"2235","line":19,"column":55,"nodeType":"2236","messageId":"2237","endLine":19,"endColumn":57},{"ruleId":"2646","severity":1,"message":"2647","line":30,"column":22,"nodeType":"2648","messageId":"2649","endLine":30,"endColumn":27},{"ruleId":"2261","severity":1,"message":"2650","line":42,"column":9,"nodeType":"2219","messageId":"2263","endLine":42,"endColumn":23,"fix":"2651"},{"ruleId":"2535","severity":1,"message":"2536","line":70,"column":36,"nodeType":"2320","messageId":"2537","endLine":70,"endColumn":45},{"ruleId":"2217","severity":1,"message":"2652","line":70,"column":46,"nodeType":"2219","messageId":"2220","endLine":70,"endColumn":54},{"ruleId":"2217","severity":1,"message":"2653","line":75,"column":34,"nodeType":"2219","messageId":"2220","endLine":75,"endColumn":41},{"ruleId":"2231","severity":1,"message":"2654","line":76,"column":13,"nodeType":"2219","messageId":"2233","endLine":76,"endColumn":29},{"ruleId":"2217","severity":1,"message":"2655","line":99,"column":43,"nodeType":"2219","messageId":"2220","endLine":99,"endColumn":47},{"ruleId":"2217","severity":1,"message":"2656","line":99,"column":49,"nodeType":"2219","messageId":"2220","endLine":99,"endColumn":55},{"ruleId":"2231","severity":1,"message":"2657","line":109,"column":76,"nodeType":"2219","messageId":"2233","endLine":109,"endColumn":91},{"ruleId":"2217","severity":1,"message":"2658","line":109,"column":76,"nodeType":"2219","messageId":"2220","endLine":109,"endColumn":91},{"ruleId":"2261","severity":1,"message":"2659","line":110,"column":7,"nodeType":"2219","messageId":"2263","endLine":110,"endColumn":20,"fix":"2660"},{"ruleId":"2228","severity":1,"message":"2229","line":113,"column":5,"nodeType":"2230","messageId":"2212","endLine":113,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":125,"column":5,"nodeType":"2230","messageId":"2212","endLine":125,"endColumn":16},{"ruleId":"2231","severity":1,"message":"2657","line":137,"column":44,"nodeType":"2219","messageId":"2233","endLine":137,"endColumn":59},{"ruleId":"2228","severity":1,"message":"2229","line":215,"column":7,"nodeType":"2230","messageId":"2212","endLine":215,"endColumn":18},{"ruleId":"2590","severity":1,"message":"2591","line":224,"column":29,"nodeType":"2592","messageId":"2593","endLine":224,"endColumn":113,"fix":"2661"},{"ruleId":"2261","severity":1,"message":"2662","line":226,"column":7,"nodeType":"2219","messageId":"2263","endLine":226,"endColumn":16,"fix":"2663"},{"ruleId":"2238","severity":1,"message":"2239","line":10,"column":5,"nodeType":"2240","messageId":"2241","endLine":10,"endColumn":72},{"ruleId":"2238","severity":1,"message":"2239","line":12,"column":9,"nodeType":"2240","messageId":"2241","endLine":12,"endColumn":79},{"ruleId":"2238","severity":1,"message":"2239","line":14,"column":9,"nodeType":"2240","messageId":"2241","endLine":14,"endColumn":81},{"ruleId":"2246","severity":1,"message":"2247","line":131,"column":22,"nodeType":"2219","messageId":"2248","endLine":131,"endColumn":25},{"ruleId":"2357","severity":1,"message":"2358","line":34,"column":5,"nodeType":"2240","endLine":34,"endColumn":118},{"ruleId":"2357","severity":1,"message":"2359","line":34,"column":5,"nodeType":"2240","endLine":34,"endColumn":118},{"ruleId":"2238","severity":1,"message":"2239","line":34,"column":5,"nodeType":"2240","messageId":"2241","endLine":34,"endColumn":118},{"ruleId":"2238","severity":1,"message":"2239","line":35,"column":7,"nodeType":"2240","messageId":"2241","endLine":35,"endColumn":42},{"ruleId":"2664","severity":1,"message":"2665","line":35,"column":26,"nodeType":"2666","messageId":"2667","endLine":35,"endColumn":36,"fix":"2668"},{"ruleId":"2238","severity":1,"message":"2239","line":36,"column":7,"nodeType":"2240","messageId":"2241","endLine":36,"endColumn":51},{"ruleId":"2217","severity":1,"message":"2669","line":11,"column":3,"nodeType":"2219","messageId":"2220","endLine":11,"endColumn":11},{"ruleId":"2221","severity":1,"message":"2670","line":29,"column":1,"nodeType":"2195","endLine":29,"endColumn":35,"fix":"2671"},{"ruleId":"2217","severity":1,"message":"2672","line":29,"column":16,"nodeType":"2219","messageId":"2220","endLine":29,"endColumn":20},{"ruleId":"2234","severity":1,"message":"2235","line":32,"column":43,"nodeType":"2236","messageId":"2237","endLine":32,"endColumn":45},{"ruleId":"2228","severity":1,"message":"2229","line":64,"column":7,"nodeType":"2230","messageId":"2212","endLine":64,"endColumn":18},{"ruleId":"2228","severity":1,"message":"2229","line":94,"column":7,"nodeType":"2230","messageId":"2212","endLine":94,"endColumn":18},{"ruleId":"2228","severity":1,"message":"2229","line":126,"column":9,"nodeType":"2230","messageId":"2212","endLine":126,"endColumn":20},{"ruleId":"2228","severity":1,"message":"2229","line":166,"column":9,"nodeType":"2230","messageId":"2212","endLine":166,"endColumn":20},{"ruleId":"2228","severity":1,"message":"2229","line":268,"column":11,"nodeType":"2230","messageId":"2212","endLine":268,"endColumn":22},{"ruleId":"2564","severity":1,"message":"2565","line":298,"column":45,"nodeType":"2566","messageId":"2567","endLine":298,"endColumn":48},{"ruleId":"2228","severity":1,"message":"2229","line":319,"column":9,"nodeType":"2230","messageId":"2212","endLine":319,"endColumn":20},{"ruleId":"2564","severity":1,"message":"2565","line":328,"column":45,"nodeType":"2566","messageId":"2567","endLine":328,"endColumn":48},{"ruleId":"2480","severity":1,"message":"2481","line":331,"column":7,"nodeType":"2482","messageId":"2483","endLine":336,"endColumn":47},{"ruleId":"2673","severity":1,"message":"2674","line":331,"column":47,"nodeType":"2675","messageId":"2676","endLine":331,"endColumn":48},{"ruleId":"2272","severity":1,"message":"2273","line":332,"column":25,"nodeType":"2274","messageId":"2275","endLine":332,"endColumn":47},{"ruleId":"2677","severity":1,"message":"2678","line":338,"column":21,"nodeType":"2460","messageId":"2212","endLine":338,"endColumn":23},{"ruleId":"2228","severity":1,"message":"2229","line":344,"column":3,"nodeType":"2230","messageId":"2212","endLine":344,"endColumn":14},{"ruleId":"2564","severity":1,"message":"2565","line":347,"column":45,"nodeType":"2566","messageId":"2567","endLine":347,"endColumn":48},{"ruleId":"2272","severity":1,"message":"2273","line":358,"column":24,"nodeType":"2274","messageId":"2275","endLine":358,"endColumn":44},{"ruleId":"2228","severity":1,"message":"2229","line":367,"column":9,"nodeType":"2230","messageId":"2212","endLine":367,"endColumn":20},{"ruleId":"2272","severity":1,"message":"2273","line":386,"column":20,"nodeType":"2274","messageId":"2275","endLine":386,"endColumn":37},{"ruleId":"2228","severity":1,"message":"2229","line":399,"column":5,"nodeType":"2230","messageId":"2212","endLine":399,"endColumn":16},{"ruleId":"2217","severity":1,"message":"2679","line":405,"column":47,"nodeType":"2219","messageId":"2220","endLine":405,"endColumn":54},{"ruleId":"2272","severity":1,"message":"2273","line":417,"column":20,"nodeType":"2274","messageId":"2275","endLine":417,"endColumn":37},{"ruleId":"2228","severity":1,"message":"2229","line":428,"column":5,"nodeType":"2230","messageId":"2212","endLine":428,"endColumn":16},{"ruleId":"2272","severity":1,"message":"2273","line":457,"column":26,"nodeType":"2274","messageId":"2275","endLine":457,"endColumn":36},{"ruleId":"2228","severity":1,"message":"2229","line":466,"column":11,"nodeType":"2230","messageId":"2212","endLine":466,"endColumn":22},{"ruleId":"2228","severity":1,"message":"2229","line":500,"column":5,"nodeType":"2230","messageId":"2212","endLine":500,"endColumn":18},{"ruleId":"2234","severity":1,"message":"2317","line":505,"column":45,"nodeType":"2236","messageId":"2237","endLine":505,"endColumn":47},{"ruleId":"2293","severity":1,"message":"2296","line":523,"column":15,"nodeType":"2295","messageId":"2212","endLine":523,"endColumn":17},{"ruleId":"2228","severity":1,"message":"2229","line":556,"column":5,"nodeType":"2230","messageId":"2212","endLine":556,"endColumn":16},{"ruleId":"2234","severity":1,"message":"2317","line":583,"column":40,"nodeType":"2236","messageId":"2237","endLine":583,"endColumn":42},{"ruleId":"2364","severity":1,"message":"2365","line":20,"column":9,"nodeType":"2366","messageId":"2367","endLine":20,"endColumn":33,"fix":"2680"},{"ruleId":"2261","severity":1,"message":"2681","line":20,"column":9,"nodeType":"2219","messageId":"2263","endLine":20,"endColumn":14,"fix":"2682"},{"ruleId":"2221","severity":1,"message":"2683","line":7,"column":1,"nodeType":"2195","endLine":7,"endColumn":92,"fix":"2684"},{"ruleId":"2217","severity":1,"message":"2685","line":7,"column":10,"nodeType":"2219","messageId":"2220","endLine":7,"endColumn":29},{"ruleId":"2590","severity":1,"message":"2591","line":10,"column":1,"nodeType":"2592","messageId":"2593","endLine":10,"endColumn":44,"fix":"2686"},{"ruleId":"2590","severity":1,"message":"2591","line":11,"column":1,"nodeType":"2592","messageId":"2593","endLine":11,"endColumn":48,"fix":"2687"},{"ruleId":"2590","severity":1,"message":"2591","line":12,"column":1,"nodeType":"2592","messageId":"2593","endLine":12,"endColumn":51,"fix":"2688"},{"ruleId":"2217","severity":1,"message":"2689","line":14,"column":8,"nodeType":"2219","messageId":"2220","endLine":14,"endColumn":12},{"ruleId":"2442","severity":1,"message":"2690","line":14,"column":18,"nodeType":null,"messageId":"2691","endLine":14,"endColumn":24,"fix":"2692"},{"ruleId":"2217","severity":1,"message":"2693","line":156,"column":7,"nodeType":"2219","messageId":"2220","endLine":156,"endColumn":29},{"ruleId":"2442","severity":1,"message":"2694","line":199,"column":3,"nodeType":null,"messageId":"2444","endLine":200,"endColumn":3,"fix":"2695"},{"ruleId":"2228","severity":1,"message":"2229","line":204,"column":5,"nodeType":"2230","messageId":"2212","endLine":204,"endColumn":18},{"ruleId":"2442","severity":1,"message":"2696","line":214,"column":24,"nodeType":null,"messageId":"2691","endLine":214,"endColumn":308,"fix":"2697"},{"ruleId":"2228","severity":1,"message":"2229","line":217,"column":3,"nodeType":"2230","messageId":"2212","endLine":217,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2698","line":217,"column":22,"nodeType":null,"messageId":"2604","endLine":217,"endColumn":22,"fix":"2699"},{"ruleId":"2228","severity":1,"message":"2229","line":218,"column":3,"nodeType":"2230","messageId":"2212","endLine":218,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2698","line":218,"column":20,"nodeType":null,"messageId":"2604","endLine":218,"endColumn":20,"fix":"2700"},{"ruleId":"2228","severity":1,"message":"2229","line":220,"column":3,"nodeType":"2230","messageId":"2212","endLine":220,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2698","line":220,"column":26,"nodeType":null,"messageId":"2604","endLine":220,"endColumn":26,"fix":"2701"},{"ruleId":"2228","severity":1,"message":"2229","line":221,"column":3,"nodeType":"2230","messageId":"2212","endLine":221,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2698","line":221,"column":24,"nodeType":null,"messageId":"2604","endLine":221,"endColumn":24,"fix":"2702"},{"ruleId":"2228","severity":1,"message":"2229","line":223,"column":3,"nodeType":"2230","messageId":"2212","endLine":223,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2698","line":223,"column":26,"nodeType":null,"messageId":"2604","endLine":223,"endColumn":26,"fix":"2703"},{"ruleId":"2228","severity":1,"message":"2229","line":224,"column":3,"nodeType":"2230","messageId":"2212","endLine":224,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2698","line":224,"column":23,"nodeType":null,"messageId":"2604","endLine":224,"endColumn":23,"fix":"2704"},{"ruleId":"2442","severity":1,"message":"2705","line":225,"column":1,"nodeType":null,"messageId":"2444","endLine":225,"endColumn":3,"fix":"2706"},{"ruleId":"2261","severity":1,"message":"2707","line":226,"column":7,"nodeType":"2219","messageId":"2263","endLine":226,"endColumn":19,"fix":"2708"},{"ruleId":"2442","severity":1,"message":"2709","line":226,"column":21,"nodeType":null,"messageId":"2691","endLine":226,"endColumn":47,"fix":"2710"},{"ruleId":"2228","severity":1,"message":"2229","line":228,"column":3,"nodeType":"2230","messageId":"2212","endLine":228,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2698","line":228,"column":26,"nodeType":null,"messageId":"2604","endLine":228,"endColumn":26,"fix":"2711"},{"ruleId":"2228","severity":1,"message":"2229","line":229,"column":3,"nodeType":"2230","messageId":"2212","endLine":229,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2698","line":229,"column":28,"nodeType":null,"messageId":"2604","endLine":229,"endColumn":28,"fix":"2712"},{"ruleId":"2442","severity":1,"message":"2713","line":231,"column":6,"nodeType":null,"messageId":"2604","endLine":231,"endColumn":6,"fix":"2714"},{"ruleId":"2442","severity":1,"message":"2715","line":233,"column":1,"nodeType":null,"messageId":"2444","endLine":233,"endColumn":2,"fix":"2716"},{"ruleId":"2442","severity":1,"message":"2715","line":235,"column":12,"nodeType":null,"messageId":"2444","endLine":235,"endColumn":13,"fix":"2717"},{"ruleId":"2442","severity":1,"message":"2715","line":236,"column":11,"nodeType":null,"messageId":"2444","endLine":236,"endColumn":12,"fix":"2718"},{"ruleId":"2442","severity":1,"message":"2715","line":237,"column":18,"nodeType":null,"messageId":"2444","endLine":237,"endColumn":19,"fix":"2719"},{"ruleId":"2442","severity":1,"message":"2720","line":238,"column":1,"nodeType":null,"messageId":"2691","endLine":238,"endColumn":5,"fix":"2721"},{"ruleId":"2442","severity":1,"message":"2722","line":239,"column":3,"nodeType":null,"messageId":"2691","endLine":240,"endColumn":16,"fix":"2723"},{"ruleId":"2228","severity":1,"message":"2229","line":241,"column":5,"nodeType":"2230","messageId":"2212","endLine":241,"endColumn":18},{"ruleId":"2590","severity":1,"message":"2724","line":249,"column":3,"nodeType":"2725","messageId":"2593","endLine":259,"endColumn":6,"fix":"2726"},{"ruleId":"2590","severity":1,"message":"2727","line":249,"column":3,"nodeType":"2725","messageId":"2728","endLine":259,"endColumn":6,"fix":"2729"},{"ruleId":"2442","severity":1,"message":"2452","line":260,"column":3,"nodeType":null,"messageId":"2444","endLine":261,"endColumn":1,"fix":"2730"},{"ruleId":"2217","severity":1,"message":"2731","line":363,"column":13,"nodeType":"2219","messageId":"2220","endLine":363,"endColumn":15},{"ruleId":"2564","severity":1,"message":"2565","line":372,"column":56,"nodeType":"2566","messageId":"2567","endLine":372,"endColumn":64},{"ruleId":"2228","severity":1,"message":"2229","line":402,"column":7,"nodeType":"2230","messageId":"2212","endLine":402,"endColumn":18},{"ruleId":"2217","severity":1,"message":"2406","line":414,"column":27,"nodeType":"2219","messageId":"2220","endLine":414,"endColumn":32},{"ruleId":"2231","severity":1,"message":"2732","line":414,"column":64,"nodeType":"2219","messageId":"2233","endLine":414,"endColumn":73},{"ruleId":"2217","severity":1,"message":"2406","line":498,"column":27,"nodeType":"2219","messageId":"2220","endLine":498,"endColumn":32},{"ruleId":"2231","severity":1,"message":"2732","line":498,"column":64,"nodeType":"2219","messageId":"2233","endLine":498,"endColumn":73},{"ruleId":"2228","severity":1,"message":"2229","line":568,"column":5,"nodeType":"2230","messageId":"2212","endLine":568,"endColumn":16},{"ruleId":"2590","severity":1,"message":"2591","line":579,"column":3,"nodeType":"2592","messageId":"2593","endLine":579,"endColumn":48,"fix":"2733"},{"ruleId":"2217","severity":1,"message":"2406","line":580,"column":27,"nodeType":"2219","messageId":"2220","endLine":580,"endColumn":32},{"ruleId":"2231","severity":1,"message":"2732","line":580,"column":64,"nodeType":"2219","messageId":"2233","endLine":580,"endColumn":73},{"ruleId":"2442","severity":1,"message":"2705","line":581,"column":1,"nodeType":null,"messageId":"2444","endLine":581,"endColumn":3,"fix":"2734"},{"ruleId":"2590","severity":1,"message":"2724","line":582,"column":3,"nodeType":"2725","messageId":"2593","endLine":611,"endColumn":5,"fix":"2735"},{"ruleId":"2442","severity":1,"message":"2736","line":613,"column":3,"nodeType":null,"messageId":"2691","endLine":613,"endColumn":37,"fix":"2737"},{"ruleId":"2442","severity":1,"message":"2738","line":626,"column":5,"nodeType":null,"messageId":"2444","endLine":627,"endColumn":5,"fix":"2739"},{"ruleId":"2442","severity":1,"message":"2740","line":657,"column":3,"nodeType":null,"messageId":"2691","endLine":660,"endColumn":1,"fix":"2741"},{"ruleId":"2442","severity":1,"message":"2705","line":667,"column":1,"nodeType":null,"messageId":"2444","endLine":667,"endColumn":3,"fix":"2742"},{"ruleId":"2590","severity":1,"message":"2591","line":669,"column":3,"nodeType":"2592","messageId":"2593","endLine":669,"endColumn":70,"fix":"2743"},{"ruleId":"2590","severity":1,"message":"2591","line":671,"column":3,"nodeType":"2592","messageId":"2593","endLine":671,"endColumn":76,"fix":"2744"},{"ruleId":"2442","severity":1,"message":"2452","line":673,"column":1,"nodeType":null,"messageId":"2444","endLine":674,"endColumn":1,"fix":"2745"},{"ruleId":"2228","severity":1,"message":"2229","line":674,"column":3,"nodeType":"2230","messageId":"2212","endLine":674,"endColumn":14},{"ruleId":"2228","severity":1,"message":"2229","line":675,"column":3,"nodeType":"2230","messageId":"2212","endLine":675,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2746","line":676,"column":1,"nodeType":null,"messageId":"2604","endLine":676,"endColumn":1,"fix":"2747"},{"ruleId":"2590","severity":1,"message":"2724","line":681,"column":3,"nodeType":"2725","messageId":"2593","endLine":685,"endColumn":3,"fix":"2748"},{"ruleId":"2228","severity":1,"message":"2229","line":687,"column":3,"nodeType":"2230","messageId":"2212","endLine":687,"endColumn":14},{"ruleId":"2442","severity":1,"message":"2698","line":688,"column":37,"nodeType":null,"messageId":"2604","endLine":688,"endColumn":37,"fix":"2749"},{"ruleId":"2228","severity":1,"message":"2229","line":689,"column":3,"nodeType":"2230","messageId":"2212","endLine":689,"endColumn":14},{"ruleId":"2590","severity":1,"message":"2591","line":691,"column":3,"nodeType":"2592","messageId":"2593","endLine":691,"endColumn":87,"fix":"2750"},{"ruleId":"2442","severity":1,"message":"2746","line":692,"column":1,"nodeType":null,"messageId":"2604","endLine":692,"endColumn":1,"fix":"2751"},{"ruleId":"2228","severity":1,"message":"2229","line":717,"column":5,"nodeType":"2230","messageId":"2212","endLine":717,"endColumn":16},{"ruleId":"2438","severity":1,"message":"2439","line":717,"column":17,"nodeType":"2295","messageId":"2440","endLine":717,"endColumn":30,"fix":"2752"},{"ruleId":"2442","severity":1,"message":"2698","line":717,"column":31,"nodeType":null,"messageId":"2604","endLine":717,"endColumn":31,"fix":"2753"},{"ruleId":"2228","severity":1,"message":"2229","line":726,"column":5,"nodeType":"2230","messageId":"2212","endLine":726,"endColumn":16},{"ruleId":"2442","severity":1,"message":"2754","line":732,"column":1,"nodeType":null,"messageId":"2691","endLine":736,"endColumn":1,"fix":"2755"},{"ruleId":"2217","severity":1,"message":"2406","line":739,"column":27,"nodeType":"2219","messageId":"2220","endLine":739,"endColumn":32},{"ruleId":"2231","severity":1,"message":"2732","line":739,"column":64,"nodeType":"2219","messageId":"2233","endLine":739,"endColumn":73},{"ruleId":"2228","severity":1,"message":"2229","line":770,"column":5,"nodeType":"2230","messageId":"2212","endLine":770,"endColumn":16},{"ruleId":"2231","severity":1,"message":"2756","line":779,"column":36,"nodeType":"2219","messageId":"2233","endLine":779,"endColumn":51},{"ruleId":"2231","severity":1,"message":"2732","line":779,"column":53,"nodeType":"2219","messageId":"2233","endLine":779,"endColumn":62},{"ruleId":"2228","severity":1,"message":"2229","line":801,"column":9,"nodeType":"2230","messageId":"2212","endLine":801,"endColumn":20},{"ruleId":"2228","severity":1,"message":"2229","line":805,"column":5,"nodeType":"2230","messageId":"2212","endLine":805,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":862,"column":5,"nodeType":"2230","messageId":"2212","endLine":862,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":897,"column":5,"nodeType":"2230","messageId":"2212","endLine":897,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":932,"column":5,"nodeType":"2230","messageId":"2212","endLine":932,"endColumn":16},{"ruleId":"2231","severity":1,"message":"2732","line":941,"column":66,"nodeType":"2219","messageId":"2233","endLine":941,"endColumn":75},{"ruleId":"2231","severity":1,"message":"2756","line":982,"column":71,"nodeType":"2219","messageId":"2233","endLine":982,"endColumn":86},{"ruleId":"2231","severity":1,"message":"2732","line":982,"column":88,"nodeType":"2219","messageId":"2233","endLine":982,"endColumn":97},{"ruleId":"2564","severity":1,"message":"2565","line":999,"column":46,"nodeType":"2566","messageId":"2567","endLine":999,"endColumn":49},{"ruleId":"2228","severity":1,"message":"2229","line":1016,"column":7,"nodeType":"2230","messageId":"2212","endLine":1016,"endColumn":18},{"ruleId":"2217","severity":1,"message":"2406","line":1026,"column":11,"nodeType":"2219","messageId":"2220","endLine":1026,"endColumn":16},{"ruleId":"2231","severity":1,"message":"2756","line":1026,"column":71,"nodeType":"2219","messageId":"2233","endLine":1026,"endColumn":86},{"ruleId":"2231","severity":1,"message":"2732","line":1026,"column":88,"nodeType":"2219","messageId":"2233","endLine":1026,"endColumn":97},{"ruleId":"2228","severity":1,"message":"2229","line":1104,"column":5,"nodeType":"2230","messageId":"2212","endLine":1104,"endColumn":16},{"ruleId":"2234","severity":1,"message":"2757","line":1106,"column":5,"nodeType":"2338","messageId":"2758","endLine":1106,"endColumn":12},{"ruleId":"2217","severity":1,"message":"2406","line":1121,"column":11,"nodeType":"2219","messageId":"2220","endLine":1121,"endColumn":16},{"ruleId":"2231","severity":1,"message":"2756","line":1121,"column":71,"nodeType":"2219","messageId":"2233","endLine":1121,"endColumn":86},{"ruleId":"2231","severity":1,"message":"2732","line":1121,"column":88,"nodeType":"2219","messageId":"2233","endLine":1121,"endColumn":97},{"ruleId":"2234","severity":1,"message":"2759","line":1206,"column":5,"nodeType":"2338","messageId":"2758","endLine":1206,"endColumn":12},{"ruleId":"2234","severity":1,"message":"2760","line":1276,"column":5,"nodeType":"2338","messageId":"2758","endLine":1276,"endColumn":12},{"ruleId":"2217","severity":1,"message":"2406","line":1315,"column":11,"nodeType":"2219","messageId":"2220","endLine":1315,"endColumn":16},{"ruleId":"2231","severity":1,"message":"2756","line":1315,"column":71,"nodeType":"2219","messageId":"2233","endLine":1315,"endColumn":86},{"ruleId":"2231","severity":1,"message":"2732","line":1315,"column":88,"nodeType":"2219","messageId":"2233","endLine":1315,"endColumn":97},{"ruleId":"2234","severity":1,"message":"2761","line":1405,"column":5,"nodeType":"2338","messageId":"2758","endLine":1405,"endColumn":12},{"ruleId":"2261","severity":1,"message":"2762","line":1448,"column":18,"nodeType":"2219","messageId":"2263","endLine":1448,"endColumn":25},{"ruleId":"2261","severity":1,"message":"2763","line":1448,"column":41,"nodeType":"2219","messageId":"2263","endLine":1448,"endColumn":47},{"ruleId":"2261","severity":1,"message":"2764","line":1448,"column":70,"nodeType":"2219","messageId":"2263","endLine":1448,"endColumn":81},{"ruleId":"2228","severity":1,"message":"2229","line":1495,"column":5,"nodeType":"2230","messageId":"2212","endLine":1495,"endColumn":16},{"ruleId":"2261","severity":1,"message":"2762","line":1507,"column":18,"nodeType":"2219","messageId":"2263","endLine":1507,"endColumn":25},{"ruleId":"2261","severity":1,"message":"2763","line":1507,"column":41,"nodeType":"2219","messageId":"2263","endLine":1507,"endColumn":47},{"ruleId":"2261","severity":1,"message":"2764","line":1507,"column":70,"nodeType":"2219","messageId":"2263","endLine":1507,"endColumn":81},{"ruleId":"2228","severity":1,"message":"2229","line":1554,"column":5,"nodeType":"2230","messageId":"2212","endLine":1554,"endColumn":16},{"ruleId":"2261","severity":1,"message":"2762","line":1565,"column":18,"nodeType":"2219","messageId":"2263","endLine":1565,"endColumn":25},{"ruleId":"2261","severity":1,"message":"2763","line":1565,"column":41,"nodeType":"2219","messageId":"2263","endLine":1565,"endColumn":47},{"ruleId":"2261","severity":1,"message":"2764","line":1565,"column":70,"nodeType":"2219","messageId":"2263","endLine":1565,"endColumn":81},{"ruleId":"2228","severity":1,"message":"2229","line":1566,"column":3,"nodeType":"2230","messageId":"2212","endLine":1566,"endColumn":14},{"ruleId":"2228","severity":1,"message":"2229","line":1615,"column":5,"nodeType":"2230","messageId":"2212","endLine":1615,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":77,"column":3,"nodeType":"2230","messageId":"2212","endLine":77,"endColumn":14},{"ruleId":"2228","severity":1,"message":"2229","line":90,"column":5,"nodeType":"2230","messageId":"2212","endLine":90,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":103,"column":5,"nodeType":"2230","messageId":"2212","endLine":103,"endColumn":16},{"ruleId":"2434","severity":1,"message":"2513","line":5,"column":3,"nodeType":"2514","messageId":"2437","endLine":8,"endColumn":4},{"ruleId":"2217","severity":1,"message":"2340","line":1,"column":17,"nodeType":"2219","messageId":"2220","endLine":1,"endColumn":26},{"ruleId":"2221","severity":1,"message":"2765","line":2,"column":1,"nodeType":"2195","endLine":2,"endColumn":42,"fix":"2766"},{"ruleId":"2767","severity":1,"message":"2768","line":4,"column":1,"nodeType":null,"fix":"2769"},{"ruleId":"2261","severity":1,"message":"2770","line":8,"column":7,"nodeType":"2219","messageId":"2263","endLine":8,"endColumn":12,"fix":"2771"},{"ruleId":"2261","severity":1,"message":"2772","line":10,"column":7,"nodeType":"2219","messageId":"2263","endLine":10,"endColumn":13,"fix":"2773"},{"ruleId":"2217","severity":1,"message":"2401","line":12,"column":21,"nodeType":"2219","messageId":"2220","endLine":12,"endColumn":22},{"ruleId":"2323","severity":1,"message":"2774","line":12,"column":24,"nodeType":"2236","messageId":"2325","endLine":12,"endColumn":26},{"ruleId":"2438","severity":1,"message":"2439","line":15,"column":18,"nodeType":"2295","messageId":"2440","endLine":15,"endColumn":64,"fix":"2775"},{"ruleId":"2434","severity":1,"message":"2513","line":44,"column":3,"nodeType":"2514","messageId":"2437","endLine":47,"endColumn":4},{"ruleId":"2434","severity":1,"message":"2513","line":50,"column":3,"nodeType":"2514","messageId":"2437","endLine":62,"endColumn":4},{"ruleId":"2261","severity":1,"message":"2776","line":52,"column":11,"nodeType":"2219","messageId":"2263","endLine":52,"endColumn":21,"fix":"2777"},{"ruleId":"2231","severity":1,"message":"2778","line":67,"column":21,"nodeType":"2219","messageId":"2233","endLine":67,"endColumn":30},{"ruleId":"2779","severity":1,"message":"2780","line":104,"column":5,"nodeType":"2781","messageId":"2782","endLine":104,"endColumn":36},{"ruleId":"2231","severity":1,"message":"2778","line":121,"column":44,"nodeType":"2219","messageId":"2233","endLine":121,"endColumn":53},{"ruleId":"2434","severity":1,"message":"2513","line":123,"column":3,"nodeType":"2514","messageId":"2437","endLine":132,"endColumn":4},{"ruleId":"2779","severity":1,"message":"2780","line":129,"column":5,"nodeType":"2781","messageId":"2782","endLine":129,"endColumn":49},{"ruleId":"2434","severity":1,"message":"2513","line":141,"column":5,"nodeType":"2514","messageId":"2437","endLine":145,"endColumn":6},{"ruleId":"2234","severity":1,"message":"2317","line":154,"column":53,"nodeType":"2236","messageId":"2237","endLine":154,"endColumn":55},{"ruleId":"2530","severity":1,"message":"2531","line":155,"column":3,"nodeType":"2532","messageId":"2533","endLine":155,"endColumn":37,"fix":"2783"},{"ruleId":"2784","severity":1,"message":"2785","line":225,"column":3,"nodeType":"2532","messageId":"2786","endLine":225,"endColumn":35},{"ruleId":"2530","severity":1,"message":"2531","line":225,"column":3,"nodeType":"2532","messageId":"2533","endLine":225,"endColumn":35,"fix":"2787"},{"ruleId":"2228","severity":1,"message":"2229","line":226,"column":3,"nodeType":"2230","messageId":"2212","endLine":226,"endColumn":14},{"ruleId":"2231","severity":1,"message":"2788","line":9,"column":57,"nodeType":"2219","messageId":"2233","endLine":9,"endColumn":64},{"ruleId":"2641","severity":1,"message":"2642","line":19,"column":38,"nodeType":"2643","endLine":19,"endColumn":47},{"ruleId":"2261","severity":1,"message":"2789","line":25,"column":9,"nodeType":"2219","messageId":"2263","endLine":25,"endColumn":15,"fix":"2790"},{"ruleId":"2242","severity":1,"message":"2243","line":44,"column":15,"nodeType":"2244","messageId":"2245","endLine":46,"endColumn":24},{"ruleId":"2246","severity":1,"message":"2247","line":58,"column":22,"nodeType":"2219","messageId":"2248","endLine":58,"endColumn":25},{"ruleId":"2242","severity":1,"message":"2243","line":72,"column":15,"nodeType":"2244","messageId":"2245","endLine":74,"endColumn":24},{"ruleId":"2641","severity":1,"message":"2642","line":48,"column":17,"nodeType":"2643","endLine":48,"endColumn":26},{"ruleId":"2246","severity":1,"message":"2247","line":39,"column":21,"nodeType":"2219","messageId":"2248","endLine":39,"endColumn":26},{"ruleId":"2246","severity":1,"message":"2247","line":42,"column":27,"nodeType":"2219","messageId":"2248","endLine":42,"endColumn":30},{"ruleId":"2791","severity":1,"message":"2792","line":57,"column":8,"nodeType":"2254","messageId":"2212","endLine":57,"endColumn":12},{"ruleId":"2217","severity":1,"message":"2793","line":10,"column":38,"nodeType":"2219","messageId":"2220","endLine":10,"endColumn":50},{"ruleId":"2246","severity":1,"message":"2247","line":30,"column":19,"nodeType":"2219","messageId":"2248","endLine":30,"endColumn":24},{"ruleId":"2238","severity":1,"message":"2239","line":19,"column":5,"nodeType":"2240","messageId":"2241","endLine":19,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":20,"column":7,"nodeType":"2240","messageId":"2241","endLine":20,"endColumn":77},{"ruleId":"2238","severity":1,"message":"2239","line":21,"column":7,"nodeType":"2240","messageId":"2241","endLine":21,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":22,"column":9,"nodeType":"2240","messageId":"2241","endLine":22,"endColumn":39},{"ruleId":"2238","severity":1,"message":"2239","line":24,"column":7,"nodeType":"2240","messageId":"2241","endLine":24,"endColumn":61},{"ruleId":"2238","severity":1,"message":"2239","line":25,"column":7,"nodeType":"2240","messageId":"2241","endLine":25,"endColumn":39},{"ruleId":"2238","severity":1,"message":"2239","line":26,"column":7,"nodeType":"2240","messageId":"2241","endLine":26,"endColumn":51},{"ruleId":"2242","severity":1,"message":"2243","line":27,"column":9,"nodeType":"2244","messageId":"2245","endLine":29,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":27,"column":9,"nodeType":"2240","messageId":"2241","endLine":27,"endColumn":99},{"ruleId":"2527","severity":1,"message":"2528","line":8,"column":1,"nodeType":"2529","endLine":33,"endColumn":3},{"ruleId":"2238","severity":1,"message":"2239","line":8,"column":5,"nodeType":"2240","messageId":"2241","endLine":8,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":9,"column":7,"nodeType":"2240","messageId":"2241","endLine":9,"endColumn":47},{"ruleId":"2238","severity":1,"message":"2239","line":10,"column":9,"nodeType":"2240","messageId":"2241","endLine":10,"endColumn":43},{"ruleId":"2238","severity":1,"message":"2239","line":11,"column":11,"nodeType":"2240","messageId":"2241","endLine":11,"endColumn":111},{"ruleId":"2238","severity":1,"message":"2239","line":14,"column":9,"nodeType":"2240","messageId":"2241","endLine":14,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":15,"column":11,"nodeType":"2240","messageId":"2241","endLine":15,"endColumn":56},{"ruleId":"2238","severity":1,"message":"2239","line":16,"column":13,"nodeType":"2240","messageId":"2241","endLine":16,"endColumn":85},{"ruleId":"2238","severity":1,"message":"2239","line":17,"column":13,"nodeType":"2240","messageId":"2241","endLine":17,"endColumn":57},{"ruleId":"2238","severity":1,"message":"2239","line":18,"column":15,"nodeType":"2240","messageId":"2241","endLine":18,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":19,"column":15,"nodeType":"2240","messageId":"2241","endLine":19,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":22,"column":11,"nodeType":"2240","messageId":"2241","endLine":22,"endColumn":53},{"ruleId":"2238","severity":1,"message":"2239","line":23,"column":13,"nodeType":"2240","messageId":"2241","endLine":23,"endColumn":55},{"ruleId":"2238","severity":1,"message":"2239","line":24,"column":13,"nodeType":"2240","messageId":"2241","endLine":24,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":26,"column":17,"nodeType":"2240","messageId":"2241","endLine":26,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":27,"column":19,"nodeType":"2240","messageId":"2241","endLine":27,"endColumn":55},{"ruleId":"2238","severity":1,"message":"2239","line":28,"column":19,"nodeType":"2240","messageId":"2241","endLine":28,"endColumn":24},{"ruleId":"2238","severity":1,"message":"2239","line":29,"column":28,"nodeType":"2240","messageId":"2241","endLine":29,"endColumn":65},{"ruleId":"2342","severity":1,"message":"2794","line":29,"column":65,"nodeType":"2254","messageId":"2344"},{"ruleId":"2342","severity":1,"message":"2794","line":29,"column":73,"nodeType":"2254","messageId":"2344"},{"ruleId":"2238","severity":1,"message":"2239","line":31,"column":19,"nodeType":"2240","messageId":"2241","endLine":31,"endColumn":24},{"ruleId":"2221","severity":1,"message":"2795","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":54,"fix":"2796"},{"ruleId":"2221","severity":1,"message":"2797","line":8,"column":1,"nodeType":"2195","endLine":8,"endColumn":47,"fix":"2798"},{"ruleId":"2238","severity":1,"message":"2239","line":43,"column":5,"nodeType":"2240","messageId":"2241","endLine":43,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":44,"column":7,"nodeType":"2240","messageId":"2241","endLine":44,"endColumn":77},{"ruleId":"2238","severity":1,"message":"2239","line":45,"column":7,"nodeType":"2240","messageId":"2241","endLine":45,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":46,"column":9,"nodeType":"2240","messageId":"2241","endLine":46,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":48,"column":7,"nodeType":"2240","messageId":"2241","endLine":48,"endColumn":63},{"ruleId":"2238","severity":1,"message":"2239","line":49,"column":7,"nodeType":"2240","messageId":"2241","endLine":49,"endColumn":51},{"ruleId":"2242","severity":1,"message":"2243","line":50,"column":9,"nodeType":"2244","messageId":"2245","endLine":57,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":50,"column":9,"nodeType":"2240","messageId":"2241","endLine":55,"endColumn":10},{"ruleId":"2242","severity":1,"message":"2243","line":58,"column":9,"nodeType":"2244","messageId":"2245","endLine":66,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":58,"column":9,"nodeType":"2240","messageId":"2241","endLine":58,"endColumn":66},{"ruleId":"2238","severity":1,"message":"2239","line":59,"column":11,"nodeType":"2240","messageId":"2241","endLine":59,"endColumn":58},{"ruleId":"2238","severity":1,"message":"2239","line":62,"column":11,"nodeType":"2240","messageId":"2241","endLine":62,"endColumn":50},{"ruleId":"2238","severity":1,"message":"2239","line":63,"column":13,"nodeType":"2240","messageId":"2241","endLine":63,"endColumn":48},{"ruleId":"2238","severity":1,"message":"2239","line":64,"column":13,"nodeType":"2240","messageId":"2241","endLine":64,"endColumn":47},{"ruleId":"2238","severity":1,"message":"2239","line":68,"column":7,"nodeType":"2240","messageId":"2241","endLine":68,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":69,"column":9,"nodeType":"2240","messageId":"2241","endLine":69,"endColumn":38},{"ruleId":"2238","severity":1,"message":"2239","line":70,"column":9,"nodeType":"2240","messageId":"2241","endLine":70,"endColumn":38},{"ruleId":"2242","severity":1,"message":"2243","line":71,"column":9,"nodeType":"2244","messageId":"2245","endLine":73,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":71,"column":9,"nodeType":"2240","messageId":"2241","endLine":71,"endColumn":120},{"ruleId":"2238","severity":1,"message":"2239","line":74,"column":9,"nodeType":"2240","messageId":"2241","endLine":74,"endColumn":96},{"ruleId":"2217","severity":1,"message":"2799","line":6,"column":8,"nodeType":"2219","messageId":"2220","endLine":6,"endColumn":12},{"ruleId":"2217","severity":1,"message":"2800","line":17,"column":11,"nodeType":"2219","messageId":"2220","endLine":17,"endColumn":18},{"ruleId":"2246","severity":1,"message":"2247","line":19,"column":16,"nodeType":"2219","messageId":"2248","endLine":19,"endColumn":17},{"ruleId":"2801","severity":1,"message":"2802","line":2,"column":1,"nodeType":"2195","endLine":2,"endColumn":36},{"ruleId":"2664","severity":1,"message":"2665","line":11,"column":5,"nodeType":"2666","messageId":"2667","endLine":11,"endColumn":29,"fix":"2803"},{"ruleId":"2664","severity":1,"message":"2665","line":15,"column":5,"nodeType":"2666","messageId":"2667","endLine":15,"endColumn":43,"fix":"2804"},{"ruleId":"2805","severity":1,"message":"2806","line":27,"column":3,"nodeType":"2666","messageId":"2807","endLine":27,"endColumn":30},{"ruleId":"2805","severity":1,"message":"2808","line":28,"column":3,"nodeType":"2666","messageId":"2807","endLine":28,"endColumn":37},{"ruleId":"2527","severity":1,"message":"2528","line":1,"column":1,"nodeType":"2529","endLine":26,"endColumn":3},{"ruleId":"2434","severity":1,"message":"2513","line":15,"column":3,"nodeType":"2514","messageId":"2437","endLine":25,"endColumn":4},{"ruleId":"2779","severity":1,"message":"2780","line":16,"column":19,"nodeType":"2781","messageId":"2782","endLine":22,"endColumn":7},{"ruleId":"2231","severity":1,"message":"2809","line":17,"column":13,"nodeType":"2219","messageId":"2233","endLine":17,"endColumn":18},{"ruleId":"2480","severity":1,"message":"2481","line":24,"column":5,"nodeType":"2482","messageId":"2483","endLine":24,"endColumn":56},{"ruleId":"2231","severity":1,"message":"2810","line":38,"column":15,"nodeType":"2219","messageId":"2233","endLine":38,"endColumn":20},{"ruleId":"2231","severity":1,"message":"2811","line":42,"column":11,"nodeType":"2219","messageId":"2233","endLine":42,"endColumn":20},{"ruleId":"2246","severity":1,"message":"2247","line":54,"column":21,"nodeType":"2219","messageId":"2248","endLine":54,"endColumn":23},{"ruleId":"2252","severity":1,"message":"2812","line":4,"column":26,"nodeType":"2254","endLine":4,"endColumn":57},{"ruleId":"2252","severity":1,"message":"2812","line":5,"column":22,"nodeType":"2254","endLine":5,"endColumn":53},{"ruleId":"2231","severity":1,"message":"2813","line":28,"column":13,"nodeType":"2219","messageId":"2233","endLine":28,"endColumn":17},{"ruleId":"2231","severity":1,"message":"2814","line":31,"column":33,"nodeType":"2219","messageId":"2233","endLine":31,"endColumn":37},{"ruleId":"2231","severity":1,"message":"2814","line":35,"column":35,"nodeType":"2219","messageId":"2233","endLine":35,"endColumn":39},{"ruleId":"2261","severity":1,"message":"2815","line":46,"column":9,"nodeType":"2219","messageId":"2263","endLine":46,"endColumn":12,"fix":"2816"},{"ruleId":"2261","severity":1,"message":"2817","line":47,"column":9,"nodeType":"2219","messageId":"2263","endLine":47,"endColumn":13,"fix":"2818"},{"ruleId":"2261","severity":1,"message":"2819","line":48,"column":9,"nodeType":"2219","messageId":"2263","endLine":48,"endColumn":13,"fix":"2820"},{"ruleId":"2438","severity":1,"message":"2439","line":49,"column":29,"nodeType":"2295","messageId":"2440","endLine":49,"endColumn":67,"fix":"2821"},{"ruleId":"2384","severity":1,"message":"2385","line":50,"column":10,"nodeType":"2386","messageId":"2212","endLine":53,"endColumn":47,"fix":"2822"},{"ruleId":"2438","severity":1,"message":"2439","line":50,"column":31,"nodeType":"2295","messageId":"2440","endLine":50,"endColumn":65,"fix":"2823"},{"ruleId":"2438","severity":1,"message":"2439","line":51,"column":32,"nodeType":"2295","messageId":"2440","endLine":51,"endColumn":60,"fix":"2824"},{"ruleId":"2438","severity":1,"message":"2439","line":52,"column":33,"nodeType":"2295","messageId":"2440","endLine":52,"endColumn":68,"fix":"2825"},{"ruleId":"2438","severity":1,"message":"2439","line":53,"column":17,"nodeType":"2295","messageId":"2440","endLine":53,"endColumn":46,"fix":"2826"},{"ruleId":"2231","severity":1,"message":"2827","line":57,"column":9,"nodeType":"2219","messageId":"2233","endLine":57,"endColumn":13},{"ruleId":"2364","severity":1,"message":"2495","line":60,"column":9,"nodeType":"2496","messageId":"2367","endLine":60,"endColumn":24},{"ruleId":"2364","severity":1,"message":"2495","line":63,"column":9,"nodeType":"2496","messageId":"2367","endLine":63,"endColumn":24},{"ruleId":"2364","severity":1,"message":"2495","line":66,"column":9,"nodeType":"2496","messageId":"2367","endLine":66,"endColumn":24},{"ruleId":"2364","severity":1,"message":"2495","line":69,"column":9,"nodeType":"2496","messageId":"2367","endLine":69,"endColumn":24},{"ruleId":"2388","severity":1,"message":"2389","line":123,"column":14,"nodeType":"2390","messageId":"2391","endLine":123,"endColumn":45,"fix":"2828"},{"ruleId":"2388","severity":1,"message":"2389","line":124,"column":14,"nodeType":"2390","messageId":"2391","endLine":124,"endColumn":51,"fix":"2829"},{"ruleId":"2221","severity":1,"message":"2830","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":47,"fix":"2831"},{"ruleId":"2231","severity":1,"message":"2832","line":21,"column":15,"nodeType":"2219","messageId":"2233","endLine":21,"endColumn":20},{"ruleId":"2364","severity":1,"message":"2365","line":62,"column":11,"nodeType":"2366","messageId":"2367","endLine":62,"endColumn":35,"fix":"2833"},{"ruleId":"2231","severity":1,"message":"2834","line":63,"column":11,"nodeType":"2219","messageId":"2233","endLine":63,"endColumn":30},{"ruleId":"2238","severity":1,"message":"2239","line":71,"column":5,"nodeType":"2240","messageId":"2241","endLine":71,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":72,"column":7,"nodeType":"2240","messageId":"2241","endLine":72,"endColumn":69},{"ruleId":"2238","severity":1,"message":"2239","line":73,"column":9,"nodeType":"2240","messageId":"2241","endLine":73,"endColumn":87},{"ruleId":"2238","severity":1,"message":"2239","line":77,"column":11,"nodeType":"2835","messageId":"2241","endLine":77,"endColumn":13},{"ruleId":"2242","severity":1,"message":"2243","line":78,"column":13,"nodeType":"2244","messageId":"2245","endLine":83,"endColumn":22},{"ruleId":"2238","severity":1,"message":"2239","line":78,"column":13,"nodeType":"2240","messageId":"2241","endLine":81,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":82,"column":15,"nodeType":"2240","messageId":"2241","endLine":82,"endColumn":44},{"ruleId":"2242","severity":1,"message":"2243","line":84,"column":13,"nodeType":"2244","messageId":"2245","endLine":89,"endColumn":22},{"ruleId":"2238","severity":1,"message":"2239","line":84,"column":13,"nodeType":"2240","messageId":"2241","endLine":87,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":88,"column":15,"nodeType":"2240","messageId":"2241","endLine":88,"endColumn":45},{"ruleId":"2221","severity":1,"message":"2836","line":3,"column":1,"nodeType":"2195","endLine":3,"endColumn":55,"fix":"2837"},{"ruleId":"2767","severity":1,"message":"2768","line":6,"column":1,"nodeType":null,"fix":"2838"},{"ruleId":"2293","severity":1,"message":"2294","line":79,"column":42,"nodeType":"2295","messageId":"2212","endLine":79,"endColumn":44},{"ruleId":"2839","severity":1,"message":"2840","line":89,"column":21,"nodeType":"2240","messageId":"2841","endLine":89,"endColumn":81,"fix":"2842"},{"ruleId":"2438","severity":1,"message":"2439","line":89,"column":30,"nodeType":"2295","messageId":"2440","endLine":89,"endColumn":63,"fix":"2843"},{"ruleId":"2839","severity":1,"message":"2840","line":123,"column":21,"nodeType":"2240","messageId":"2841","endLine":123,"endColumn":86,"fix":"2844"},{"ruleId":"2438","severity":1,"message":"2439","line":123,"column":30,"nodeType":"2295","messageId":"2440","endLine":123,"endColumn":68,"fix":"2845"},{"ruleId":"2839","severity":1,"message":"2840","line":153,"column":21,"nodeType":"2240","messageId":"2841","endLine":153,"endColumn":84,"fix":"2846"},{"ruleId":"2438","severity":1,"message":"2439","line":153,"column":30,"nodeType":"2295","messageId":"2440","endLine":153,"endColumn":66,"fix":"2847"},{"ruleId":"2228","severity":1,"message":"2229","line":41,"column":5,"nodeType":"2230","messageId":"2212","endLine":41,"endColumn":16},{"ruleId":"2228","severity":1,"message":"2229","line":53,"column":5,"nodeType":"2230","messageId":"2212","endLine":53,"endColumn":16},{"ruleId":"2641","severity":1,"message":"2642","line":134,"column":24,"nodeType":"2643","endLine":134,"endColumn":33},{"ruleId":"2641","severity":1,"message":"2642","line":151,"column":19,"nodeType":"2643","endLine":151,"endColumn":28},{"ruleId":"2261","severity":1,"message":"2848","line":14,"column":9,"nodeType":"2219","messageId":"2263","endLine":14,"endColumn":19,"fix":"2849"},{"ruleId":"2276","severity":1,"message":"2850","line":21,"column":29,"nodeType":"2254","messageId":"2278","endLine":21,"endColumn":40,"fix":"2851"},{"ruleId":"2276","severity":1,"message":"2852","line":25,"column":33,"nodeType":"2254","messageId":"2278","endLine":25,"endColumn":39,"fix":"2853"},{"ruleId":"2276","severity":1,"message":"2854","line":30,"column":50,"nodeType":"2254","messageId":"2278","endLine":30,"endColumn":56,"fix":"2855"},{"ruleId":"2217","severity":1,"message":"2856","line":7,"column":8,"nodeType":"2219","messageId":"2220","endLine":7,"endColumn":11},{"ruleId":"2217","severity":1,"message":"2857","line":8,"column":8,"nodeType":"2219","messageId":"2220","endLine":8,"endColumn":12},{"ruleId":"2231","severity":1,"message":"2858","line":29,"column":15,"nodeType":"2219","messageId":"2233","endLine":29,"endColumn":20},{"ruleId":"2231","severity":1,"message":"2859","line":37,"column":11,"nodeType":"2219","messageId":"2233","endLine":37,"endColumn":20},{"ruleId":"2535","severity":1,"message":"2536","line":86,"column":21,"nodeType":"2320","messageId":"2537","endLine":86,"endColumn":30},{"ruleId":"2228","severity":1,"message":"2229","line":91,"column":23,"nodeType":"2230","messageId":"2212","endLine":91,"endColumn":34},{"ruleId":"2456","severity":1,"message":"2457","line":111,"column":15,"nodeType":"2240","endLine":111,"endColumn":80},{"ruleId":"2434","severity":1,"message":"2513","line":12,"column":7,"nodeType":"2514","messageId":"2437","endLine":21,"endColumn":8},{"ruleId":"2246","severity":1,"message":"2247","line":36,"column":21,"nodeType":"2219","messageId":"2248","endLine":36,"endColumn":24},{"ruleId":"2217","severity":1,"message":"2860","line":9,"column":9,"nodeType":"2219","messageId":"2220","endLine":9,"endColumn":23},{"ruleId":"2198","severity":1,"message":"2861","line":12,"column":20,"nodeType":"2540","messageId":"2212","endLine":12,"endColumn":63},{"ruleId":"2276","severity":1,"message":"2277","line":15,"column":64,"nodeType":"2254","messageId":"2278","endLine":15,"endColumn":73,"fix":"2862"},{"ruleId":"2276","severity":1,"message":"2277","line":15,"column":100,"nodeType":"2254","messageId":"2278","endLine":15,"endColumn":109,"fix":"2863"},{"ruleId":"2342","severity":1,"message":"2343","line":90,"column":17,"nodeType":"2254","messageId":"2344"},{"ruleId":"2246","severity":1,"message":"2247","line":97,"column":51,"nodeType":"2219","messageId":"2248","endLine":97,"endColumn":54},{"ruleId":"2246","severity":1,"message":"2247","line":103,"column":68,"nodeType":"2219","messageId":"2248","endLine":103,"endColumn":71},{"ruleId":"2221","severity":1,"message":"2864","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":75,"fix":"2865"},{"ruleId":"2217","severity":1,"message":"2866","line":10,"column":9,"nodeType":"2219","messageId":"2220","endLine":10,"endColumn":17},{"ruleId":"2231","severity":1,"message":"2867","line":21,"column":15,"nodeType":"2219","messageId":"2233","endLine":21,"endColumn":20},{"ruleId":"2231","severity":1,"message":"2868","line":30,"column":11,"nodeType":"2219","messageId":"2233","endLine":30,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":35,"column":5,"nodeType":"2240","messageId":"2241","endLine":35,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":36,"column":7,"nodeType":"2240","messageId":"2241","endLine":36,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":37,"column":9,"nodeType":"2240","messageId":"2241","endLine":37,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":38,"column":11,"nodeType":"2240","messageId":"2241","endLine":38,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":39,"column":11,"nodeType":"2240","messageId":"2241","endLine":39,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":43,"column":9,"nodeType":"2240","messageId":"2241","endLine":43,"endColumn":62},{"ruleId":"2238","severity":1,"message":"2239","line":45,"column":13,"nodeType":"2240","messageId":"2241","endLine":51,"endColumn":14},{"ruleId":"2246","severity":1,"message":"2247","line":48,"column":20,"nodeType":"2219","messageId":"2248","endLine":48,"endColumn":23},{"ruleId":"2238","severity":1,"message":"2239","line":52,"column":15,"nodeType":"2240","messageId":"2241","endLine":52,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":53,"column":15,"nodeType":"2240","messageId":"2241","endLine":53,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":55,"column":17,"nodeType":"2240","messageId":"2241","endLine":55,"endColumn":78},{"ruleId":"2252","severity":1,"message":"2253","line":1,"column":19,"nodeType":"2254","endLine":1,"endColumn":26,"fix":"2869"},{"ruleId":"2252","severity":1,"message":"2253","line":2,"column":45,"nodeType":"2254","endLine":2,"endColumn":52},{"ruleId":"2364","severity":1,"message":"2365","line":24,"column":11,"nodeType":"2366","messageId":"2367","endLine":24,"endColumn":68,"fix":"2870"},{"ruleId":"2326","severity":1,"message":"2327","line":59,"column":13,"nodeType":"2240","messageId":"2328","endLine":59,"endColumn":67,"fix":"2871"},{"ruleId":"2326","severity":1,"message":"2327","line":60,"column":13,"nodeType":"2240","messageId":"2328","endLine":60,"endColumn":67,"fix":"2872"},{"ruleId":"2326","severity":1,"message":"2327","line":61,"column":13,"nodeType":"2240","messageId":"2328","endLine":61,"endColumn":67,"fix":"2873"},{"ruleId":"2217","severity":1,"message":"2874","line":10,"column":8,"nodeType":"2219","messageId":"2220","endLine":10,"endColumn":18},{"ruleId":"2272","severity":1,"message":"2875","line":36,"column":16,"nodeType":"2274","messageId":"2876","endLine":38,"endColumn":89},{"ruleId":"2246","severity":1,"message":"2247","line":38,"column":64,"nodeType":"2219","messageId":"2248","endLine":38,"endColumn":67},{"ruleId":"2272","severity":1,"message":"2875","line":39,"column":16,"nodeType":"2274","messageId":"2876","endLine":41,"endColumn":94},{"ruleId":"2246","severity":1,"message":"2247","line":41,"column":64,"nodeType":"2295","messageId":"2248","endLine":41,"endColumn":72},{"ruleId":"2272","severity":1,"message":"2875","line":42,"column":16,"nodeType":"2274","messageId":"2876","endLine":44,"endColumn":94},{"ruleId":"2246","severity":1,"message":"2247","line":44,"column":64,"nodeType":"2295","messageId":"2248","endLine":44,"endColumn":72},{"ruleId":"2272","severity":1,"message":"2875","line":45,"column":16,"nodeType":"2274","messageId":"2876","endLine":47,"endColumn":94},{"ruleId":"2246","severity":1,"message":"2247","line":47,"column":64,"nodeType":"2295","messageId":"2248","endLine":47,"endColumn":72},{"ruleId":"2246","severity":1,"message":"2247","line":55,"column":23,"nodeType":"2219","messageId":"2248","endLine":55,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2645","line":3,"column":1,"nodeType":"2195","endLine":3,"endColumn":40},{"ruleId":"2877","severity":1,"message":"2878","line":8,"column":36,"nodeType":"2254","messageId":"2879","endLine":8,"endColumn":37,"suggestions":"2880"},{"ruleId":"2877","severity":1,"message":"2878","line":9,"column":29,"nodeType":"2254","messageId":"2879","endLine":9,"endColumn":30,"suggestions":"2881"},{"ruleId":"2877","severity":1,"message":"2878","line":9,"column":45,"nodeType":"2254","messageId":"2879","endLine":9,"endColumn":46,"suggestions":"2882"},{"ruleId":"2210","severity":1,"message":"2883","line":15,"column":5,"nodeType":"2208","messageId":"2212","endLine":15,"endColumn":12},{"ruleId":"2261","severity":1,"message":"2884","line":43,"column":7,"nodeType":"2219","messageId":"2263","endLine":43,"endColumn":12,"fix":"2885"},{"ruleId":"2261","severity":1,"message":"2886","line":44,"column":7,"nodeType":"2219","messageId":"2263","endLine":44,"endColumn":11,"fix":"2887"},{"ruleId":"2261","severity":1,"message":"2888","line":50,"column":7,"nodeType":"2219","messageId":"2263","endLine":50,"endColumn":14,"fix":"2889"},{"ruleId":"2261","severity":1,"message":"2890","line":83,"column":9,"nodeType":"2219","messageId":"2263","endLine":83,"endColumn":13},{"ruleId":"2364","severity":1,"message":"2495","line":85,"column":5,"nodeType":"2496","messageId":"2367","endLine":85,"endColumn":51},{"ruleId":"2364","severity":1,"message":"2495","line":87,"column":5,"nodeType":"2496","messageId":"2367","endLine":87,"endColumn":57},{"ruleId":"2217","severity":1,"message":"2874","line":10,"column":8,"nodeType":"2219","messageId":"2220","endLine":10,"endColumn":18},{"ruleId":"2272","severity":1,"message":"2875","line":41,"column":16,"nodeType":"2274","messageId":"2876","endLine":43,"endColumn":111},{"ruleId":"2246","severity":1,"message":"2247","line":43,"column":79,"nodeType":"2219","messageId":"2248","endLine":43,"endColumn":82},{"ruleId":"2272","severity":1,"message":"2875","line":44,"column":16,"nodeType":"2274","messageId":"2876","endLine":46,"endColumn":116},{"ruleId":"2246","severity":1,"message":"2247","line":46,"column":79,"nodeType":"2295","messageId":"2248","endLine":46,"endColumn":87},{"ruleId":"2272","severity":1,"message":"2875","line":47,"column":16,"nodeType":"2274","messageId":"2876","endLine":49,"endColumn":116},{"ruleId":"2246","severity":1,"message":"2247","line":49,"column":79,"nodeType":"2295","messageId":"2248","endLine":49,"endColumn":87},{"ruleId":"2272","severity":1,"message":"2875","line":50,"column":16,"nodeType":"2274","messageId":"2876","endLine":52,"endColumn":116},{"ruleId":"2246","severity":1,"message":"2247","line":52,"column":79,"nodeType":"2295","messageId":"2248","endLine":52,"endColumn":87},{"ruleId":"2246","severity":1,"message":"2247","line":60,"column":23,"nodeType":"2219","messageId":"2248","endLine":60,"endColumn":26},{"ruleId":"2217","severity":1,"message":"2304","line":2,"column":10,"nodeType":"2219","messageId":"2220","endLine":2,"endColumn":14},{"ruleId":"2217","severity":1,"message":"2891","line":2,"column":16,"nodeType":"2219","messageId":"2220","endLine":2,"endColumn":26},{"ruleId":"2217","severity":1,"message":"2892","line":2,"column":28,"nodeType":"2219","messageId":"2220","endLine":2,"endColumn":41},{"ruleId":"2231","severity":1,"message":"2867","line":21,"column":15,"nodeType":"2219","messageId":"2233","endLine":21,"endColumn":20},{"ruleId":"2364","severity":1,"message":"2365","line":25,"column":11,"nodeType":"2366","messageId":"2367","endLine":25,"endColumn":34,"fix":"2893"},{"ruleId":"2228","severity":1,"message":"2229","line":28,"column":7,"nodeType":"2230","messageId":"2212","endLine":28,"endColumn":18},{"ruleId":"2228","severity":1,"message":"2229","line":32,"column":7,"nodeType":"2230","messageId":"2212","endLine":32,"endColumn":18},{"ruleId":"2430","severity":1,"message":"2894","line":34,"column":7,"nodeType":"2219","messageId":"2432","endLine":34,"endColumn":17},{"ruleId":"2430","severity":1,"message":"2894","line":36,"column":7,"nodeType":"2219","messageId":"2432","endLine":36,"endColumn":17},{"ruleId":"2261","severity":1,"message":"2895","line":44,"column":9,"nodeType":"2219","messageId":"2263","endLine":44,"endColumn":23,"fix":"2896"},{"ruleId":"2261","severity":1,"message":"2897","line":50,"column":9,"nodeType":"2219","messageId":"2263","endLine":50,"endColumn":14,"fix":"2898"},{"ruleId":"2530","severity":1,"message":"2531","line":54,"column":7,"nodeType":"2532","messageId":"2533","endLine":54,"endColumn":23,"fix":"2899"},{"ruleId":"2530","severity":1,"message":"2531","line":55,"column":7,"nodeType":"2532","messageId":"2533","endLine":55,"endColumn":35,"fix":"2900"},{"ruleId":"2530","severity":1,"message":"2531","line":56,"column":7,"nodeType":"2532","messageId":"2533","endLine":56,"endColumn":30,"fix":"2901"},{"ruleId":"2784","severity":1,"message":"2785","line":62,"column":7,"nodeType":"2532","messageId":"2786","endLine":62,"endColumn":40},{"ruleId":"2530","severity":1,"message":"2531","line":62,"column":7,"nodeType":"2532","messageId":"2533","endLine":62,"endColumn":40,"fix":"2902"},{"ruleId":"2293","severity":1,"message":"2294","line":63,"column":24,"nodeType":"2295","messageId":"2212","endLine":63,"endColumn":26},{"ruleId":"2276","severity":1,"message":"2903","line":64,"column":11,"nodeType":"2254","messageId":"2278","endLine":64,"endColumn":23,"fix":"2904"},{"ruleId":"2276","severity":1,"message":"2903","line":66,"column":11,"nodeType":"2254","messageId":"2278","endLine":66,"endColumn":23,"fix":"2905"},{"ruleId":"2430","severity":1,"message":"2906","line":66,"column":43,"nodeType":"2219","messageId":"2432","endLine":66,"endColumn":55},{"ruleId":"2276","severity":1,"message":"2903","line":76,"column":9,"nodeType":"2254","messageId":"2278","endLine":76,"endColumn":21,"fix":"2907"},{"ruleId":"2430","severity":1,"message":"2908","line":80,"column":16,"nodeType":"2219","messageId":"2432","endLine":80,"endColumn":23},{"ruleId":"2269","severity":1,"message":"2909","line":87,"column":5,"nodeType":"2219","messageId":"2271","endLine":87,"endColumn":7},{"ruleId":"2269","severity":1,"message":"2910","line":88,"column":5,"nodeType":"2219","messageId":"2271","endLine":88,"endColumn":7},{"ruleId":"2784","severity":1,"message":"2785","line":90,"column":5,"nodeType":"2532","messageId":"2786","endLine":90,"endColumn":29},{"ruleId":"2530","severity":1,"message":"2531","line":90,"column":5,"nodeType":"2532","messageId":"2533","endLine":90,"endColumn":29,"fix":"2911"},{"ruleId":"2912","severity":1,"message":"2913","line":90,"column":17,"nodeType":"2914","messageId":"2915","endLine":90,"endColumn":28},{"ruleId":"2784","severity":1,"message":"2785","line":91,"column":10,"nodeType":"2532","messageId":"2786","endLine":91,"endColumn":19},{"ruleId":"2530","severity":1,"message":"2531","line":91,"column":10,"nodeType":"2532","messageId":"2533","endLine":91,"endColumn":19,"fix":"2916"},{"ruleId":"2564","severity":1,"message":"2565","line":91,"column":37,"nodeType":"2566","messageId":"2567","endLine":91,"endColumn":40},{"ruleId":"2784","severity":1,"message":"2785","line":92,"column":7,"nodeType":"2532","messageId":"2786","endLine":92,"endColumn":25},{"ruleId":"2530","severity":1,"message":"2531","line":92,"column":7,"nodeType":"2532","messageId":"2533","endLine":92,"endColumn":25,"fix":"2917"},{"ruleId":"2784","severity":1,"message":"2785","line":93,"column":12,"nodeType":"2532","messageId":"2786","endLine":93,"endColumn":21},{"ruleId":"2530","severity":1,"message":"2531","line":93,"column":12,"nodeType":"2532","messageId":"2533","endLine":93,"endColumn":21,"fix":"2918"},{"ruleId":"2564","severity":1,"message":"2565","line":93,"column":39,"nodeType":"2566","messageId":"2567","endLine":93,"endColumn":42},{"ruleId":"2293","severity":1,"message":"2294","line":94,"column":15,"nodeType":"2295","messageId":"2212","endLine":94,"endColumn":17},{"ruleId":"2919","severity":1,"message":"2920","line":96,"column":11,"nodeType":"2386","messageId":"2921","endLine":101,"endColumn":12,"fix":"2922"},{"ruleId":"2784","severity":1,"message":"2785","line":97,"column":13,"nodeType":"2532","messageId":"2786","endLine":97,"endColumn":41},{"ruleId":"2530","severity":1,"message":"2531","line":97,"column":13,"nodeType":"2532","messageId":"2533","endLine":97,"endColumn":41,"fix":"2923"},{"ruleId":"2293","severity":1,"message":"2296","line":98,"column":34,"nodeType":"2295","messageId":"2212","endLine":98,"endColumn":36},{"ruleId":"2246","severity":1,"message":"2247","line":123,"column":21,"nodeType":"2219","messageId":"2248","endLine":123,"endColumn":23},{"ruleId":"2252","severity":1,"message":"2924","line":8,"column":47,"nodeType":"2254","endLine":8,"endColumn":83,"fix":"2925"},{"ruleId":"2252","severity":1,"message":"2924","line":9,"column":48,"nodeType":"2254","endLine":9,"endColumn":84},{"ruleId":"2231","severity":1,"message":"2926","line":46,"column":15,"nodeType":"2219","messageId":"2233","endLine":46,"endColumn":20},{"ruleId":"2231","severity":1,"message":"2927","line":21,"column":15,"nodeType":"2219","messageId":"2233","endLine":21,"endColumn":20},{"ruleId":"2238","severity":1,"message":"2239","line":44,"column":5,"nodeType":"2240","messageId":"2241","endLine":44,"endColumn":79},{"ruleId":"2238","severity":1,"message":"2239","line":45,"column":7,"nodeType":"2240","messageId":"2241","endLine":45,"endColumn":73},{"ruleId":"2238","severity":1,"message":"2239","line":46,"column":9,"nodeType":"2240","messageId":"2241","endLine":46,"endColumn":76},{"ruleId":"2238","severity":1,"message":"2239","line":48,"column":7,"nodeType":"2240","messageId":"2241","endLine":48,"endColumn":78},{"ruleId":"2357","severity":1,"message":"2358","line":49,"column":9,"nodeType":"2240","endLine":53,"endColumn":10},{"ruleId":"2357","severity":1,"message":"2359","line":49,"column":9,"nodeType":"2240","endLine":53,"endColumn":10},{"ruleId":"2238","severity":1,"message":"2239","line":49,"column":9,"nodeType":"2240","messageId":"2241","endLine":53,"endColumn":10},{"ruleId":"2238","severity":1,"message":"2239","line":55,"column":13,"nodeType":"2240","messageId":"2241","endLine":55,"endColumn":54},{"ruleId":"2238","severity":1,"message":"2239","line":56,"column":15,"nodeType":"2240","messageId":"2241","endLine":62,"endColumn":17},{"ruleId":"2641","severity":1,"message":"2642","line":59,"column":17,"nodeType":"2643","endLine":59,"endColumn":26},{"ruleId":"2238","severity":1,"message":"2239","line":63,"column":15,"nodeType":"2240","messageId":"2241","endLine":63,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":72,"column":11,"nodeType":"2240","messageId":"2241","endLine":72,"endColumn":48},{"ruleId":"2238","severity":1,"message":"2239","line":75,"column":17,"nodeType":"2240","messageId":"2241","endLine":75,"endColumn":98},{"ruleId":"2246","severity":1,"message":"2247","line":75,"column":62,"nodeType":"2219","messageId":"2248","endLine":75,"endColumn":65},{"ruleId":"2238","severity":1,"message":"2239","line":76,"column":19,"nodeType":"2240","messageId":"2241","endLine":76,"endColumn":74},{"ruleId":"2238","severity":1,"message":"2239","line":77,"column":19,"nodeType":"2240","messageId":"2241","endLine":77,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":78,"column":21,"nodeType":"2240","messageId":"2241","endLine":78,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":79,"column":21,"nodeType":"2240","messageId":"2241","endLine":79,"endColumn":58},{"ruleId":"2238","severity":1,"message":"2239","line":80,"column":21,"nodeType":"2240","messageId":"2241","endLine":80,"endColumn":53},{"ruleId":"2238","severity":1,"message":"2239","line":82,"column":19,"nodeType":"2240","messageId":"2241","endLine":82,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":83,"column":19,"nodeType":"2240","messageId":"2241","endLine":83,"endColumn":95},{"ruleId":"2238","severity":1,"message":"2239","line":87,"column":15,"nodeType":"2240","messageId":"2241","endLine":87,"endColumn":20},{"ruleId":"2246","severity":1,"message":"2247","line":16,"column":18,"nodeType":"2219","messageId":"2248","endLine":16,"endColumn":21},{"ruleId":"2252","severity":1,"message":"2253","line":1,"column":44,"nodeType":"2254","endLine":1,"endColumn":51,"fix":"2928"},{"ruleId":"2221","severity":1,"message":"2929","line":11,"column":1,"nodeType":"2195","endLine":11,"endColumn":36,"fix":"2930"},{"ruleId":"2252","severity":1,"message":"2253","line":11,"column":28,"nodeType":"2254","endLine":11,"endColumn":35},{"ruleId":"2480","severity":1,"message":"2481","line":74,"column":19,"nodeType":"2482","messageId":"2483","endLine":74,"endColumn":72},{"ruleId":"2238","severity":1,"message":"2239","line":6,"column":5,"nodeType":"2240","messageId":"2241","endLine":6,"endColumn":39},{"ruleId":"2238","severity":1,"message":"2239","line":7,"column":7,"nodeType":"2240","messageId":"2241","endLine":7,"endColumn":65},{"ruleId":"2238","severity":1,"message":"2239","line":10,"column":7,"nodeType":"2240","messageId":"2241","endLine":10,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":13,"column":7,"nodeType":"2240","messageId":"2241","endLine":13,"endColumn":65},{"ruleId":"2238","severity":1,"message":"2239","line":16,"column":7,"nodeType":"2240","messageId":"2241","endLine":16,"endColumn":65},{"ruleId":"2238","severity":1,"message":"2239","line":19,"column":7,"nodeType":"2240","messageId":"2241","endLine":24,"endColumn":9},{"ruleId":"2238","severity":1,"message":"2239","line":14,"column":5,"nodeType":"2240","messageId":"2241","endLine":14,"endColumn":117},{"ruleId":"2238","severity":1,"message":"2239","line":15,"column":7,"nodeType":"2240","messageId":"2241","endLine":15,"endColumn":59},{"ruleId":"2238","severity":1,"message":"2239","line":16,"column":7,"nodeType":"2240","messageId":"2241","endLine":16,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":17,"column":9,"nodeType":"2240","messageId":"2241","endLine":17,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":18,"column":11,"nodeType":"2240","messageId":"2241","endLine":21,"endColumn":13},{"ruleId":"2238","severity":1,"message":"2239","line":23,"column":9,"nodeType":"2240","messageId":"2241","endLine":37,"endColumn":11},{"ruleId":"2238","severity":1,"message":"2239","line":38,"column":9,"nodeType":"2240","messageId":"2241","endLine":38,"endColumn":50},{"ruleId":"2238","severity":1,"message":"2239","line":39,"column":11,"nodeType":"2240","messageId":"2241","endLine":56,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":60,"column":13,"nodeType":"2240","messageId":"2241","endLine":60,"endColumn":106},{"ruleId":"2238","severity":1,"message":"2239","line":67,"column":9,"nodeType":"2240","messageId":"2241","endLine":67,"endColumn":91},{"ruleId":"2238","severity":1,"message":"2239","line":68,"column":11,"nodeType":"2240","messageId":"2241","endLine":68,"endColumn":54},{"ruleId":"2238","severity":1,"message":"2239","line":72,"column":9,"nodeType":"2240","messageId":"2241","endLine":75,"endColumn":10},{"ruleId":"2238","severity":1,"message":"2239","line":76,"column":11,"nodeType":"2240","messageId":"2241","endLine":76,"endColumn":103},{"ruleId":"2221","severity":1,"message":"2931","line":9,"column":1,"nodeType":"2195","endLine":9,"endColumn":44,"fix":"2932"},{"ruleId":"2238","severity":1,"message":"2239","line":39,"column":5,"nodeType":"2240","messageId":"2241","endLine":39,"endColumn":81},{"ruleId":"2238","severity":1,"message":"2239","line":40,"column":7,"nodeType":"2240","messageId":"2241","endLine":40,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":41,"column":9,"nodeType":"2240","messageId":"2241","endLine":41,"endColumn":38},{"ruleId":"2238","severity":1,"message":"2239","line":42,"column":11,"nodeType":"2240","messageId":"2241","endLine":42,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":44,"column":9,"nodeType":"2240","messageId":"2241","endLine":44,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":45,"column":11,"nodeType":"2240","messageId":"2241","endLine":49,"endColumn":13},{"ruleId":"2238","severity":1,"message":"2239","line":52,"column":9,"nodeType":"2240","messageId":"2241","endLine":52,"endColumn":38},{"ruleId":"2238","severity":1,"message":"2239","line":53,"column":11,"nodeType":"2240","messageId":"2241","endLine":53,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":54,"column":11,"nodeType":"2240","messageId":"2241","endLine":61,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":62,"column":13,"nodeType":"2240","messageId":"2241","endLine":62,"endColumn":94},{"ruleId":"2238","severity":1,"message":"2239","line":65,"column":9,"nodeType":"2240","messageId":"2241","endLine":71,"endColumn":11},{"ruleId":"2238","severity":1,"message":"2239","line":73,"column":7,"nodeType":"2240","messageId":"2241","endLine":73,"endColumn":48},{"ruleId":"2238","severity":1,"message":"2239","line":74,"column":9,"nodeType":"2240","messageId":"2241","endLine":74,"endColumn":48},{"ruleId":"2238","severity":1,"message":"2239","line":75,"column":11,"nodeType":"2240","messageId":"2241","endLine":75,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":76,"column":11,"nodeType":"2240","messageId":"2241","endLine":79,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":80,"column":13,"nodeType":"2240","messageId":"2241","endLine":87,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":88,"column":13,"nodeType":"2240","messageId":"2241","endLine":88,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":89,"column":13,"nodeType":"2240","messageId":"2241","endLine":92,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":94,"column":11,"nodeType":"2240","messageId":"2241","endLine":97,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":98,"column":13,"nodeType":"2240","messageId":"2241","endLine":104,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":105,"column":13,"nodeType":"2240","messageId":"2241","endLine":105,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":108,"column":9,"nodeType":"2240","messageId":"2241","endLine":108,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":110,"column":13,"nodeType":"2240","messageId":"2241","endLine":110,"endColumn":85},{"ruleId":"2238","severity":1,"message":"2239","line":117,"column":11,"nodeType":"2240","messageId":"2241","endLine":117,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":118,"column":13,"nodeType":"2240","messageId":"2241","endLine":118,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":119,"column":15,"nodeType":"2240","messageId":"2241","endLine":119,"endColumn":54},{"ruleId":"2326","severity":1,"message":"2327","line":119,"column":15,"nodeType":"2240","messageId":"2328","endLine":119,"endColumn":54,"fix":"2933"},{"ruleId":"2238","severity":1,"message":"2239","line":120,"column":15,"nodeType":"2240","messageId":"2241","endLine":120,"endColumn":54},{"ruleId":"2238","severity":1,"message":"2239","line":121,"column":17,"nodeType":"2240","messageId":"2241","endLine":126,"endColumn":19},{"ruleId":"2238","severity":1,"message":"2239","line":127,"column":17,"nodeType":"2240","messageId":"2241","endLine":127,"endColumn":56},{"ruleId":"2238","severity":1,"message":"2239","line":128,"column":19,"nodeType":"2240","messageId":"2241","endLine":128,"endColumn":86},{"ruleId":"2934","severity":1,"message":"2935","line":128,"column":40,"nodeType":"2219","messageId":"2936","endLine":128,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":129,"column":19,"nodeType":"2240","messageId":"2241","endLine":129,"endColumn":59},{"ruleId":"2238","severity":1,"message":"2239","line":130,"column":19,"nodeType":"2240","messageId":"2241","endLine":130,"endColumn":56},{"ruleId":"2238","severity":1,"message":"2239","line":131,"column":21,"nodeType":"2240","messageId":"2241","endLine":139,"endColumn":23},{"ruleId":"2238","severity":1,"message":"2239","line":140,"column":21,"nodeType":"2240","messageId":"2241","endLine":148,"endColumn":23},{"ruleId":"2238","severity":1,"message":"2239","line":153,"column":13,"nodeType":"2240","messageId":"2241","endLine":153,"endColumn":56},{"ruleId":"2238","severity":1,"message":"2239","line":154,"column":15,"nodeType":"2240","messageId":"2241","endLine":154,"endColumn":117},{"ruleId":"2238","severity":1,"message":"2239","line":157,"column":15,"nodeType":"2240","messageId":"2241","endLine":157,"endColumn":114},{"ruleId":"2238","severity":1,"message":"2239","line":158,"column":17,"nodeType":"2240","messageId":"2241","endLine":158,"endColumn":30},{"ruleId":"2238","severity":1,"message":"2239","line":163,"column":9,"nodeType":"2240","messageId":"2241","endLine":163,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":164,"column":11,"nodeType":"2240","messageId":"2241","endLine":179,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":9,"column":5,"nodeType":"2240","messageId":"2241","endLine":9,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":10,"column":7,"nodeType":"2240","messageId":"2241","endLine":10,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":11,"column":7,"nodeType":"2240","messageId":"2241","endLine":11,"endColumn":47},{"ruleId":"2238","severity":1,"message":"2239","line":12,"column":9,"nodeType":"2240","messageId":"2241","endLine":12,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":14,"column":7,"nodeType":"2240","messageId":"2241","endLine":14,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":16,"column":11,"nodeType":"2240","messageId":"2241","endLine":16,"endColumn":26},{"ruleId":"2246","severity":1,"message":"2247","line":16,"column":21,"nodeType":"2219","messageId":"2248","endLine":16,"endColumn":24},{"ruleId":"2238","severity":1,"message":"2239","line":18,"column":15,"nodeType":"2240","messageId":"2241","endLine":18,"endColumn":107},{"ruleId":"2238","severity":1,"message":"2239","line":19,"column":17,"nodeType":"2240","messageId":"2241","endLine":19,"endColumn":60},{"ruleId":"2238","severity":1,"message":"2239","line":22,"column":13,"nodeType":"2240","messageId":"2241","endLine":22,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":10,"column":5,"nodeType":"2240","messageId":"2241","endLine":13,"endColumn":6},{"ruleId":"2238","severity":1,"message":"2239","line":14,"column":7,"nodeType":"2240","messageId":"2241","endLine":14,"endColumn":47},{"ruleId":"2238","severity":1,"message":"2239","line":15,"column":9,"nodeType":"2240","messageId":"2241","endLine":15,"endColumn":107},{"ruleId":"2238","severity":1,"message":"2239","line":16,"column":9,"nodeType":"2240","messageId":"2241","endLine":16,"endColumn":52},{"ruleId":"2238","severity":1,"message":"2239","line":17,"column":11,"nodeType":"2240","messageId":"2241","endLine":17,"endColumn":73},{"ruleId":"2238","severity":1,"message":"2239","line":20,"column":26,"nodeType":"2240","messageId":"2241","endLine":20,"endColumn":103},{"ruleId":"2246","severity":1,"message":"2247","line":20,"column":40,"nodeType":"2219","messageId":"2248","endLine":20,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":24,"column":11,"nodeType":"2240","messageId":"2241","endLine":24,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":25,"column":13,"nodeType":"2240","messageId":"2241","endLine":32,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":35,"column":13,"nodeType":"2240","messageId":"2241","endLine":39,"endColumn":14},{"ruleId":"2527","severity":1,"message":"2528","line":5,"column":1,"nodeType":"2529","endLine":33,"endColumn":3},{"ruleId":"2221","severity":1,"message":"2937","line":4,"column":1,"nodeType":"2195","endLine":4,"endColumn":47,"fix":"2938"},{"ruleId":"2217","severity":1,"message":"2939","line":8,"column":84,"nodeType":"2219","messageId":"2220","endLine":8,"endColumn":90},{"ruleId":"2238","severity":1,"message":"2239","line":11,"column":5,"nodeType":"2240","messageId":"2241","endLine":11,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":12,"column":7,"nodeType":"2240","messageId":"2241","endLine":12,"endColumn":78},{"ruleId":"2238","severity":1,"message":"2239","line":13,"column":9,"nodeType":"2240","messageId":"2241","endLine":13,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":15,"column":7,"nodeType":"2240","messageId":"2241","endLine":15,"endColumn":47},{"ruleId":"2238","severity":1,"message":"2239","line":17,"column":11,"nodeType":"2240","messageId":"2241","endLine":20,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":21,"column":13,"nodeType":"2240","messageId":"2241","endLine":21,"endColumn":16},{"ruleId":"2238","severity":1,"message":"2239","line":22,"column":13,"nodeType":"2240","messageId":"2241","endLine":22,"endColumn":19},{"ruleId":"2238","severity":1,"message":"2239","line":25,"column":9,"nodeType":"2240","messageId":"2241","endLine":25,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":26,"column":11,"nodeType":"2240","messageId":"2241","endLine":26,"endColumn":17},{"ruleId":"2238","severity":1,"message":"2239","line":27,"column":11,"nodeType":"2240","messageId":"2241","endLine":27,"endColumn":17},{"ruleId":"2238","severity":1,"message":"2239","line":29,"column":9,"nodeType":"2240","messageId":"2241","endLine":29,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":30,"column":23,"nodeType":"2240","messageId":"2241","endLine":30,"endColumn":35},{"ruleId":"2238","severity":1,"message":"2239","line":31,"column":11,"nodeType":"2240","messageId":"2241","endLine":31,"endColumn":17},{"ruleId":"2238","severity":1,"message":"2239","line":32,"column":11,"nodeType":"2240","messageId":"2241","endLine":32,"endColumn":17},{"ruleId":"2234","severity":1,"message":"2235","line":7,"column":29,"nodeType":"2236","messageId":"2237","endLine":7,"endColumn":31},{"ruleId":"2527","severity":1,"message":"2528","line":1,"column":1,"nodeType":"2529","endLine":24,"endColumn":3},{"ruleId":"2269","severity":1,"message":"2270","line":4,"column":3,"nodeType":"2219","messageId":"2271","endLine":4,"endColumn":8},{"ruleId":"2221","severity":1,"message":"2940","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":47,"fix":"2941"},{"ruleId":"2231","severity":1,"message":"2832","line":22,"column":15,"nodeType":"2219","messageId":"2233","endLine":22,"endColumn":20},{"ruleId":"2231","severity":1,"message":"2942","line":52,"column":11,"nodeType":"2219","messageId":"2233","endLine":52,"endColumn":23},{"ruleId":"2384","severity":1,"message":"2385","line":66,"column":12,"nodeType":"2460","messageId":"2212","endLine":68,"endColumn":6,"fix":"2943"},{"ruleId":"2231","severity":1,"message":"2944","line":75,"column":11,"nodeType":"2219","messageId":"2233","endLine":75,"endColumn":21},{"ruleId":"2261","severity":1,"message":"2945","line":80,"column":9,"nodeType":"2219","messageId":"2263","endLine":80,"endColumn":12,"fix":"2946"},{"ruleId":"2238","severity":1,"message":"2239","line":90,"column":5,"nodeType":"2240","messageId":"2241","endLine":90,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":91,"column":7,"nodeType":"2240","messageId":"2241","endLine":91,"endColumn":69},{"ruleId":"2238","severity":1,"message":"2239","line":92,"column":9,"nodeType":"2240","messageId":"2241","endLine":92,"endColumn":87},{"ruleId":"2238","severity":1,"message":"2239","line":96,"column":11,"nodeType":"2835","messageId":"2241","endLine":96,"endColumn":13},{"ruleId":"2242","severity":1,"message":"2243","line":97,"column":13,"nodeType":"2244","messageId":"2245","endLine":102,"endColumn":22},{"ruleId":"2238","severity":1,"message":"2239","line":97,"column":13,"nodeType":"2240","messageId":"2241","endLine":100,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":101,"column":15,"nodeType":"2240","messageId":"2241","endLine":101,"endColumn":44},{"ruleId":"2242","severity":1,"message":"2243","line":103,"column":13,"nodeType":"2244","messageId":"2245","endLine":108,"endColumn":22},{"ruleId":"2238","severity":1,"message":"2239","line":103,"column":13,"nodeType":"2240","messageId":"2241","endLine":106,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":107,"column":15,"nodeType":"2240","messageId":"2241","endLine":107,"endColumn":45},{"ruleId":"2238","severity":1,"message":"2239","line":12,"column":5,"nodeType":"2240","messageId":"2241","endLine":12,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":13,"column":7,"nodeType":"2240","messageId":"2241","endLine":13,"endColumn":115},{"ruleId":"2238","severity":1,"message":"2239","line":16,"column":7,"nodeType":"2240","messageId":"2241","endLine":16,"endColumn":111},{"ruleId":"2238","severity":1,"message":"2239","line":19,"column":7,"nodeType":"2240","messageId":"2241","endLine":19,"endColumn":113},{"ruleId":"2293","severity":1,"message":"2294","line":5,"column":30,"nodeType":"2295","messageId":"2212","endLine":5,"endColumn":32},{"ruleId":"2217","severity":1,"message":"2947","line":21,"column":46,"nodeType":"2219","messageId":"2220","endLine":21,"endColumn":53},{"ruleId":"2217","severity":1,"message":"2948","line":23,"column":9,"nodeType":"2219","messageId":"2220","endLine":23,"endColumn":16},{"ruleId":"2527","severity":1,"message":"2528","line":9,"column":1,"nodeType":"2529","endLine":66,"endColumn":3},{"ruleId":"2221","severity":1,"message":"2949","line":5,"column":1,"nodeType":"2195","endLine":5,"endColumn":57,"fix":"2950"},{"ruleId":"2261","severity":1,"message":"2951","line":17,"column":7,"nodeType":"2219","messageId":"2263","endLine":17,"endColumn":21,"fix":"2952"},{"ruleId":"2434","severity":1,"message":"2435","line":18,"column":3,"nodeType":"2436","messageId":"2437","endLine":22,"endColumn":4},{"ruleId":"2261","severity":1,"message":"2953","line":18,"column":12,"nodeType":"2219","messageId":"2263","endLine":18,"endColumn":15,"fix":"2954"},{"ruleId":"2238","severity":1,"message":"2239","line":64,"column":5,"nodeType":"2240","messageId":"2241","endLine":64,"endColumn":40},{"ruleId":"2238","severity":1,"message":"2239","line":65,"column":7,"nodeType":"2240","messageId":"2241","endLine":65,"endColumn":37},{"ruleId":"2238","severity":1,"message":"2239","line":66,"column":9,"nodeType":"2240","messageId":"2241","endLine":66,"endColumn":48},{"ruleId":"2238","severity":1,"message":"2239","line":67,"column":11,"nodeType":"2240","messageId":"2241","endLine":74,"endColumn":13},{"ruleId":"2238","severity":1,"message":"2239","line":77,"column":9,"nodeType":"2240","messageId":"2241","endLine":77,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":78,"column":11,"nodeType":"2240","messageId":"2241","endLine":78,"endColumn":15},{"ruleId":"2238","severity":1,"message":"2239","line":79,"column":11,"nodeType":"2240","messageId":"2241","endLine":79,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":86,"column":9,"nodeType":"2240","messageId":"2241","endLine":86,"endColumn":42},{"ruleId":"2238","severity":1,"message":"2239","line":87,"column":11,"nodeType":"2240","messageId":"2241","endLine":87,"endColumn":91},{"ruleId":"2238","severity":1,"message":"2239","line":92,"column":17,"nodeType":"2240","messageId":"2241","endLine":96,"endColumn":18},{"ruleId":"2246","severity":1,"message":"2247","line":94,"column":24,"nodeType":"2219","messageId":"2248","endLine":94,"endColumn":27},{"ruleId":"2238","severity":1,"message":"2239","line":97,"column":19,"nodeType":"2240","messageId":"2241","endLine":97,"endColumn":50},{"ruleId":"2238","severity":1,"message":"2239","line":98,"column":19,"nodeType":"2240","messageId":"2241","endLine":98,"endColumn":49},{"ruleId":"2238","severity":1,"message":"2239","line":99,"column":21,"nodeType":"2240","messageId":"2241","endLine":99,"endColumn":25},{"ruleId":"2238","severity":1,"message":"2239","line":100,"column":57,"nodeType":"2240","messageId":"2241","endLine":100,"endColumn":63},{"ruleId":"2238","severity":1,"message":"2239","line":102,"column":21,"nodeType":"2240","messageId":"2241","endLine":102,"endColumn":51},{"ruleId":"2238","severity":1,"message":"2239","line":106,"column":13,"nodeType":"2240","messageId":"2241","endLine":106,"endColumn":55},{"ruleId":"2238","severity":1,"message":"2239","line":107,"column":15,"nodeType":"2240","messageId":"2241","endLine":107,"endColumn":101},{"ruleId":"2238","severity":1,"message":"2239","line":112,"column":11,"nodeType":"2240","messageId":"2241","endLine":112,"endColumn":102},{"ruleId":"2238","severity":1,"message":"2239","line":113,"column":13,"nodeType":"2240","messageId":"2241","endLine":116,"endColumn":14},{"ruleId":"2238","severity":1,"message":"2239","line":117,"column":15,"nodeType":"2240","messageId":"2241","endLine":117,"endColumn":48},{"ruleId":"2238","severity":1,"message":"2239","line":118,"column":15,"nodeType":"2240","messageId":"2241","endLine":118,"endColumn":19},{"ruleId":"2238","severity":1,"message":"2239","line":119,"column":15,"nodeType":"2240","messageId":"2241","endLine":119,"endColumn":18},{"ruleId":"2238","severity":1,"message":"2239","line":121,"column":13,"nodeType":"2240","messageId":"2241","endLine":121,"endColumn":85},{"ruleId":"2238","severity":1,"message":"2239","line":122,"column":15,"nodeType":"2240","messageId":"2241","endLine":122,"endColumn":53},{"ruleId":"2238","severity":1,"message":"2239","line":123,"column":15,"nodeType":"2240","messageId":"2241","endLine":123,"endColumn":19},{"ruleId":"2238","severity":1,"message":"2239","line":124,"column":15,"nodeType":"2240","messageId":"2241","endLine":124,"endColumn":18},{"ruleId":"2221","severity":1,"message":"2545","line":16,"column":1,"nodeType":"2195","endLine":16,"endColumn":35,"fix":"2955"},{"ruleId":"2434","severity":1,"message":"2513","line":24,"column":3,"nodeType":"2514","messageId":"2437","endLine":27,"endColumn":4},{"ruleId":"2434","severity":1,"message":"2513","line":29,"column":3,"nodeType":"2514","messageId":"2437","endLine":41,"endColumn":4},{"ruleId":"2261","severity":1,"message":"2776","line":31,"column":11,"nodeType":"2219","messageId":"2263","endLine":31,"endColumn":21,"fix":"2956"},{"ruleId":"2231","severity":1,"message":"2957","line":48,"column":5,"nodeType":"2219","messageId":"2233","endLine":48,"endColumn":14},{"ruleId":"2234","severity":1,"message":"2317","line":112,"column":69,"nodeType":"2236","messageId":"2237","endLine":112,"endColumn":71},{"ruleId":"2364","severity":1,"message":"2365","line":165,"column":13,"nodeType":"2366","messageId":"2367","endLine":165,"endColumn":48,"fix":"2958"},{"ruleId":"2228","severity":1,"message":"2229","line":228,"column":3,"nodeType":"2230","messageId":"2212","endLine":228,"endColumn":14},{"ruleId":"2417","severity":1,"message":"2959","line":310,"column":18,"nodeType":"2219","messageId":"2419","endLine":310,"endColumn":32},{"ruleId":"2234","severity":1,"message":"2638","line":149,"column":5,"nodeType":"2338","messageId":"2339","endLine":154,"endColumn":7},{"ruleId":"2234","severity":1,"message":"2638","line":173,"column":3,"nodeType":"2338","messageId":"2339","endLine":177,"endColumn":6},{"ruleId":"2641","severity":1,"message":"2642","line":28,"column":18,"nodeType":"2643","endLine":28,"endColumn":27},{"ruleId":"2238","severity":1,"message":"2239","line":13,"column":5,"nodeType":"2240","messageId":"2241","endLine":13,"endColumn":44},{"ruleId":"2238","severity":1,"message":"2239","line":14,"column":7,"nodeType":"2240","messageId":"2241","endLine":14,"endColumn":59},{"ruleId":"2238","severity":1,"message":"2239","line":15,"column":7,"nodeType":"2240","messageId":"2241","endLine":15,"endColumn":41},{"ruleId":"2238","severity":1,"message":"2239","line":16,"column":9,"nodeType":"2240","messageId":"2241","endLine":16,"endColumn":46},{"ruleId":"2238","severity":1,"message":"2239","line":17,"column":11,"nodeType":"2240","messageId":"2241","endLine":20,"endColumn":13},{"ruleId":"2238","severity":1,"message":"2239","line":22,"column":9,"nodeType":"2240","messageId":"2241","endLine":35,"endColumn":11},{"ruleId":"2238","severity":1,"message":"2239","line":36,"column":9,"nodeType":"2240","messageId":"2241","endLine":36,"endColumn":50},{"ruleId":"2238","severity":1,"message":"2239","line":37,"column":11,"nodeType":"2240","messageId":"2241","endLine":52,"endColumn":12},{"ruleId":"2238","severity":1,"message":"2239","line":55,"column":11,"nodeType":"2240","messageId":"2241","endLine":55,"endColumn":98},{"ruleId":"2238","severity":1,"message":"2239","line":60,"column":7,"nodeType":"2240","messageId":"2241","endLine":67,"endColumn":8},{"ruleId":"2417","severity":1,"message":"2960","line":62,"column":11,"nodeType":"2219","messageId":"2419","endLine":62,"endColumn":25},{"ruleId":"2417","severity":1,"message":"2961","line":63,"column":19,"nodeType":"2219","messageId":"2419","endLine":63,"endColumn":23},{"ruleId":"2238","severity":1,"message":"2239","line":68,"column":9,"nodeType":"2240","messageId":"2241","endLine":68,"endColumn":52},"import/no-import-module-exports","Cannot use import declarations in modules that export using CommonJS (module.exports = 'foo' or exports.bar = 'hi')","ImportDeclaration","lines-around-directive",["2962"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/jsx-no-constructed-context-values","The object passed as the value prop to the Context provider (at line 72) changes every render. To fix this consider wrapping it in a useMemo hook.","ObjectExpression","defaultMsg","no-dupe-keys","Duplicate key 'currentPlan'.","unexpected","default-param-last","Default parameters should be last.","AssignmentPattern","shouldBeLast","no-unused-vars","'a' is defined but never used.","Identifier","unusedVar","import/order","`react` import should occur before import of `./Session.module.css`",{"range":"2963","text":"2964"},"`react-router-dom` import should occur before import of `./Session.module.css`",{"range":"2965","text":"2966"},"`react-loading-skeleton` import should occur before import of `./Session.module.css`",{"range":"2967","text":"2968"},"no-console","Unexpected console statement.","MemberExpression","no-shadow","'sessions' is already declared in the upper scope on line 33 column 34.","noShadow","consistent-return","Expected to return a value at the end of arrow function.","ArrowFunctionExpression","missingReturn","react/react-in-jsx-scope","'React' must be in scope when using JSX","JSXOpeningElement","notInScope","react/button-has-type","Missing an explicit type attribute for button","JSXElement","missingType","react/no-array-index-key","Do not use Array index in keys","noArrayIndex","'idx' is already declared in the upper scope on line 131 column 46.","`react` import should occur before import of `./Pricing.module.css`",{"range":"2969","text":"2970"},"import/no-duplicates","'/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/node_modules/react/index.js' imported multiple times.","Literal",{"range":"2971","text":"2972"},"`react-router-dom` import should occur before import of `./Pricing.module.css`",{"range":"2973","text":"2974"},{"range":"2975","text":"2976"},"'plan' is already declared in the upper scope on line 15 column 10.","'price' is already declared in the upper scope on line 16 column 10.","prefer-const","'levels' is never reassigned. Use 'const' instead.","useConst",{"range":"2977","text":"2978"},"'currentLevel' is never reassigned. Use 'const' instead.",{"range":"2979","text":"2980"},"'idx' is already declared in the upper scope on line 77 column 42.","'collection' is already declared in the upper scope on line 35 column 5.","no-param-reassign","Assignment to function parameter 'value'.","assignmentToFunctionParam","no-unsafe-optional-chaining","Unsafe arithmetic operation on optional chaining. It can result in NaN.","ChainExpression","unsafeArithmetic","dot-notation","[\"seconds\"] is better written in dot notation.","useDot",{"range":"2981","text":"2982"},{"range":"2983","text":"2982"},{"range":"2984","text":"2982"},{"range":"2985","text":"2982"},"'fetchUserNfts' is defined but never used.","`ethers` import should occur before import of `../../components/copy/copy`",{"range":"2986","text":"2987"},"'celoClient' is defined but never used.","'polygonClient' is defined but never used.","'GET_USER_NFT' is defined but never used.","'setNotification' is defined but never used.","'polygonCollections' is assigned a value but never used.","'celoCollections' is assigned a value but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'collectedNfts' is already declared in the upper scope on line 57 column 61.",{"range":"2988","text":"2982"},{"range":"2989","text":"2982"},{"range":"2990","text":"2982"},{"range":"2991","text":"2982"},"'uploadIcon' is defined but never used.","'copy' is assigned a value but never used.","'Link' is defined but never used.","'getUserGraphNft' is defined but never used.","'writeNft' is defined but never used.","`ethers` import should occur before import of `../../gen-state/gen.context`",{"range":"2992","text":"2993"},"'ethers' is defined but never used.","'algoIcon' is defined but never used.","'getCeloNFTToList' is defined but never used.","'getPolygonNFTToList' is defined but never used.","`axios` import should occur before import of `../../gen-state/gen.context`",{"range":"2994","text":"2995"},"'chain' is assigned a value but never used.","'image_url' is assigned a value but never used.","Expected to return a value at the end of async arrow function.","'listNft' is already declared in the upper scope on line 7 column 31.","Expected to return a value at the end of async function 'getUserCollection'.","FunctionExpression","'getGraphNft' is defined but never used.","'collection' is already declared in the upper scope on line 57 column 65.","array-callback-return","Array.prototype.find() expects a return value from arrow function.","expectedInside","react/self-closing-comp","Empty components are self-closing","notSelfClosing",{"range":"2996","text":"2997"},"'timerId' is never reassigned. Use 'const' instead.",{"range":"2998","text":"2999"},"'timerId' is already declared in the upper scope on line 18 column 27.","'walletIcon' is defined but never used.","'Explorers' is assigned a value but never used.","'useOutsideAlerter' is defined but never used.","'nftDetails' is already declared in the upper scope on line 51 column 5.","Async function 'getNftDetails' expected no return value.","ReturnStatement","unexpectedReturnValue","'useEffect' is defined but never used.","'useState' is defined but never used.","react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","unescapedEntityAlts","'classes' is defined but never used.","`react` import should occur before import of `./mint.module.css`",{"range":"3000","text":"3001"},"`react` import should occur before import of `../../components/layerorders/layerorders`",{"range":"3002","text":"3003"},{"range":"3004","text":"3005"},{"range":"3006","text":"3007"},"`react-router-dom` import should occur before import of `../../components/layerorders/layerorders`",{"range":"3008","text":"3009"},{"range":"3010","text":"3011"},"'width' is never reassigned. Use 'const' instead.",{"range":"3012","text":"3013"},"jsx-a11y/mouse-events-have-key-events","onMouseOver must be accompanied by onFocus for accessibility.","onMouseOut must be accompanied by onBlur for accessibility.","`uuid` import should occur before import of `../../../gen-state/gen.actions`",{"range":"3014","text":"3015"},"`react-router-dom` import should occur before import of `../../../gen-state/gen.actions`",{"range":"3016","text":"3017"},"prefer-destructuring","Use object destructuring.","VariableDeclarator","preferDestructuring",{"range":"3018","text":"3019"},"'isStripe' is never reassigned. Use 'const' instead.",{"range":"3020","text":"3021"},"'collectionName' is already declared in the upper scope on line 27 column 45.","'sessionId' is already declared in the upper scope on line 27 column 34.","'proposedPlan' is already declared in the upper scope on line 27 column 61.","'currentUser' is already declared in the upper scope on line 27 column 75.","no-useless-return","Unnecessary return statement.","unnecessaryReturn",{"range":"3022","text":"3023"},"'ID' is never reassigned. Use 'const' instead.",{"range":"3024","text":"3025"},"Arrow function expected no return value.","'upgradePlan' is already declared in the upper scope on line 27 column 21.",{"range":"3026","text":"3025"},"no-else-return","Unnecessary 'else' after 'return'.","IfStatement",{"range":"3027","text":"3028"},"no-unneeded-ternary","Unnecessary use of conditional expression for default assignment.","ConditionalExpression","unnecessaryConditionalAssignment",{"range":"3029","text":"3030"},"`react-router-dom` import should occur before import of `../../../gen-state/gen.context`",{"range":"3031","text":"3032"},"'newRules' is never reassigned. Use 'const' instead.",{"range":"3033","text":"3034"},"'iRule' is never reassigned. Use 'const' instead.",{"range":"3035","text":"3036"},"'strRules' is never reassigned. Use 'const' instead.",{"range":"3037","text":"3038"},"'i' is defined but never used.","'j' is defined but never used.","'Id' is assigned a value but never used.","'collection_name' is assigned a value but never used.","'name' is assigned a value but never used.","'price' is assigned a value but never used.","'chainSymbol' is assigned a value but never used.","'algoPrice' is assigned a value but never used.","'chainIcon' is assigned a value but never used.","'buyProps' is assigned a value but never used.","'nftDetails' is never reassigned. Use 'const' instead.",{"range":"3039","text":"3040"},"'nftDetails' is already declared in the upper scope on line 49 column 5.","Expected to return a value at the end of async function 'getNftDetails'.","'value' is never reassigned. Use 'const' instead.",{"range":"3041","text":"3042"},"no-undef","'match' is not defined.","undef","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'getSingleNftDetails' is defined but never used.","`ethers` import should occur before import of `../../../gen-state/gen.context`",{"range":"3043","text":"3044"},"'singleNfts' is assigned a value but never used.","`react` import should occur before import of `./SessionModal.module.css`",{"range":"3045","text":"3046"},"`react-router-dom` import should occur before import of `./SessionModal.module.css`",{"range":"3047","text":"3048"},"no-use-before-define","'handleClose' was used before it was defined.","usedBeforeDefined","'axios' is defined but never used.","no-restricted-syntax","for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.","ForInStatement","restrictedSyntax","prefer-template","Unexpected string concatenation.","unexpectedStringConcatenation",{"range":"3049","text":"3050"},"prettier/prettier","Delete `····⏎`","delete",{"range":"3051","text":"3052"},"Delete `···`",{"range":"3053","text":"3052"},"Delete `⏎······⏎⏎······`",{"range":"3054","text":"3052"},{"range":"3055","text":"3056"},{"range":"3057","text":"3058"},"Delete `⏎`",{"range":"3059","text":"3052"},"Delete `⏎⏎`",{"range":"3060","text":"3052"},"jsx-a11y/media-has-caption","Media elements such as <audio> and <video> must have a <track> for captions.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","`react` import should occur before import of `./UpgradeModal.module.css`",{"range":"3061","text":"3062"},"`react-router-dom` import should occur before import of `./UpgradeModal.module.css`",{"range":"3063","text":"3064"},"'states' is never reassigned. Use 'const' instead.",{"range":"3065","text":"3066"},"'currentState' is never reassigned. Use 'const' instead.",{"range":"3067","text":"3068"},"'Minter' is defined but never used.","'state' is already declared in the upper scope on line 24 column 10.","'getCeloGraphCollections' is defined but never used.","`ethers` import should occur before import of `../../utils/firebase`",{"range":"3069","text":"3070"},"'data' is already declared in the upper scope on line 150 column 15.","'data' is already declared in the upper scope on line 246 column 15.",{"range":"3071","text":"3072"},"'idx' is defined but never used.","'fetchNftLayers' was used before it was defined.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","'deleteAllNftTraits' was used before it was defined.","'fetchLayers' was used before it was defined.","'deleteAllTraits' was used before it was defined.","'ref' is already declared in the upper scope on line 3 column 3.","'doc' is already declared in the upper scope on line 11 column 10.",{"range":"3073","text":"3074"},{"range":"3075","text":"3076"},{"range":"3077","text":"3078"},{"range":"3079","text":"3080"},"'file' is never reassigned. Use 'const' instead.",{"range":"3081","text":"3082"},"Use array destructuring.","AssignmentExpression","no-return-await","Redundant use of `await` on a return value.",{"label":"3083","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"redundantUseOfAwait",{"range":"3084","text":"3082"},"'newTrait' is never reassigned. Use 'const' instead.",{"range":"3085","text":"3086"},"'constructLayers' was used before it was defined.","'startTime' is never reassigned. Use 'const' instead.",{"range":"3087","text":"3088"},"'constructNftLayers' was used before it was defined.","'endTime' is never reassigned. Use 'const' instead.",{"range":"3089","text":"3090"},"'parseRules' is never reassigned. Use 'const' instead.",{"range":"3091","text":"3092"},"'constructRules' was used before it was defined.","iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","ForOfStatement","'o' is never reassigned. Use 'const' instead.",{"range":"3093","text":"3094"},"no-return-assign","Arrow function should not return assignment.","arrowAssignment",{"range":"3095","text":"3096"},"'traits' is never reassigned. Use 'const' instead.",{"range":"3097","text":"3098"},"'traitTitle' is never reassigned. Use 'const' instead.",{"range":"3099","text":"3100"},"'image' is never reassigned. Use 'const' instead.",{"range":"3101","text":"3100"},"import/prefer-default-export","Prefer default export.","ExportNamedDeclaration","no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"3102","text":"3103"},"func-names","Unexpected unnamed function.","unnamed","prefer-promise-reject-errors","Expected the Promise rejection reason to be an Error.","CallExpression","rejectAnError","'handleTemplateImage' is defined but never used.","'/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/utils/index.js' imported multiple times.",{"range":"3104","text":"3105"},"`uuid` import should occur before import of `../../gen-state/gen.actions`",{"range":"3106","text":"3107"},"'newImageFiles' is never reassigned. Use 'const' instead.",{"range":"3108","text":"3109"},"[\"Green10\"] is better written in dot notation.",{"range":"3110","text":"3111"},"[\"High30\"] is better written in dot notation.",{"range":"3112","text":"3113"},"[\"Middle50\"] is better written in dot notation.",{"range":"3114","text":"3115"},"[\"High20\"] is better written in dot notation.",{"range":"3116","text":"3117"},"[\"Low40\"] is better written in dot notation.",{"range":"3118","text":"3119"},"[\"Cyan1\"] is better written in dot notation.",{"range":"3120","text":"3121"},"[\"Yellow10\"] is better written in dot notation.",{"range":"3122","text":"3123"},"'_arrayBufferToBase64' is defined but never used.","no-plusplus","Unary operator '++' used.","UpdateExpression","unexpectedUnaryOp","`react` import should occur before import of `./NoResult.module.css`",{"range":"3124","text":"3125"},"`react-router-dom` import should occur before import of `./NoResult.module.css`",{"range":"3126","text":"3127"},"'/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/node_modules/firebase/firestore/dist/index.esm.js' imported multiple times.",{"range":"3128","text":"3129"},"'query' is defined but never used.","'where' is defined but never used.","'getDocs' is defined but never used.","'lendy' is never reassigned. Use 'const' instead.",{"range":"3130","text":"3131"},"'lendy' is assigned a value but never used.",{"range":"3132","text":"3133"},"Assignment to function parameter 'name'.","`./PricingModal.module.css` import should occur after import of `@paypal/react-paypal-js`",{"range":"3134","text":"3135"},"`../../../assets/icon-close.svg` import should occur after import of `@paypal/react-paypal-js`",{"range":"3136","text":"3137"},"'details' is defined but never used.","'handleClick' was used before it was defined.","[\"test\"] is better written in dot notation.",{"range":"3138","text":"3139"},"spaced-comment","Expected exception block, space or tab after '//' in comment.","Line","expectedExceptionAfter",{"range":"3140","text":"3141"},"no-alert","Unexpected alert.","'counter' is already declared in the upper scope on line 7 column 10.","'percentageCount' is never reassigned. Use 'const' instead.",{"range":"3142","text":"3143"},"'count' is never reassigned. Use 'const' instead.",{"range":"3144","text":"3145"},"'mintSingleToCelo' is defined but never used.","Insert `,`","insert",{"range":"3146","text":"3147"},"'setClipboard' is assigned a value but never used.","`react-router-dom` import should occur before import of `./profileDropdown.module.css`",{"range":"3148","text":"3149"},"`react` import should occur before import of `./profileDropdown.module.css`",{"range":"3150","text":"3151"},"'sv' is never reassigned. Use 'const' instead.",{"range":"3152","text":"3153"},"'width' is already declared in the upper scope on line 102 column 11.","`./CollectionNameModal.module.css` import should occur after import of `react`",{"range":"3154","text":"3155"},{"range":"3156","text":"3157"},"'idx' is already declared in the upper scope on line 134 column 43.","'nfts' is assigned a value but never used.","'numberOfCameras' is assigned a value but never used.","'trackRecord' is assigned a value but never used.","'state' is already declared in the upper scope on line 56 column 10.","'ratio' is assigned a value but never used.","'videoConstraints' is assigned a value but never used.","'downloadImg' is assigned a value but never used.","`react` import should occur before import of `../../gen-state/gen.actions`",{"range":"3158","text":"3159"},"`react-router-dom` import should occur before import of `../../gen-state/gen.actions`",{"range":"3160","text":"3161"},"'state' is already declared in the upper scope on line 28 column 10.",{"range":"3162","text":"3163"},"react/jsx-curly-brace-presence","Curly braces are unnecessary here.","JSXExpressionContainer","unnecessaryCurly",{"range":"3164","text":"3165"},"'GET_CELO_GRAPH_COLLECITONS' is defined but never used.","'getGraphCollection' is defined but never used.","Async arrow function expected no return value.",{"range":"3166","text":"3167"},"'isCreateModal' is defined but never used.","jsx-a11y/no-autofocus","The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","JSXAttribute","import/no-self-import","Module imports itself.","no-async-promise-executor","Promise executor functions should not be async.",{"label":"3083","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"async","'storedProvider' is never reassigned. Use 'const' instead.",{"range":"3168","text":"3169"},"'accounts' is defined but never used.","'chainId' is defined but never used.","'ethereumProvider' is already declared in the upper scope on line 66 column 11.","'code' is defined but never used.","'reason' is defined but never used.","'supportedChains' is already declared in the upper scope on line 16 column 8.","'supportedChains' is defined but never used.","'proposedChain' is never reassigned. Use 'const' instead.",{"range":"3170","text":"3171"},{"range":"3172","text":"3141"},"'networkId' is never reassigned. Use 'const' instead.",{"range":"3173","text":"3174"},"object-shorthand","Expected property shorthand.","Property","expectedPropertyShorthand",{"range":"3175","text":"3176"},"'addLayer' is defined but never used.","`uuid` import should occur before import of `./arc_ipfs`",{"range":"3177","text":"3178"},"'uuid' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-empty","Empty block statement.","'mainnet' is defined but never used.",{"range":"3179","text":"3180"},"'chain' is never reassigned. Use 'const' instead.",{"range":"3181","text":"3182"},"`../gen-state/gen.actions` import should occur after import of `mime`",{"range":"3183","text":"3184"},"'setAuroraSingleNfts' is defined but never used.",{"range":"3185","text":"3141"},{"range":"3186","text":"3141"},{"range":"3187","text":"3141"},"'mime' is defined but never used.","Replace `'mime'` with `\"mime\";`","replace",{"range":"3188","text":"3189"},"'uploadToIpfsNftStorage' is assigned a value but never used.","Delete `⏎··`",{"range":"3190","text":"3052"},"Replace `·'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweEE1QkM4MTI2QkE0NTkxMTM3MmY5QTEyMGIwY2Y0Y0JFMzQ0RURFZEMiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY2MjQ5ODI4NDQ4MiwibmFtZSI6Ik1hcmtvIFNhdmljIC0gRmlyc3QgVGVzdGluZyAgMDYuMDkuMjAyMiJ9.uhGN9gvNYZrCIoYIIzyk3yTIg8We319K-5jreBtVUOQ'` with `⏎··\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweEE1QkM4MTI2QkE0NTkxMTM3MmY5QTEyMGIwY2Y0Y0JFMzQ0RURFZEMiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY2MjQ5ODI4NDQ4MiwibmFtZSI6Ik1hcmtvIFNhdmljIC0gRmlyc3QgVGVzdGluZyAgMDYuMDkuMjAyMiJ9.uhGN9gvNYZrCIoYIIzyk3yTIg8We319K-5jreBtVUOQ\";`",{"range":"3191","text":"3192"},"Insert `;`",{"range":"3193","text":"3194"},{"range":"3195","text":"3194"},{"range":"3196","text":"3194"},{"range":"3197","text":"3194"},{"range":"3198","text":"3194"},{"range":"3199","text":"3194"},"Delete `··`",{"range":"3200","text":"3052"},"'metadataJSON' is never reassigned. Use 'const' instead.",{"range":"3201","text":"3202"},"Replace `··JSON.stringify(metadata)` with `·JSON.stringify(metadata);`",{"range":"3203","text":"3204"},{"range":"3205","text":"3194"},{"range":"3206","text":"3194"},"Insert `·`",{"range":"3207","text":"3141"},"Delete `·`",{"range":"3208","text":"3052"},{"range":"3209","text":"3052"},{"range":"3210","text":"3052"},{"range":"3211","text":"3052"},"Replace `··})` with `····});`",{"range":"3212","text":"3213"},"Replace `⏎··}catch(error)` with `}·catch·(error)·`",{"range":"3214","text":"3215"},"Expected exception block, space or tab after '/*' in comment.","Block",{"range":"3216","text":"3141"},"Expected space or tab before '*/' in comment.","expectedSpaceBefore",{"range":"3217","text":"3141"},{"range":"3218","text":"3052"},"'tx' is assigned a value but never used.","'setLoader' is already declared in the upper scope on line 7 column 31.",{"range":"3219","text":"3141"},{"range":"3220","text":"3052"},{"range":"3221","text":"3141"},"Replace `·if·(connector.isWalletConnect)·{·` with `if·(connector.isWalletConnect)·{`",{"range":"3222","text":"3223"},"Delete `⏎····`",{"range":"3224","text":"3052"},"Replace `··⏎··}⏎⏎` with `}`",{"range":"3225","text":"3226"},{"range":"3227","text":"3052"},{"range":"3228","text":"3141"},{"range":"3229","text":"3141"},{"range":"3230","text":"3052"},"Insert `··`",{"range":"3231","text":"3232"},{"range":"3233","text":"3141"},{"range":"3234","text":"3194"},{"range":"3235","text":"3141"},{"range":"3236","text":"3232"},{"range":"3237","text":"3238"},{"range":"3239","text":"3194"},"Replace `⏎··⏎}⏎⏎` with `}`",{"range":"3240","text":"3226"},"'setNotification' is already declared in the upper scope on line 7 column 42.","Async function 'mintToCelo' expected a return value.","missingReturnValue","Async function 'mintToPoly' expected a return value.","Async function 'PurchaseNft' expected a return value.","Async function 'mintToAurora' expected a return value.","'tokenId' is never reassigned. Use 'const' instead.","'seller' is never reassigned. Use 'const' instead.","'nftContract' is never reassigned. Use 'const' instead.","`./graph.module.css` import should occur after import of `chart.js`",{"range":"3241","text":"3242"},"import/newline-after-import","Expected 1 empty line after import statement not followed by another import.",{"range":"3243","text":"3244"},"'dates' is never reassigned. Use 'const' instead.",{"range":"3245","text":"3246"},"'prices' is never reassigned. Use 'const' instead.",{"range":"3247","text":"3248"},"Array.prototype.map() expects a return value from arrow function.",{"range":"3249","text":"3250"},"'singleRule' is never reassigned. Use 'const' instead.",{"range":"3251","text":"3252"},"'setLoader' is already declared in the upper scope on line 6 column 3.","no-await-in-loop","Unexpected `await` inside a loop.","AwaitExpression","unexpectedAwait",{"range":"3253","text":"3103"},"vars-on-top","All 'var' declarations must be at the top of the function scope.","top",{"range":"3254","text":"3103"},"'seconds' is already declared in the upper scope on line 7 column 10.","'canvas' is never reassigned. Use 'const' instead.",{"range":"3255","text":"3256"},"no-constant-condition","Unexpected constant condition.","'imageQuality' is assigned a value but never used.","`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","`react` import should occur before import of `../../../assets/icon-success_2.svg`",{"range":"3257","text":"3258"},"`react-router-dom` import should occur before import of `../../../assets/icon-success_2.svg`",{"range":"3259","text":"3260"},"'Copy' is defined but never used.","'account' is assigned a value but never used.","import/no-extraneous-dependencies","'prop-types' should be listed in the project's dependencies. Run 'npm i -S prop-types' to add it",{"range":"3261","text":"3262"},{"range":"3263","text":"3264"},"react/require-default-props","propType \"createOrder\" is not required, but has no corresponding defaultProps declaration.","shouldHaveDefault","propType \"createSubscription\" is not required, but has no corresponding defaultProps declaration.","'image' is already declared in the upper scope on line 16 column 11.","'state' is already declared in the upper scope on line 31 column 10.","'cardWidth' is already declared in the upper scope on line 35 column 11.","'/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/assets/mint-icon.png' imported multiple times.","'data' is already declared in the upper scope on line 9 column 19.","'data' is already declared in the upper scope on line 28 column 13.","'now' is never reassigned. Use 'const' instead.",{"range":"3265","text":"3266"},"'date' is never reassigned. Use 'const' instead.",{"range":"3267","text":"3268"},"'diff' is never reassigned. Use 'const' instead.",{"range":"3269","text":"3270"},{"range":"3271","text":"3272"},{"range":"3273","text":"3274"},{"range":"3275","text":"3276"},{"range":"3277","text":"3278"},{"range":"3279","text":"3280"},{"range":"3281","text":"3282"},"'icon' is already declared in the upper scope on line 56 column 9.",{"range":"3283","text":"3284"},{"range":"3285","text":"3286"},"`@use-gesture/react` import should occur before import of `./GenadropCarouselCard.module.css`",{"range":"3287","text":"3288"},"'state' is already declared in the upper scope on line 12 column 10.",{"range":"3289","text":"3290"},"'slideNumberOfCounts' is already declared in the upper scope on line 17 column 25.","JSXOpeningFragment","`react-copy-to-clipboard` import should occur before import of `./transaction.module.css`",{"range":"3291","text":"3292"},{"range":"3293","text":"3244"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"3294","text":"3295"},{"range":"3296","text":"3297"},{"range":"3298","text":"3295"},{"range":"3299","text":"3300"},{"range":"3301","text":"3295"},{"range":"3302","text":"3303"},"'hideFooter' is never reassigned. Use 'const' instead.",{"range":"3304","text":"3305"},"[\"container\"] is better written in dot notation.",{"range":"3306","text":"3307"},"[\"text\"] is better written in dot notation.",{"range":"3308","text":"3309"},"[\"home\"] is better written in dot notation.",{"range":"3310","text":"3311"},"'box' is defined but never used.","'ball' is defined but never used.","'state' is already declared in the upper scope on line 21 column 10.","'cardWidth' is already declared in the upper scope on line 26 column 11.","'defaultOptions' is assigned a value but never used.","Unexpected require().",{"range":"3312","text":"2982"},{"range":"3313","text":"2982"},"`react-router-dom` import should occur before import of `../../Genadrop-Carousel-Card/GenadropCarouselCard`",{"range":"3314","text":"3315"},"'location' is assigned a value but never used.","'state' is already declared in the upper scope on line 14 column 10.","'cardWidth' is already declared in the upper scope on line 18 column 11.",{"range":"3316","text":"3317"},{"range":"3318","text":"3319"},{"range":"3320","text":"2997"},{"range":"3321","text":"2997"},{"range":"3322","text":"2997"},"'DateFilter' is defined but never used.","Unsafe usage of optional chaining. If it short-circuits with 'undefined' the evaluation will throw TypeError.","unsafeOptionalChain","no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["3323","3324"],["3325","3326"],["3327","3328"],"Duplicate key 'isEmail'.","'first' is never reassigned. Use 'const' instead.",{"range":"3329","text":"3330"},"'rest' is never reassigned. Use 'const' instead.",{"range":"3331","text":"3332"},"'isValid' is never reassigned. Use 'const' instead.",{"range":"3333","text":"3334"},"'name' is never reassigned. Use 'const' instead.","'useHistory' is defined but never used.","'useRouteMatch' is defined but never used.",{"range":"3335","text":"3336"},"'similarity' was used before it was defined.","'current_traits' is never reassigned. Use 'const' instead.",{"range":"3337","text":"3338"},"'nftsx' is never reassigned. Use 'const' instead.",{"range":"3339","text":"3340"},{"range":"3341","text":"3103"},{"range":"3342","text":"3103"},{"range":"3343","text":"3103"},{"range":"3344","text":"3103"},"[\"similarity\"] is better written in dot notation.",{"range":"3345","text":"3346"},{"range":"3347","text":"3346"},"'editDistance' was used before it was defined.",{"range":"3348","text":"3346"},"'compare' was used before it was defined.","Assignment to function parameter 's1'.","Assignment to function parameter 's2'.",{"range":"3349","text":"3103"},"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral",{"range":"3350","text":"3103"},{"range":"3351","text":"3103"},{"range":"3352","text":"3103"},"no-lonely-if","Unexpected if as the only statement in an else block.","unexpectedLonelyIf",{"range":"3353","text":"3354"},{"range":"3355","text":"3103"},"'/Users/markosavic/Desktop/Marko's folder/MPA/GENADROP/genadrop/src/assets/icon-chevron-down.svg' imported multiple times.",{"range":"3356","text":"3357"},"'state' is already declared in the upper scope on line 32 column 10.","'state' is already declared in the upper scope on line 11 column 10.",{"range":"3358","text":"3359"},"`react` import should occur before import of `./chainDropdown.module.css`",{"range":"3360","text":"3361"},"`react` import should occur before import of `../../../components/Genadrop-Tooltip/GenadropTooltip`",{"range":"3362","text":"3363"},{"range":"3364","text":"2997"},"no-restricted-globals","Unexpected use of 'isNaN'. Use Number.isNaN instead https://github.com/airbnb/javascript#standard-library--isnan","customMessage","`react-router-dom` import should occur before import of `./navbar.module.css`",{"range":"3365","text":"3366"},"'layers' is assigned a value but never used.","`@use-gesture/react` import should occur before import of `./GenadropCarouselScreen.module.css`",{"range":"3367","text":"3368"},"'scrollLength' is already declared in the upper scope on line 18 column 37.",{"range":"3369","text":"3370"},"'slideCount' is already declared in the upper scope on line 18 column 25.","'res' is never reassigned. Use 'const' instead.",{"range":"3371","text":"3372"},"'address' is assigned a value but never used.","'dayName' is assigned a value but never used.","`react` import should occur before import of `./walletPopup.module.css`",{"range":"3373","text":"3374"},"'connectOptions' is never reassigned. Use 'const' instead.",{"range":"3375","text":"3376"},"'key' is never reassigned. Use 'const' instead.",{"range":"3377","text":"3378"},{"range":"3379","text":"3380"},{"range":"3381","text":"3252"},"'setLoader' is already declared in the upper scope on line 8 column 3.",{"range":"3382","text":"3383"},"'collectionName' is not defined.","'handleSetState' is not defined.","'gifs' is not defined.","padding-line-between-statements",[0,417],"import { useContext, useEffect, useState } from \"react\";\nimport classes from \"./Session.module.css\";\nimport { ReactComponent as ChevronIcon } from \"../../assets/icon-chevron-down.svg\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\nimport { ReactComponent as ArrowBackIcon } from \"../../assets/icon-arrow-left.svg\";\n",[0,845],"import { useHistory } from \"react-router-dom\";\nimport classes from \"./Session.module.css\";\nimport { ReactComponent as ChevronIcon } from \"../../assets/icon-chevron-down.svg\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\nimport { ReactComponent as ArrowBackIcon } from \"../../assets/icon-arrow-left.svg\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  addRule,\n  setCollectionName,\n  setCurrentPlan,\n  setCurrentSession,\n  setLayerAction,\n  setLayers,\n  setNftLayers,\n  setOverlay,\n  setSession,\n  setUpgradePlan,\n} from \"../../gen-state/gen.actions\";\nimport { deleteAllLayers, fetchSession, fetchUserSession } from \"../../renderless/store-data/StoreData.script\";\n",[0,1070],"import Skeleton from \"react-loading-skeleton\";\nimport classes from \"./Session.module.css\";\nimport { ReactComponent as ChevronIcon } from \"../../assets/icon-chevron-down.svg\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\nimport { ReactComponent as ArrowBackIcon } from \"../../assets/icon-arrow-left.svg\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  addRule,\n  setCollectionName,\n  setCurrentPlan,\n  setCurrentSession,\n  setLayerAction,\n  setLayers,\n  setNftLayers,\n  setOverlay,\n  setSession,\n  setUpgradePlan,\n} from \"../../gen-state/gen.actions\";\nimport { deleteAllLayers, fetchSession, fetchUserSession } from \"../../renderless/store-data/StoreData.script\";\nimport { useHistory } from \"react-router-dom\";\nimport { plans } from \"../Pricing/Pricing.script\";\nimport { getCurrentUser } from \"../../components/google-auth/googleAuth.script\";\nimport NotResult from \"./No-Result/NoResult\";\n",[0,279],"import { useEffect, useState } from \"react\";\nimport classes from \"./Pricing.module.css\";\nimport { plans } from \"./Pricing.script\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\n",[263,441],", useContext } from \"react\";\nimport PricingModal from \"../../components/Modals/Pricing-Modal/PricingModal\";\nimport { useHistory } from \"react-router-dom\";\n",[0,405],"import { useHistory } from \"react-router-dom\";\nimport classes from \"./Pricing.module.css\";\nimport { plans } from \"./Pricing.script\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\nimport { useEffect, useState } from \"react\";\nimport PricingModal from \"../../components/Modals/Pricing-Modal/PricingModal\";\n",[0,441],"import { useContext } from \"react\";\nimport classes from \"./Pricing.module.css\";\nimport { plans } from \"./Pricing.script\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport { ReactComponent as MarkIcon } from \"../../assets/icon-mark.svg\";\nimport { useEffect, useState } from \"react\";\nimport PricingModal from \"../../components/Modals/Pricing-Modal/PricingModal\";\nimport { useHistory } from \"react-router-dom\";\n",[1626,1709],"const levels = {\n      free: 0,\n      hobby: 1,\n      pro: 2,\n      agency: 3,\n    };",[1715,1747],"const currentLevel = levels[plan];",[4994,5005],".seconds",[5020,5031],[5273,5284],[5299,5310],[243,852],"import { ethers } from \"ethers\";\nimport Copy from \"../../components/copy/copy\";\nimport CollectionsCard from \"../../components/Marketplace/collectionsCard/collectionsCard\";\nimport NftCard from \"../../components/Marketplace/NftCard/NftCard\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { getUserNftCollections, getUserSingleNfts } from \"../../utils\";\nimport {\n  fetchUserBoughtNfts,\n  fetchUserCollections,\n  fetchUserCreatedNfts,\n  fetchUserNfts,\n  readUserProfile,\n} from \"../../utils/firebase\";\nimport classes from \"./dashboard.module.css\";\nimport avatar from \"../../assets/avatar.png\";\n",[4808,4819],[4834,4845],[5087,5098],[5113,5124],[179,594],"import { ethers } from \"ethers\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { getUserBoughtNftCollection, getUserGraphNft } from \"../../utils\";\nimport classes from \"./list.module.css\";\nimport { fetchUserBoughtNfts, listNft, writeNft } from \"../../utils/firebase\";\nimport { GET_USER_NFT } from \"../../graphql/querries/getCollections\";\nimport { polygonClient } from \"../../utils/graphqlClient\";\n",[179,1006],"import axios from \"axios\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport { getUserBoughtNftCollection, getUserGraphNft } from \"../../utils\";\nimport classes from \"./list.module.css\";\nimport { fetchUserBoughtNfts, listNft, writeNft } from \"../../utils/firebase\";\nimport { GET_USER_NFT } from \"../../graphql/querries/getCollections\";\nimport { polygonClient } from \"../../utils/graphqlClient\";\nimport { ethers } from \"ethers\";\nimport algoIcon from \"../../assets/icon-algo.svg\";\nimport { listCeloNft, listPolygonNft } from \"../../utils/arc_ipfs\";\nimport {\n  celoUserData,\n  getCeloNFTToList,\n  getPolygonNFTToList,\n  polygonUserData,\n} from \"../../renderless/fetch-data/fetchUserGraphData\";\nimport { setNotification } from \"../../gen-state/gen.actions\";\nimport supportedChains from \"../../utils/supportedChains\";\n",[11527,11534]," />",[1262,1357],"const timerId = setTimeout(() => {\n      handleSetState({ toggleFeedback: false });\n    }, 5000);",[62,315],"import { useContext } from \"react\";\nimport classes from \"./mint.module.css\";\nimport collectionIcon from \"../../assets/icon-collection.svg\";\nimport _1of1Icon from \"../../assets/icon-1of1.svg\";\nimport shieldIcon from \"../../assets/icon-shield-check.svg\";\n",[0,325],"import { useEffect, useState } from \"react\";\nimport LayerOrders from \"../../components/layerorders/layerorders\";\nimport CollectionDescription from \"../../components/description/collection-description\";\nimport CollectionOverview from \"../../components/overview/collection-overview\";\nimport classes from \"./create.module.css\";\n",[309,1363],", useContext , useRef } from \"react\";\nimport SubscriptionNotification from \"../../components/Subscription-Notification/SubscriptionNotification\";\nimport CollectionNameModal from \"../../components/Modals/Collection-Name-Modal/CollectionNameModal\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  setOverlay,\n  setSession,\n  setToggleCollectionNameModal,\n  setToggleSessionModal,\n  setUpgradePlan,\n} from \"../../gen-state/gen.actions\";\nimport { fetchSession } from \"../../renderless/store-data/StoreData.script\";\nimport { useHistory } from \"react-router-dom\";\nimport CreateGuide from \"../../components/create-guide/create-guide\";\nimport GoogleAuth from \"../../components/google-auth/googleAuth\";\nimport ProfileDropdown from \"../../components/profile-dropdown/profileDropdown\";\nimport { ReactComponent as Diskicon } from \"../../assets/icon-disk.svg\";\nimport { ReactComponent as DropdownIcon } from \"../../assets/icon-chevron-down.svg\";\nimport ProgressBar from \"./Progress-Bar/ProgressBar\";\n",[0,570],"import { useContext } from \"react\";\nimport LayerOrders from \"../../components/layerorders/layerorders\";\nimport CollectionDescription from \"../../components/description/collection-description\";\nimport CollectionOverview from \"../../components/overview/collection-overview\";\nimport classes from \"./create.module.css\";\nimport { useEffect, useState } from \"react\";\nimport SubscriptionNotification from \"../../components/Subscription-Notification/SubscriptionNotification\";\nimport CollectionNameModal from \"../../components/Modals/Collection-Name-Modal/CollectionNameModal\";\n",[0,902],"import { useHistory } from \"react-router-dom\";\nimport LayerOrders from \"../../components/layerorders/layerorders\";\nimport CollectionDescription from \"../../components/description/collection-description\";\nimport CollectionOverview from \"../../components/overview/collection-overview\";\nimport classes from \"./create.module.css\";\nimport { useEffect, useState } from \"react\";\nimport SubscriptionNotification from \"../../components/Subscription-Notification/SubscriptionNotification\";\nimport CollectionNameModal from \"../../components/Modals/Collection-Name-Modal/CollectionNameModal\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  setOverlay,\n  setSession,\n  setToggleCollectionNameModal,\n  setToggleSessionModal,\n  setUpgradePlan,\n} from \"../../gen-state/gen.actions\";\nimport { fetchSession } from \"../../renderless/store-data/StoreData.script\";\n",[0,1363],"import { useRef } from \"react\";\nimport LayerOrders from \"../../components/layerorders/layerorders\";\nimport CollectionDescription from \"../../components/description/collection-description\";\nimport CollectionOverview from \"../../components/overview/collection-overview\";\nimport classes from \"./create.module.css\";\nimport { useEffect, useState } from \"react\";\nimport SubscriptionNotification from \"../../components/Subscription-Notification/SubscriptionNotification\";\nimport CollectionNameModal from \"../../components/Modals/Collection-Name-Modal/CollectionNameModal\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  setOverlay,\n  setSession,\n  setToggleCollectionNameModal,\n  setToggleSessionModal,\n  setUpgradePlan,\n} from \"../../gen-state/gen.actions\";\nimport { fetchSession } from \"../../renderless/store-data/StoreData.script\";\nimport { useHistory } from \"react-router-dom\";\nimport CreateGuide from \"../../components/create-guide/create-guide\";\nimport GoogleAuth from \"../../components/google-auth/googleAuth\";\nimport ProfileDropdown from \"../../components/profile-dropdown/profileDropdown\";\nimport { ReactComponent as Diskicon } from \"../../assets/icon-disk.svg\";\nimport { ReactComponent as DropdownIcon } from \"../../assets/icon-chevron-down.svg\";\nimport ProgressBar from \"./Progress-Bar/ProgressBar\";\n",[2818,2868],"const width = collectionNameRef.current.offsetWidth;",[57,455],"import { v4 as uuid } from \"uuid\";\nimport {\n  addRule,\n  setCollectionName,\n  setCurrentPlan,\n  setCurrentSession,\n  setCurrentUser,\n  setIsUser,\n  setLayerAction,\n  setLayers,\n  setNftLayers,\n  setPreview,\n  setProposedPlan,\n  setUpgradePlan,\n} from \"../../../gen-state/gen.actions\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { handleResetCreate } from \"../../../utils\";\n",[57,643],"import { useHistory } from \"react-router-dom\";\nimport {\n  addRule,\n  setCollectionName,\n  setCurrentPlan,\n  setCurrentSession,\n  setCurrentUser,\n  setIsUser,\n  setLayerAction,\n  setLayers,\n  setNftLayers,\n  setPreview,\n  setProposedPlan,\n  setUpgradePlan,\n} from \"../../../gen-state/gen.actions\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { handleResetCreate } from \"../../../utils\";\nimport { v4 as uuid } from \"uuid\";\nimport { ReactComponent as SuccessIcon } from \"../../../assets/icon-payment-successful.svg\";\nimport classes from \"./SuccessPlan.module.css\";\n",[1034,1075],"{isStripe} = window.sessionStorage",[1030,1076],"const isStripe = window.sessionStorage.isStripe;",[1166,1455],"async ({ collectionName = \"New Collection\", sessionId, proposedPlan, currentUser }) => {\n    const res = await saveSession({ currentUser, sessionId, collectionName, currentPlan: proposedPlan });\n    if (!res) return; // showNotification\n    dispatch(setUpgradePlan(false));\n    \n  }",[1824,1840],"const ID = uuid();",[2928,2944],[2594,4150],"async function runFetch() {\n      if (isStripe === \"true\") {\n        const {\n          layers,\n          nftLayers,\n          preview,\n          rule,\n          collectionName,\n          sessionId,\n          upgradePlan,\n          proposedPlan,\n          currentPlan,\n          currentUser,\n        } = await fetchUserData();\n        let ID = uuid();\n        if (!upgradePlan) {\n          handleResetCreate({ dispatch });\n          await save({ collectionName: \"New Collection\", sessionId: ID, currentUser, proposedPlan });\n          dispatch(setCurrentSession(ID));\n          dispatch(setCurrentUser(currentUser));\n          dispatch(setCollectionName(\"New Collection\"));\n          dispatch(setCurrentPlan(proposedPlan));\n          dispatch(setProposedPlan(proposedPlan));\n          return;\n        } if (!sessionId) {\n          dispatch(setCurrentSession(ID));\n        } else {\n          dispatch(setCurrentSession(sessionId));\n        }\n        await save({ collectionName, sessionId: sessionId ? sessionId : ID, currentUser, proposedPlan: currentPlan });\n        dispatch(setLayers(layers));\n        dispatch(setNftLayers(nftLayers));\n        dispatch(setPreview(preview));\n        dispatch(addRule(rule));\n        dispatch(setCollectionName(collectionName));\n        dispatch(setProposedPlan(proposedPlan));\n        dispatch(setCurrentUser(currentUser));\n        dispatch(setUpgradePlan(upgradePlan));\n        dispatch(setCurrentPlan(proposedPlan));\n      }\n      window.sessionStorage.isStripe = \"false\";\n      dispatch(setIsUser(\"true\"));\n    }",[3587,3613],"sessionId || ID",[47,290],"import { useHistory } from \"react-router-dom\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { ReactComponent as FailedIcon } from \"../../../assets/icon-payment-failed.svg\";\nimport classes from \"./FailedPlan.module.css\";\n",[3046,3209],"const newRules = rule.map((r) => {\n      let iRule = r.map(({ imageFile, ...ir }) => {\n        return { imageFile: \"\", ...ir };\n      });\n      return iRule;\n    });",[3085,3181],"const iRule = r.map(({ imageFile, ...ir }) => {\n        return { imageFile: \"\", ...ir };\n      });",[3215,3255],"const strRules = JSON.stringify(newRules);",[3710,3749],"const nftDetails = singleAlgoNfts[nftId];",[5884,5927],"const value = Object.values(res.data)[0].usd;",[179,478],"import { ethers } from \"ethers\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { getSingleNftDetails, getUserBoughtNftCollection, getUserGraphNft } from \"../../../utils\";\nimport classes from \"./listed.module.css\";\nimport { fetchUserBoughtNfts } from \"../../../utils/firebase\";\n",[0,173],"import { useContext, useState } from \"react\";\nimport classes from \"./SessionModal.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\n",[0,558],"import { useHistory } from \"react-router-dom\";\nimport classes from \"./SessionModal.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { useContext, useState } from \"react\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport {\n  addRule,\n  setCollectionName,\n  setCurrentPlan,\n  setCurrentSession,\n  setLayers,\n  setNftLayers,\n  setToggleSessionModal,\n  setUpgradePlan,\n} from \"../../../gen-state/gen.actions\";\nimport { fetchUserSession } from \"../../../renderless/store-data/StoreData.script\";\n",[5954,5982],"`file.length ${  file.length}`",[5985,5990],"",[6220,6223],[6762,6777],[7045,7071],"`typeof url ${  typeof url}`",[7092,7128],"`singleMintProps ${  singleMintProps}`",[7451,7452],[7635,7637],[0,85],"import { useContext } from \"react\";\nimport classes from \"./UpgradeModal.module.css\";\n",[0,682],"import { useHistory } from \"react-router-dom\";\nimport classes from \"./UpgradeModal.module.css\";\nimport { useContext } from \"react\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\nimport { setToggleUpgradeModal, setUpgradePlan } from \"../../../gen-state/gen.actions\";\nimport { ReactComponent as FailureIcon } from \"../../../assets/icon-failure-circle.svg\";\nimport { ReactComponent as SuccessIcon } from \"../../../assets/icon-success-circle.svg\";\nimport { ReactComponent as UpgradeIcon } from \"../../../assets/icon-upgrade.svg\";\nimport { plans } from \"../../../pages/Pricing/Pricing.script\";\n",[929,1011],"const states = {\n      free: 0,\n      noobs: 1,\n      geeks: 2,\n      ogs: 3,\n    };",[1017,1049],"const currentState = states[plan];",[47,1189],"import { ethers } from \"ethers\";\nimport { fetchAlgoCollections, fetchAlgoSingle } from \"../../utils/firebase\";\nimport {\n  setCollections,\n  setSingleNfts,\n  setAlgoCollections,\n  setAlgoSingleNfts,\n  setAuroraCollections,\n  setPolygonCollections,\n  setAuroraSingleNfts,\n  setPolygonSingleNfts,\n  setNotification,\n  setCeloCollections,\n  setCeloSingleNft,\n  setSearchContainer,\n} from \"../../gen-state/gen.actions\";\nimport {\n  getGraphCollections,\n  getNftCollections,\n  getSingleNfts,\n  getSingleGraphNfts,\n  getCeloGraphCollections,\n} from \"../../utils\";\nimport {\n  GET_GRAPH_COLLECTIONS,\n  GET_ALL_POLYGON_COLLECTIONS,\n  GET_AURORA_SINGLE_NFTS,\n  GET_POLYGON_SINGLE_NFTS,\n  GET_CELO_SINGLE_NFT,\n  GET_CELO_GRAPH_COLLECITONS,\n} from \"../../graphql/querries/getCollections\";\nimport { celoClient, graphQLClient, graphQLClientPolygon } from \"../../utils/graphqlClient\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport {\n  parseAlgoCollection,\n  parseAlgoSingle,\n  parseAuroraCollection,\n  parseAuroraSingle,\n  parseCeloCollection,\n  parseCeloSingle,\n  parsePolygonCollection,\n  parsePolygonSingle,\n} from \"./fetchData-script\";\n",[232,408],"(data) => {\n      if (result.layerTitle === data.layerTitle) {\n        return { ...data, exists: true };\n      } \n        return { ...data, exists: false };\n      \n    }",[6158,6531],"async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const querySnapshot = query(doc(firestore, `users/${currentUser.uid}/collectionName/${sessionId}`));\n    const docSnapshot = await getDoc(querySnapshot);\n    if (docSnapshot.exists()) {\n      return docSnapshot.data();\n    } \n      console.log(\"collectionName does not exist\");\n    \n  }\n}",[6561,6918],"async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const querySnapshot = query(doc(firestore, `users/${currentUser.uid}/layers/${sessionId}`));\n    const docSnapshot = await getDoc(querySnapshot);\n    if (docSnapshot.exists()) {\n      return docSnapshot.data();\n    } \n      console.log(\"layers does not exist\");\n    \n  }\n}",[6947,7302],"async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const querySnapshot = query(doc(firestore, `users/${currentUser.uid}/rules/${sessionId}`));\n    const docSnapshot = await getDoc(querySnapshot);\n    if (docSnapshot.exists()) {\n      return docSnapshot.data();\n    } \n      console.log(\"rules does not exist\");\n    \n  }\n}",[7335,7698],"async ({ currentUser, sessionId }) => {\n  if (currentUser && sessionId) {\n    const querySnapshot = query(doc(firestore, `users/${currentUser.uid}/nftLayers/${sessionId}`));\n    const docSnapshot = await getDoc(querySnapshot);\n    if (docSnapshot.exists()) {\n      return docSnapshot.data();\n    } \n      console.log(\"nftLayers does not exist\");\n    \n  }\n}",[8197,8211],"const file = {};","name",[9289,9303],[10324,10342],"const newTrait = {};",[11702,11736],"const startTime = performance.now();",[11905,11937],"const endTime = performance.now();",[12116,12163],"const parseRules = JSON.parse(storedRules.rules);",[12810,12815],"const o",[13634,13983],"const iRule = r.map(({ layerId, layerTitle, imageName }) => {\n      let { traits } = layers[layerId];\n      let imageFile = null;\n      for (let { traitTitle, image } of traits) {\n        if (traitTitle === imageName) {\n          imageFile = image;\n          break;\n        }\n      }\n      return { imageFile, layerId, layerTitle, imageName };\n    });",[13700,13733],"const { traits } = layers[layerId];",[13773,13798],"const { traitTitle, image }",[13773,13798],[437,440],"let",[147,243],", getFile } from \"../../utils\";\nimport { v4 as uuid } from \"uuid\";\n",[0,204],"import { v4 as uuid } from \"uuid\";\nimport { setImageAction, setLayers, setOverlay } from \"../../gen-state/gen.actions\";\nimport { dataURItoBlob, handleBlankImage, handleTemplateImage } from \"../../utils\";\n",[534,557],"const newImageFiles = [];",[3083,3094],".Green10",[3254,3264],".High30",[3326,3338],".Middle50",[3509,3519],".High20",[3578,3587],".Low40",[3756,3765],".Cyan1",[3827,3839],".Yellow10",[0,157],"import { useContext } from \"react\";\nimport classes from \"./NoResult.module.css\";\nimport { ReactComponent as CartIcon } from \"../../../assets/icon-cart.svg\";\n",[0,265],"import { useHistory } from \"react-router-dom\";\nimport classes from \"./NoResult.module.css\";\nimport { ReactComponent as CartIcon } from \"../../../assets/icon-cart.svg\";\nimport { useContext } from \"react\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\n",[134,223],", query, where, getDocs } from \"firebase/firestore\";\n",[3426,3604],"const lendy = await db\n      .collection(\"profile\")\n      .doc(`${user}`)\n      .set(\n        {\n          ...userObj,\n        },\n        {\n          merge: true,\n        }\n      );",[18,81],", useContext, useEffect } from \"react\";\n",[0,332],"import { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nimport classes from \"./PricingModal.module.css\";\n",[49,332],"import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\n",[2688,2696],".test",[2701,2701]," ",[542,599],"const percentageCount = (counter.count / totalCount) * 100;",[608,638],"const count = counter.count + 1;",[177,177],",",[0,337],"import { useHistory } from \"react-router-dom\";\nimport classes from \"./profileDropdown.module.css\";\nimport { ReactComponent as SessionIcon } from \"../../assets/icon-session.svg\";\nimport { ReactComponent as SignOutIcon } from \"../../assets/icon-signout.svg\";\nimport { ReactComponent as UpgradeIcon } from \"../../assets/icon-upgrade2.svg\";\n",[0,373],"import { useContext } from \"react\";\nimport classes from \"./profileDropdown.module.css\";\nimport { ReactComponent as SessionIcon } from \"../../assets/icon-session.svg\";\nimport { ReactComponent as SignOutIcon } from \"../../assets/icon-signout.svg\";\nimport { ReactComponent as UpgradeIcon } from \"../../assets/icon-upgrade2.svg\";\nimport { useHistory } from \"react-router-dom\";\n",[2830,2836],"const sv",[0,137],"import { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport classes from \"./CollectionNameModal.module.css\";\n",[85,137],", useContext } from \"react\";\n",[62,522],"import { useState } from \"react\";\nimport { setImageQuality, setOverlay, setMintAmount, setToggleUpgradeModal } from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport CollectionDetails from \"../details/collection-details\";\nimport classes from \"./collection-description.module.css\";\nimport CollectionPreview from \"../preview/collection-preview\";\n// import GenadropToolTip from \"../Genadrop-Tooltip/GenadropTooltip\";\n",[62,563],"import { Link } from \"react-router-dom\";\nimport { setImageQuality, setOverlay, setMintAmount, setToggleUpgradeModal } from \"../../gen-state/gen.actions\";\nimport { GenContext } from \"../../gen-state/gen.context\";\nimport CollectionDetails from \"../details/collection-details\";\nimport classes from \"./collection-description.module.css\";\nimport CollectionPreview from \"../preview/collection-preview\";\n// import GenadropToolTip from \"../Genadrop-Tooltip/GenadropTooltip\";\nimport { useState } from \"react\";\n",[2292,2329],"{ripple} = window.sessionStorage",[4393,4405],"\"/preview\"",[18,105],", useEffect , useContext } from \"react\";\n",[1228,1295],"const storedProvider = JSON.parse(window.localStorage.walletconnect);",[3622,3684],"const proposedChain = Object.keys(walletConnectProvider.rpc)[0];",[7203,7203],[7294,7360],"const networkId = await ethereum.request({ method: \"net_version\" });",[1229,1239],"fill",[311,915],"import { v4 as uuid } from \"uuid\";\nimport { getAlgoData, purchaseCeloNfts, PurchaseNft, purchasePolygonNfts } from \"./arc_ipfs\";\nimport { readSIngleUserNft } from \"./firebase\";\nimport blankImage from \"../assets/blank.png\";\nimport {\n  addLayer,\n  clearLayers,\n  setActiveCollection,\n  setAlgoCollections,\n  setAlgoSingleNfts,\n  setOverlay,\n  setNotification,\n  setCollectionName,\n  clearRule,\n  clearPreview,\n  setCurrentSession,\n  setLayerAction,\n  setImageAction,\n  setNftLayers,\n  setActionProgress,\n  setCurrentPlan,\n} from \"../gen-state/gen.actions\";\nimport supportedChains from \"./supportedChains\";\n",[396,420],"{chain} = this.props",[392,421],"const chain = this.props.chain;",[266,575],"\nimport { NFTStorage, File } from \"nft.storage\";\n//import { NFTStorage } from 'nft.storage';\n//const { NFTStorage } = require('nft.storage')\n//import File from \"nft.storage/src/platform.web\";\n\nimport mime from 'mime'\nimport { setAuroraSingleNfts, setLoader, setNotification } from \"../gen-state/gen.actions\";\n",[409,409],[453,453],[501,501],[568,574],"\"mime\";",[6686,6689],[7089,7373],"\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweEE1QkM4MTI2QkE0NTkxMTM3MmY5QTEyMGIwY2Y0Y0JFMzQ0RURFZEMiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY2MjQ5ODI4NDQ4MiwibmFtZSI6Ik1hcmtvIFNhdmljIC0gRmlyc3QgVGVzdGluZyAgMDYuMDkuMjAyMiJ9.uhGN9gvNYZrCIoYIIzyk3yTIg8We319K-5jreBtVUOQ\";",[7485,7485],";",[7505,7505],[7532,7532],[7556,7556],[7583,7583],[7606,7606],[7607,7609],[7612,7656],"const metadataJSON =  JSON.stringify(metadata)",[7630,7656]," JSON.stringify(metadata);",[7683,7683],[7711,7711],[7718,7718],[7779,7780],[7888,7889],[7907,7908],[7936,7937],[7953,7957],"    });",[7960,7976],"} catch (error) ",[8195,8195],[8517,8517],[8522,8523],[20623,20623],[20770,20772],[20777,20777],[21509,21543],"if (connector.isWalletConnect) {",[22048,22053],[23237,23245],"}",[23448,23450],[23498,23498],[23646,23646],[23719,23720],[23780,23780],"  ",[23852,23852],[24204,24204],[24239,24239],[24322,24322],[25075,25088],"`TNX: ${  txn}`",[25089,25089],[25602,25609],[42,173],"import { Line } from \"react-chartjs-2\";\nimport { Chart, registerables } from \"chart.js\";\nimport classes from \"./graph.module.css\";\n",[172,172],"\n",[243,258],"const dates = [];",[366,382],"const prices = [];",[492,538],"`${date.getDate()  }/${  months[date.getMonth()]}`",[1535,1630],"const singleRule = {\n        layerTitle: el.layerTitle,\n        imageName: el.imageName,\n      };",[4444,4447],[6092,6095],[1001,1047],"const canvas = document.createElement(\"canvas\");",[0,326],"import { useContext, useRef, useState } from \"react\";\nimport successIcon from \"../../../assets/icon-success_2.svg\";\nimport linkIconAccent from \"../../../assets/icon-link-accent.svg\";\nimport linkIconWhite from \"../../../assets/icon-link-white.svg\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\n",[0,476],"import { useHistory } from \"react-router-dom\";\nimport successIcon from \"../../../assets/icon-success_2.svg\";\nimport linkIconAccent from \"../../../assets/icon-link-accent.svg\";\nimport linkIconWhite from \"../../../assets/icon-link-white.svg\";\nimport { ReactComponent as CloseIcon } from \"../../../assets/icon-close.svg\";\nimport { useContext, useRef, useState } from \"react\";\nimport classes from \"./popup.module.css\";\nimport { GenContext } from \"../../../gen-state/gen.context\";\n",[368,392],"createOrder",[436,474],"createSubscription",[1420,1441],"const now = new Date();",[1446,1482],"const date = new Date(newDate * 1000);",[1487,1552],"const diff = (now.getTime() - date.getTime()) / (1000 * 3600 * 24);",[1581,1619],"`${parseInt(diff * 24 * 60)  } mins ago`",[1318,1867],"() => {\n    let newDate = data.date.seconds;\n    if (!newDate) {\n      newDate = data.date;\n    }\n    let now = new Date();\n    let date = new Date(newDate * 1000);\n    let diff = (now.getTime() - date.getTime()) / (1000 * 3600 * 24);\n    if (diff < 0.04) return parseInt(diff * 24 * 60) + \" mins ago\";\n    if (diff < 1) return parseInt(diff * 24) + \" hours ago\";\n    else if (diff < 31) return parseInt(diff) + \" days ago\";\n    else if (diff < 356) return parseInt(diff / 30) + \" months ago\";\n    else return diff / 30 / 12 + \" years ago\";\n  }",[1651,1685],"`${parseInt(diff * 24)  } hours ago`",[1718,1746],"`${parseInt(diff)  } days ago`",[1780,1815],"`${parseInt(diff / 30)  } months ago`",[1833,1862],"`${diff / 30 / 12  } years ago`",[3632,3663],"to || breakAddress(data.to)",[3683,3720],"from || breakAddress(data.from)",[53,273],"import { useWheel } from \"@use-gesture/react\";\nimport classes from \"./GenadropCarouselCard.module.css\";\nimport iconRight from \"../../assets/icon-angle-right.svg\";\nimport iconLeft from \"../../assets/icon-angle-left.svg\";\n",[1821,1845],"{length} = children",[60,163],"import CopyToClipboard from \"react-copy-to-clipboard\";\nimport classes from \"./transaction.module.css\";\n",[332,332],[2963,2963]," rel=\"noreferrer\"",[2913,2946],"`${explorer  }tx/${  data.data.txId}`",[4121,4121],[4066,4104],"`${explorer  }address/${  data.data.from}`",[5174,5174],[5121,5157],"`${explorer  }address/${  data.data.to}`",[386,442],"const hideFooter = document.getElementById(\"hide-footer\");",[561,574],".container",[734,742],".text",[963,971],".home",[826,837],[862,873],[53,299],"import { useHistory, useRouteMatch, useLocation } from \"react-router-dom\";\nimport GenadropCarouselCard from \"../../Genadrop-Carousel-Card/GenadropCarouselCard\";\nimport { chains } from \"./Chains-Script\";\nimport classes from \"./Chains.module.css\";\n",[12,80],", { useRef, useEffect, useState } from \"react\";\n",[728,785],"{height} = bannerRef.current.getBoundingClientRect()",[2126,2133],[2199,2206],[2272,2279],{"messageId":"3384","fix":"3385","desc":"3386"},{"messageId":"3387","fix":"3388","desc":"3389"},{"messageId":"3384","fix":"3390","desc":"3386"},{"messageId":"3387","fix":"3391","desc":"3389"},{"messageId":"3384","fix":"3392","desc":"3386"},{"messageId":"3387","fix":"3393","desc":"3389"},[1142,1183],"const first = name.charAt(0).toUpperCase();",[1186,1215],"const rest = name.substring(1);",[1395,1458],"const isValid = Object.values(validate).every((i) => i === true);",[821,844],"{chain} = data.data",[1349,1373],"const current_traits = [];",[1479,1493],"const nftsx = x;",[1561,1564],[1584,1587],[1619,1622],[1736,1739],[1810,1824],".similarity",[1856,1870],[2190,2204],[2492,2495],[2526,2529],[2566,2569],[2596,2599],[2677,2956],"if (j > 0) {\n            var newValue = costs[j - 1];\n            if (s1.charAt(i - 1) != s2.charAt(j - 1)) newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n            costs[j - 1] = lastValue;\n            lastValue = newValue;\n          }",[2714,2717],[429,559],", ReactComponent as DropdownIcon } from \"../../assets/icon-chevron-down.svg\";\n",[36,598],", useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport classes from \"./chainDropdown.module.css\";\nimport polygonIcon from \"../../../assets/icon-polygon.svg\";\nimport algoIcon from \"../../../assets/icon-algo.svg\";\nimport auroraIcon from \"../../../assets/icon-aurora.svg\";\nimport celoIcon from \"../../../assets/icon-celo.svg\";\nimport dropdownIcon from \"../../../assets/icon-caret-down.svg\";\nimport allChainsIcon from \"../../../assets/all-chains.svg\";\nimport supportedChains from \"../../../utils/supportedChains\";\n",[100,598],"import { useContext } from \"react\";\nimport classes from \"./chainDropdown.module.css\";\nimport polygonIcon from \"../../../assets/icon-polygon.svg\";\nimport algoIcon from \"../../../assets/icon-algo.svg\";\nimport auroraIcon from \"../../../assets/icon-aurora.svg\";\nimport celoIcon from \"../../../assets/icon-celo.svg\";\nimport dropdownIcon from \"../../../assets/icon-caret-down.svg\";\nimport allChainsIcon from \"../../../assets/all-chains.svg\";\nimport supportedChains from \"../../../utils/supportedChains\";\n",[0,587],"import { useContext, useRef } from \"react\";\nimport GenadropToolTip from \"../../../components/Genadrop-Tooltip/GenadropTooltip\";\nimport { handleDownload } from \"../../../utils/index2\";\nimport { generateGif, handleCollectionDescription, handleCollectionName, handleFormatChange } from \"../preview-script\";\nimport { ReactComponent as CheckIcon } from \"../../../assets/check-solid.svg\";\nimport CaretDown from \"../../../assets/icon-caret-down.svg\";\nimport CaretUP from \"../../../assets/icon-caret-up.svg\";\nimport TextEditor from \"../text-editor\";\nimport classes from \"../preview.module.css\";\n",[4143,4150],[0,248],"import { useHistory } from \"react-router-dom\";\nimport classes from \"./navbar.module.css\";\nimport { ReactComponent as WarnIcon } from \"../../../assets/icon-warn.svg\";\nimport { ReactComponent as BackIcon } from \"../../../assets/icon-arrow-left.svg\";\n",[53,275],"import { useWheel } from \"@use-gesture/react\";\nimport classes from \"./GenadropCarouselScreen.module.css\";\nimport iconRight from \"../../assets/icon-angle-right.svg\";\nimport iconLeft from \"../../assets/icon-angle-left.svg\";\n",[1995,2140],"(len, view) => {\n    if (len % view === 0) {\n      return Math.floor(len / view) - 1;\n    } \n      return Math.floor(len / view);\n    \n  }",[2527,2631],"const res = Math.floor(Math.floor(scrollLength / (cardWidth + gap / 2)) / slideActiveCount / cardsInView);",[0,309],"import { useContext, useEffect, useState } from \"react\";\nimport classes from \"./walletPopup.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../assets/icon-close.svg\";\nimport metamaskIcon from \"../../assets/icon-metamask.svg\";\nimport walletConnectIcon from \"../../assets/icon-wallet-connect.svg\";\n",[883,907],"const connectOptions = [];",[915,922],"const key",[27,366],"import { v4 as uuid } from \"uuid\";\nimport {\n  addDescription,\n  promptDeleteAsset,\n  renameAsset,\n  setCollectionDescription,\n  setCollectionName,\n  setLoader,\n  setMintInfo,\n  setNftLayers,\n  setNotification,\n  setOutputFormat,\n  setPrompt,\n} from \"../../gen-state/gen.actions\";\nimport { getDefaultName, handleImage } from \"../../utils\";\n",[776,871],[4177,4212],"{attributes} = uniqueLayer","removeEscape",{"range":"3394","text":"3052"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"3395","text":"3396"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"3397","text":"3052"},{"range":"3398","text":"3396"},{"range":"3399","text":"3052"},{"range":"3400","text":"3396"},[342,343],[342,342],"\\",[387,388],[387,387],[403,404],[403,403]]